<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>data on 老高的技术博客</title>
    <link>https://phpgao.github.io/tags/data/</link>
    <description>Recent content in data on 老高的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 13 Feb 2015 01:59:00 +0000</lastBuildDate><atom:link href="https://phpgao.github.io/tags/data/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git仓库删除敏感信息</title>
      <link>https://phpgao.github.io/git_remove_sensitive_data.html</link>
      <pubDate>Fri, 13 Feb 2015 01:59:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/git_remove_sensitive_data.html</guid>
      <description>如果不小心再某一次commit了一个含有敏感信息的文件，如公共的数据库配置。然后又不小心上传至github或者其他远程仓库中，那么想要彻底把此文件删除确实不是一件简单的事情。
因为如果只是在下一次提交中删除或修改了某文件，在git提交的历史中还是能够找到修改前的版本，这个操作无非是掩耳盗铃。
听说前一阵有人专门写爬虫，专门爬云储存的用户名密码，不少人都被黑了。所以如果不小心在git中可能包含敏感信息，commit前一定要仔细检查。
那么如何用正确的姿势删除git中的敏感信息呢？下面看看官方给出的解决步骤：
git删除敏感信息
Reference:
https://help.github.com/articles/remove-sensitive-data/</description>
    </item>
    
    <item>
      <title>PHP导出项目的数据字典</title>
      <link>https://phpgao.github.io/data_dictionary_exported_by_php.html</link>
      <pubDate>Tue, 23 Sep 2014 03:55:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/data_dictionary_exported_by_php.html</guid>
      <description>突然想到这个方法，果然已经有人实现了。
有这个脚本也能看出来，数据表的很多信息都保存在INFORMATION_SCHEMA.TABLES表里，还有数据表注释的重要性！
&amp;lt;?php/*** 生成mysql数据字典* @author niming&amp;lt;287384795@qq.com&amp;gt;*///配置数据库$dbserver = &amp;quot;localhost&amp;quot;;$dbusername = &amp;quot;root&amp;quot;;$dbpassword = &amp;quot;root&amp;quot;;$database = &#39;mydb&#39;;//其他配置$title = &#39;系统数据字典&#39;;$mysql_conn = @mysql_connect(&amp;quot;$dbserver&amp;quot;, &amp;quot;$dbusername&amp;quot;, &amp;quot;$dbpassword&amp;quot;) or die(&amp;quot;Mysql connect is error.&amp;quot;);mysql_select_db($database, $mysql_conn);mysql_query(&#39;SET NAMES utf8&#39;, $mysql_conn);$table_result = mysql_query(&#39;show tables&#39;, $mysql_conn);//取得所有的表名while ($row = mysql_fetch_array($table_result)) {$tables[][&#39;TABLE_NAME&#39;] = $row[0];}//循环取得所有表的备注foreach ($tables AS $k=&amp;gt;$v) {$sql = &#39;SELECT * FROM &#39;;$sql .</description>
    </item>
    
  </channel>
</rss>
