<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>nginx on 老高的技术博客</title>
    <link>https://phpgao.github.io/tags/nginx/</link>
    <description>Recent content in nginx on 老高的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 04 Dec 2018 04:31:00 +0000</lastBuildDate><atom:link href="https://phpgao.github.io/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>V2上看到一个很棒的网站-nginxconfig.io</title>
      <link>https://phpgao.github.io/nginxconfig.html</link>
      <pubDate>Tue, 04 Dec 2018 04:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginxconfig.html</guid>
      <description>&lt;p&gt;nginx的配置老高的博客里有很多篇文章都有讲过，但是总是觉得不是很标准，前些天在V2看到了这个网站，浏览后发现这个工具简直神器！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginx配置一篇足矣</title>
      <link>https://phpgao.github.io/nginx_config.html</link>
      <pubDate>Wed, 18 Oct 2017 07:58:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_config.html</guid>
      <description>&lt;p&gt;nginx的一些配置记录&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Logrotate的基本使用方法</title>
      <link>https://phpgao.github.io/logrotate_conf.html</link>
      <pubDate>Sat, 14 Oct 2017 15:53:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/logrotate_conf.html</guid>
      <description>&lt;p&gt;Linux服务器上我们用Logrotate来分割归档日志文件，结合crond我们可以指定每天在某个时间自动整理日志等文档。本文主要说明了Centos下Logrotate的使用和配置的方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Centos7-安装最新版-NGINX,PHP,Mysql,Mariadb</title>
      <link>https://phpgao.github.io/all_in_centos7.html</link>
      <pubDate>Fri, 24 Feb 2017 06:40:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/all_in_centos7.html</guid>
      <description>&lt;p&gt;自己下载源代码编译很麻烦有没有？注意系统是&lt;strong&gt;Centos7&lt;/strong&gt;！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Let&#39;s-Encrypt-----免费的https证书</title>
      <link>https://phpgao.github.io/let-us_encrypt.html</link>
      <pubDate>Thu, 01 Dec 2016 03:28:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/let-us_encrypt.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/12/2787518341.png&#34; alt=&#34;letsencrypt&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;(图片来自网络)&lt;/p&gt;
&lt;p&gt;老高的证书快过期了(2016-12-11)，本着节约资(R)源(MB)的精神，准备使用&lt;a href=&#34;https://letsencrypt.org/getting-started/&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker使用笔记IV----使用docker的风格分离Nginx-PHP--Mysql</title>
      <link>https://phpgao.github.io/docker-note4-nginx-php-mysql-html.html</link>
      <pubDate>Wed, 29 Jun 2016 04:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker-note4-nginx-php-mysql-html.html</guid>
      <description>&lt;p&gt;今天老高动手实践一下分离nginx和php，还有mysql。即三个image: g-nginx,g-php,g-mysql。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/06/20358963.png&#34; alt=&#34;php7&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginx&#43;php-上传大文件</title>
      <link>https://phpgao.github.io/nginx_php_upload_big_file.html</link>
      <pubDate>Fri, 13 May 2016 03:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_php_upload_big_file.html</guid>
      <description>&lt;p&gt;有时候确实需要上传一些比较大的文件，老高的服务器是nginx+php，二者都需要配置。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一个很无力的403错误</title>
      <link>https://phpgao.github.io/mess_with_error_403.html</link>
      <pubDate>Mon, 18 Jan 2016 03:38:23 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mess_with_error_403.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/01/875541267.png&#34; alt=&#34;403错误&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;老高为了省时省力，在window平台下的开发环境使用了&lt;a href=&#34;http://www.upupw.net/&#34;&gt;UPUPW&lt;/a&gt;，这个环境使得老高可以在5min内搭建出一个完整的(nginx/apache) + PHP + my*开发环境。&lt;/p&gt;
&lt;p&gt;但是最近在调试接口的时候，偶尔会有几个接口直接报错403，于是开始了无尽的403折磨之路。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mac下使用brew配置nginx&#43;php&#43;mysql&#43;PostgreSQL</title>
      <link>https://phpgao.github.io/mac_onmpp.html</link>
      <pubDate>Mon, 07 Sep 2015 09:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mac_onmpp.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/09/1049308967.jpg&#34; alt=&#34;yosemite&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;大家在win下和Linux系统下配置PHP运行环境已经有很多参考资料了，以老高的经验，win下最好用的是UPUPW，linux求方便是centos+kangle，更加复杂的方法可以翻翻老高的&lt;a href=&#34;https://blog.phpgao.com/archives.html&#34;&gt;文章归档&lt;/a&gt;，里面有很多可以参考的内容。&lt;/p&gt;
&lt;p&gt;今天由于工作需要，必须在&lt;strong&gt;OSX&lt;/strong&gt;下配置PHP的开发运行环境，经过一番折腾，终于搞定了！主要参考了&lt;a href=&#34;http://blog.frd.mn/install-nginx-php-fpm-mysql-and-phpmyadmin-on-os-x-mavericks-using-homebrew/&#34;&gt;Install Nginx, PHP-FPM, MySQL and phpMyAdmin on OS X Mavericks or Yosemite&lt;/a&gt;这篇文章，推荐英文好的同学直接看原文。&lt;/p&gt;
&lt;p&gt;下面记录一下！(请按照顺序配置)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决ngx_lua_waf总是提示参数错误的问题</title>
      <link>https://phpgao.github.io/ngx_lua_waf_error_500.html</link>
      <pubDate>Mon, 25 May 2015 05:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ngx_lua_waf_error_500.html</guid>
      <description>&lt;p&gt;最近服务上了ngx_lua_waf以防御攻击，但是ngx_lua_waf的参数确实有些严格，导致自己写文章都被BAN，于是看了看源码，发现可以添加url白名单功能，这不就搞定了！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>删除nginx-fastcgi-cache缓存</title>
      <link>https://phpgao.github.io/nginx-fastcgi-cache-deletion.html</link>
      <pubDate>Wed, 20 May 2015 05:05:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx-fastcgi-cache-deletion.html</guid>
      <description>老高通过nginx的优化配置，配置了fastcgi_cache，服务器使用缓存固然很好，但是也会遇到很尴尬的时候。
比如突然发现某个错别字，在后台改好后发现文章之前已被缓存，不知道还要等多久才能刷新，解决办法是删除生成的文件
但想要找到已经可不容易，有两个办法：
 一个一个找或者直接删除全部缓存 根据nginx的URL &amp;ndash; key的规则，再使用两层hash来定位文件  因为老高缓存的文件数不多，所以最后的解决办法是 &amp;ndash; 关键字过滤
# 找 grep -r &amp;#39;your keywords&amp;#39; . # 删 grep -rl &amp;#39;your keywords&amp;#39; . |xargs rm 下面的也可以
find |xargs grep &amp;#39;your keywords&amp;#39; find |xargs grep -l &amp;#39;your keywords&amp;#39;|xargs rm 顺便记个笔记
# 顺便记一下find限定查找文件和目录 find -type f find -type d # grep --help 中-R也很有用！ grep -r --include=&amp;#34;*.php&amp;#34; </description>
    </item>
    
    <item>
      <title>nginx编译安装ngx_lua模块</title>
      <link>https://phpgao.github.io/nginx_ngx_lua.html</link>
      <pubDate>Tue, 19 May 2015 06:11:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_ngx_lua.html</guid>
      <description>&lt;p&gt;nginx lua模块淘宝开发的nginx第三方模块,它能将lua语言嵌入到nginx配置中,从而使用lua就极大增强了nginx的能力.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginx的优化配置</title>
      <link>https://phpgao.github.io/nginx_optimization.html</link>
      <pubDate>Tue, 19 May 2015 01:12:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_optimization.html</guid>
      <description>&lt;p&gt;老高的服务器最近表示亚历山大，先祭出此篇缓解前端压力，之后再从代码中优化一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用nginx-&#43;-uWSGI运行flask程序</title>
      <link>https://phpgao.github.io/nginx_uwsgi_flask.html</link>
      <pubDate>Mon, 27 Apr 2015 11:46:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_uwsgi_flask.html</guid>
      <description>&lt;p&gt;老高最近写了一个&lt;a href=&#34;https://github.com/phpgao/qrcode-for-ss&#34;&gt;flask小应用&lt;/a&gt;，功能很简单，就是通过读取配置再显示ss的二维码配置，不过想让他运行起来统一管理，还是费了一些周折啊。&lt;/p&gt;
&lt;p&gt;如果你自己Google过，你可能会发现一个关键字uWSGI，他就是本篇的主角。&lt;/p&gt;
&lt;p&gt;名词解释&lt;/p&gt;
&lt;p&gt;Web服务器网关接口（Python Web Server Gateway Interface，缩写为WSGI。
uwsgi与WSGI一样，是一个通信协议。
uWSGI，一个实现了WSGI，uwsgi，http等协议的服务器，与nginx在一个层次。&lt;/p&gt;
&lt;p&gt;鉴于国内的一些教程都写成翔了，那老高就赶紧记录分享一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>centos6新系统初始化脚本</title>
      <link>https://phpgao.github.io/new_cents_shell.html</link>
      <pubDate>Mon, 27 Apr 2015 03:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/new_cents_shell.html</guid>
      <description>&lt;p&gt;最近装机次数有点多，本来想写到这里的&lt;a href=&#34;https://blog.phpgao.com/centos_optimize.html&#34;&gt;centos6 优化脚本与安全脚本&lt;/a&gt;，结果一想还是新开一个帖子吧。&lt;/p&gt;
&lt;p&gt;centos源设置可以参考&lt;a href=&#34;https://blog.phpgao.com/repo_for_centos.html&#34;&gt;Centos源设置&lt;/a&gt;，老高推荐安装阿里源。&lt;/p&gt;
&lt;p&gt;新机子先运行上面的脚本，再运行这个脚本&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用nginx做反向代理</title>
      <link>https://phpgao.github.io/nginx_reverse_proxy.html</link>
      <pubDate>Sun, 12 Apr 2015 04:21:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_reverse_proxy.html</guid>
      <description>&lt;p&gt;很多同学喜欢用nginx做反向代理访问某些网站，原因大家都懂的，今天老高记录一下如何使用nginx做反向代理以及如何配置和优化nginx的反向代理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VPS重做系统都需要做什么</title>
      <link>https://phpgao.github.io/vps_renew.html</link>
      <pubDate>Thu, 25 Dec 2014 10:22:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vps_renew.html</guid>
      <description>&lt;p&gt;重做系统都快成日常了，看来还是需要整理一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>安装编译nginx</title>
      <link>https://phpgao.github.io/nginx_installation.html</link>
      <pubDate>Sun, 21 Dec 2014 13:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_installation.html</guid>
      <description>今天老高更新了一下nginx，顺便把nginx的安装编译过程记录一下，分享给大家！
一并送上之前老高的博文：
将nginx配置为服务
nginx配置详解
下载 官网下载地址：http://nginx.org/en/download.html
准备 安装nginx时必须先安装相应的编译工具
yum -y install gcc gcc-c++ autoconf automake yum -y install zlib zlib-devel openssl openssl-devel pcre-devel centos没有安装make编译器
yum -y install gcc automake autoconf libtool make 建立nginx 组
groupadd -r nginx useradd -s /sbin/nologin -g nginx -r nginx 注释：
zlib:nginx提供gzip模块，需要zlib库支持 openssl:nginx提供ssl功能 pcre:支持地址重写rewrite功能
修改版本号 再编译之前修改默认的版本号是个不错的习惯
vim src/core/nginx.h #define NGINX_VERSION &amp;#34;0.0.0&amp;#34; #define NGINX_VER &amp;#34;phpergao&amp;#34; NGINX_VERSION 编译 高大上的编译参数
./configure \ --prefix=/usr \ --sbin-path=/usr/sbin/nginx \ --conf-path=/etc/nginx/nginx.conf \ --error-log-path=/var/log/nginx/error.log \ --pid-path=/var/run/nginx/nginx.</description>
    </item>
    
    <item>
      <title>将nginx配置为服务</title>
      <link>https://phpgao.github.io/run_nginx_as_service.html</link>
      <pubDate>Thu, 09 Oct 2014 14:15:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/run_nginx_as_service.html</guid>
      <description>编译安装nginx后，没有将nginx配置为服务，则无法使用诸如service nginx restart的命令，下面我们看看如何将其配置为服务。
编写脚本 vi /etc/init.d/nginx 写入以下内容，并修改nginx路径
#!/bin/sh # # nginx - this script starts and stops the nginx daemon # # chkconfig: - 85 15 # description: Nginx is an HTTP(S) server, HTTP(S) reverse # proxy and IMAP/POP3 proxy server # processname: nginx # chkconfig: 2345 90 91 # description: nginx web server # processname: nginx # config: /opt/nginx/conf/nginx.conf # pidfile: /opt/nginx/nginx.pid # Source function library. . /etc/init.d/functions # Source networking configuration.</description>
    </item>
    
    <item>
      <title>nginx配置详解</title>
      <link>https://phpgao.github.io/nginx_conf.html</link>
      <pubDate>Wed, 17 Sep 2014 03:28:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_conf.html</guid>
      <description>#nginx配置详解
用了nginx这么久，很多配置还是记不牢，还是总结一下吧！
基本命令：
service nginx reload service nginx start service nginx stop #检测配置文件是否通过，需要比较高的权限，否则可能会报 Permission denied /usr/sbin/nginx -t #平滑重启 nginx -s reload 当编译安装好nginx后，其配置文件nginx.conf可以在/etc/nginx/下找到！
此文件就是主配置文件了。
##高层的配置
#运行用户 user www; #启动进程,一般等于cpu的总核数 worker_processes auto; #更改worker进程的最大打开文件数限制 worker_rlimit_nofile 100000; #全局错误日志及PID文件 error_log /var/log/nginx/error.log; pid /var/run/nginx.pid; #工作模式及连接数上限 events { #每个工作进程允许最大的同时连接数  worker_connections 65535; #epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能  #如果你使用*BSD，你应该使用kqueue  use epoll; #单个后台worker process进程的最大并发链接数  worker_connections 1024; #设置是否允许，Nginx在已经得到一个新连接的通知时，接收尽可能更多的连接  # multi_accept on; } HTTP 模块 HTTP模块控制着nginx http处理的所有核心特性。
#设定http服务器，利用它的反向代理功能提供负载均衡支持 http { #并不会让nginx执行的速度更快，但它可以关闭在错误页面中的nginx版本数字，这样对于安全性是有好处的  server_tokens off; #设定mime类型,类型由mime.</description>
    </item>
    
    <item>
      <title>为你的网站开启ssl支持</title>
      <link>https://phpgao.github.io/https_support.html</link>
      <pubDate>Sat, 13 Sep 2014 00:47:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/https_support.html</guid>
      <description>&lt;p&gt;前几天再Startssl已经为我的博客申请的证书通过，今天早上学习了RSA加密原理，趁着热乎劲还没过，下午就把本站全部升级为https啦！&lt;/p&gt;
&lt;p&gt;看到这个https，瞬间觉得高大上了许多。大家可能认为为自己的网站开启ssl功能很麻烦，其实不然。下面老高就简单的介绍一下开启的步骤，自己也做个记录。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不同的服务器配置ssl的方法大题思路相同，本文以nginx为例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然你还可以试试&lt;a href=&#34;https://blog.phpgao.com/let-us_encrypt.html&#34;&gt;使用Let&amp;rsquo;s Encrypt &amp;ndash; 免费的https证书&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
