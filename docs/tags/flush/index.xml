<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>flush on 老高的技术博客</title>
    <link>https://phpgao.github.io/tags/flush/</link>
    <description>Recent content in flush on 老高的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 21 May 2014 08:54:00 +0000</lastBuildDate><atom:link href="https://phpgao.github.io/tags/flush/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PHP缓冲研究</title>
      <link>https://phpgao.github.io/php_buffering.html</link>
      <pubDate>Wed, 21 May 2014 08:54:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_buffering.html</guid>
      <description>输出缓冲是个让人头大的问题，因为它不仅牵扯到web语言本身，浏览器自身的原因也会导致无内容输出。
所以，在输出前保险的做法是先输出4096个空白字符，然后再使用缓冲输出内容，这样就可以实现程序随时输出内容啦！
以下代码chrome，FF，IE，Safari，手机chrome，UCWEB 都测试通过，需要注意的是：
在网页最开始一定要输出足够多的字符来骗过浏览器 ob_flush,flush需要一起使用
&amp;lt;?php//以下几个函数作用于PHP及服务器的设置，一般不需要更改/*@apache_setenv(&#39;no-gzip&#39;, 1);@ini_set(&#39;zlib.output_compression&#39;, 0);@ini_set(&#39;implicit_flush&#39;, 1); //==ob_implicit_flush(1);*///检测是否开启缓冲if (ob_get_level() == 0) ob_start();//这里的数字可变 FF:1024 CHROME:0 IE:4096echo str_repeat(&#39; &#39; ,4096);//echo str_pad(&#39;&#39;,4096).&amp;quot;\n&amp;quot;;for ($i = 1; $i&amp;lt;=10; $i++){echo &amp;quot;Line $i&amp;lt;br&amp;gt;&amp;quot;;//ob_end_clean(); //如果再此打开，flush将会报错，因为清空了缓冲区//echo &#39; length: &#39;.ob_get_length();ob_flush();flush();sleep(1);}echo &amp;quot;Done.&amp;quot;;/*ob_end_flush(); //送出输出缓冲区内容并关闭缓冲ob_get_clean(); //得到当前缓冲区的内容并删除当前输出缓。ob_get_contents(); //只是得到输出缓冲区的内容，但不清除它。ob_implicit_flush(1); //将打开或关闭绝对（隐式）刷送。绝对（隐式）刷送将导致在每次输出调用后有一次刷送操作，以便不再需要对 flush() 的显式调用。*//*刷新PHP程序的缓冲，而不论PHP执行在何种情况下（CGI ，web服务器等等）。该函数将当前为止程序的所有输出发送到用户的浏览器。flush() 函数不会对服务器或客户端浏览器的缓存模式产生影响。因此，必须同时使用 ob_flush() 和flush() 函数来刷新输出缓冲。个别web服务器程序，特别是Win32下的web服务器程序，在发送结果到浏览器之前，仍然会缓存脚本的输出，直到程序结束为止。有些Apache的模块，比如mod_gzip，可能自己进行输出缓存，这将导致flush()函数产生的结果不会立即被发送到客户端浏览器。甚至浏览器也会在显示之前，缓存接收到的内容。例如 Netscape 浏览器会在接受到换行或 html 标记的开头之前缓存内容，并且在接受到 &amp;lt;/table&amp;gt; 标记之前，不会显示出整个表格。一些版本的 Microsoft Internet Explorer 只有当接受到的256个字节以后才开始显示该页面，所以必须发送一些额外的空格来让这些浏览器显示页面内容。*/ 以下转自http://www.</description>
    </item>
    
  </channel>
</rss>
