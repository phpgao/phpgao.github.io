<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ssh on 老高的技术博客</title>
    <link>https://phpgao.github.io/tags/ssh/</link>
    <description>Recent content in ssh on 老高的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 20 Dec 2019 07:12:00 +0000</lastBuildDate><atom:link href="https://phpgao.github.io/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>批量复制ssh密钥到Linux系统的主机</title>
      <link>https://phpgao.github.io/batch_key_copy.html</link>
      <pubDate>Fri, 20 Dec 2019 07:12:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/batch_key_copy.html</guid>
      <description>&lt;p&gt;老高的测试环境中机器很多，每次登录都要输入密码很烦人，下面的脚本可以批量导入公钥到指定多个ip中，使用后记得把文件删除掉！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sshpass在macos下可能不好搞定，brew因为安全问题默认不给安装，可以通过别人写好的脚本来安装，其他系统自己想办法！很简单。
&lt;code&gt;brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>保持ssh不自动断开</title>
      <link>https://phpgao.github.io/keep_connect_ssh.html</link>
      <pubDate>Thu, 07 Dec 2017 08:14:38 +0000</pubDate>
      
      <guid>https://phpgao.github.io/keep_connect_ssh.html</guid>
      <description>&lt;p&gt;在mac上ssh自己的服务器后总是会断开，比如wget某一个东西，或者tar一个大文件，如果你总是受此困扰，不妨尝试一下此文里的配置。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker使用笔记V----FTP-与-SSH-支持</title>
      <link>https://phpgao.github.io/docker-note5-ftp-and-ssh.html</link>
      <pubDate>Thu, 30 Jun 2016 08:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker-note5-ftp-and-ssh.html</guid>
      <description>&lt;p&gt;给容器赋予FTP和ssh登录在调试和使用阶段都是很不错的功能！下面看老高怎么实现的。&lt;/p&gt;
&lt;p&gt;(基于ubuntu:xenial)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用ssh的反向隧道管理内网路由器</title>
      <link>https://phpgao.github.io/ssh-reverse-tunnel.html</link>
      <pubDate>Fri, 02 Oct 2015 04:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ssh-reverse-tunnel.html</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;SSH协议真是了不得！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/10/2363969333.png&#34; alt=&#34;pandorabox&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;光是看标题，大家会看的云里雾里的，倾听老高细细道来！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决MAC远程总是Broken-pipe</title>
      <link>https://phpgao.github.io/mac_broken_pipe.html</link>
      <pubDate>Sun, 25 Jan 2015 03:12:56 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mac_broken_pipe.html</guid>
      <description>与ServerAliveInterval的设置有关
vim ~/.ssh/config # add ServerAliveInterval 60 </description>
    </item>
    
    <item>
      <title>将你的git协议由https变为ssh</title>
      <link>https://phpgao.github.io/github_https_to_ssh.html</link>
      <pubDate>Thu, 15 Jan 2015 12:34:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/github_https_to_ssh.html</guid>
      <description>你是不是已经厌倦了每次git push的时候每次都要输入用户名密码，使用下面的方法可以让你使用ssh协议通过密钥验证的方式让你得到解脱。
有两种修改方法
不过再实施前，请先准备好自己的密钥
ssh-keygen -t rsa -C &amp;#34;your_name&amp;#34; 然后登录https://github.com/settings/ssh，添加当前计算机的~/.ssh/id_rsa.pub公钥内容到github。
之后我们使用ssh git@github.com验证是否添加成功，如果返回以下内容，即代表添加成功！
 Hi phpgao! You&amp;rsquo;ve successfully authenticated, but GitHub does not provide shell access.
 下一步就是让我们的git使用公钥验证。
clone 保存你的最后一次修改并提交。
删除项目
使用下面的命令clone项目
# 采用ssh的方式克隆项目 # someaccount/someproject.git 中 some account为github用户名/someproject为仓库名 git clone git@github.com:phpgao/BaiduSubmit.git 修改https git remote set-url origin git@github.com:someaccount/someproject.git 顺便提一下，老高的git push总是报warning: push.default is unset错误，今天终于知道为啥了。原来是版本兼容性的原因，低版本的git push如果不指定分支名，就会全部推送，而新版只会推送当前分支。
解决的办法也很简单，我们只需要明确指定应该推送方式即可，至于选择哪种方式，It&amp;rsquo;s up to you.
# 全部推送 git config --global push.default matching # 部分推送 git config --global push.default simple 完</description>
    </item>
    
    <item>
      <title>VPS安全之SSH设置</title>
      <link>https://phpgao.github.io/vps_ssh.html</link>
      <pubDate>Mon, 29 Dec 2014 02:58:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vps_ssh.html</guid>
      <description>&lt;p&gt;SSH是管理VPS的重要途径，所以SSH经常会受到攻击，所以我们需要将SSH&lt;strong&gt;武装&lt;/strong&gt;起来，保护我们VPS的安全。&lt;/p&gt;
&lt;p&gt;SSH服务的配置文件位于&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;，我们的安全设置都是围绕此文件展开，所以修改前最好先备份一次，以免出现无法登陆的情况。&lt;/p&gt;
&lt;p&gt;修改完不要忘了执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;service sshd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>mac下ssh总是失去响应</title>
      <link>https://phpgao.github.io/ssh_on_mac.html</link>
      <pubDate>Thu, 09 Oct 2014 14:02:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ssh_on_mac.html</guid>
      <description>自从使用mac以后，ssh连接总是超时成了老高的一个心病啊，只要一小会儿不动电脑，远程就失去相应，或者干脆直接提示broken pipe，然后断掉。现在终于有了算是能接受的解决办法。
方法一：直截了当砍掉法 ~.，是的，你没有看错！这个组合命令就是主动断开ssh的命令，不行自己问问man。
方法二：修改配置文件 服务器和客户端每隔一定的时间会发一个KeepAlive请求，避免因为路由器或线路的限制而断线，例子中的60s可以因具体的环境改变。
针对服务器端 修改/etc/ssh/sshd_config，修改ServerAliveInterval一项，而ServerAliveCountMax表示如果失败重试的次数
ServerAliveInterval 60ServerAliveCountMax 3 针对客户端 vi /etc/ssh_configClientAliveInterval 60ClientAliveCountMax 3 完</description>
    </item>
    
    <item>
      <title>(转)UBUNTU之SSH登陆认证慢的解决办法</title>
      <link>https://phpgao.github.io/ubuntu_slow_ssh_authorize.html</link>
      <pubDate>Thu, 26 Jun 2014 14:56:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ubuntu_slow_ssh_authorize.html</guid>
      <description>步骤一 关闭ssh的gssapi认证
vi /etc/ssh/ssh_config 注释掉如下两行
GSSAPIAuthentication yes GSSAPIDelegateCredentials no  步骤二 关闭ssh的UseDNS
vi /etc/ssh/sshd_config  注：ubuntu的sshd_config文件没有UseDNS参数,而据我了解,其它类*NIX、*BSD操作系统的sshd_config都有UseDNS参数，且它们缺省都是&amp;quot;UseDNS yes&amp;quot;，那估计ubuntu的sshd_config虽然没有UseDNS，那它缺省也是&amp;quot;UseDNS yes&amp;quot;了
于是，在sshd_config末尾处插入如下行
UseDNS no  然后执行指令&amp;quot;/etc/init.d/ssh restart&amp;quot;，重启ssh服务，配置生效
经测试，使用此方法后，ubuntu的认证时间大大缩短，原来其登录认证一般耗时在10秒以上15秒左右，有些时候甚至达到20多秒到30秒左右，而经过此修改，ubuntu的登录认证时间将会缩短在3秒以内。</description>
    </item>
    
    <item>
      <title>解决Ubuntu下ssh无法启动</title>
      <link>https://phpgao.github.io/ubuntu_ssh.html</link>
      <pubDate>Sat, 21 Jun 2014 15:25:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ubuntu_ssh.html</guid>
      <description>安装完Ubuntu后自然需要使用ssh远程管理，但是sudo apt-get install openssh-server后虽然安装成功，但是总是提示
 Unknown job: ssh 百度之，未解决 google之，
 运行
sudo /usr/sbin/sshd 提示
 Missing privilege separation directory: /var/run/sshd (缺少权限分离目录)
 然后运行
sudo mkdir /var/run/sshdsudo /usr/sbin/sshdnetstat -nlt 应该能看到22端口已经启用！</description>
    </item>
    
  </channel>
</rss>
