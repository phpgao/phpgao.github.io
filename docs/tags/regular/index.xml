<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>regular on 老高的技术博客</title>
    <link>https://phpgao.github.io/tags/regular/</link>
    <description>Recent content in regular on 老高的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 22 Jul 2014 07:51:00 +0000</lastBuildDate><atom:link href="https://phpgao.github.io/tags/regular/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>正则表达式教程</title>
      <link>https://phpgao.github.io/regex_abc.html</link>
      <pubDate>Tue, 22 Jul 2014 07:51:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/regex_abc.html</guid>
      <description>&lt;h1 id=&#34;正则表达式入门&#34;&gt;正则表达式入门&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;概念&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;字符是计算机软件处理文字时最基本的单位，可能是字母，数字，标点符号，空格，换行符，汉字等等。字符串是0个或更多个字符的序列。文本也就是文字，字符串。
正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;支持&#34;&gt;支持&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;在最近的六十年中，正则表达式逐渐从模糊而深奥的数学概念，发展成为在计算机各类工具和软件包应用中的主要功能。不仅仅众多UNIX工具支持正则表达式，近二十年来，在WINDOWS的阵营下，正则表达式的思想和应用在大部分 Windows 开发者工具包中得到支持和嵌入应用！从正则式在Microsoft Visual Basic 6 或 Microsoft VBScript到.NET Framework中的探索和发展，WINDOWS系列产品对正则表达式的支持发展到无与伦比的高度，几乎所有 Microsoft 开发者和所有.NET语言都可以使用正则表达式。如果你是一位接触计算机语言的工作者，那么你会在主流操作系统（*nix[Linux, Unix等]、Windows、HP、BeOS等）、主流的开发语言（PHP、C#、Java、C++、VB、Javascript、Ruby以及python等）、数以亿万计的各种应用软件中，都可以看到正则表达式优美的舞姿。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上内容引自百度百科&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>常用正则表达式速查</title>
      <link>https://phpgao.github.io/regex_fast_reference.html</link>
      <pubDate>Mon, 28 Apr 2014 15:46:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/regex_fast_reference.html</guid>
      <description>“^\d+$”　//非负整数（正整数 + 0）“^[0-9]*[1-9][0-9]*$”　//正整数“^((-\d+)|(0+))$”　//非正整数（负整数 + 0）“^-[0-9]*[1-9][0-9]*$”　//负整数“^-?\d+$”　//整数“^\d+(\.\d+)?$”　//非负浮点数（正浮点数 + 0）“^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$”　//正浮点数“^((-\d+(\.\d+)?)|(0+(\.0+)?))$”　//非正浮点数（负浮点数 + 0）“^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$”　//负浮点数“^(-?\d+)(\.\d+)?$”　//浮点数“^[A-Za-z]+$”　//由26个英文字母组成的字符串“^[A-Z]+$”　//由26个英文字母的大写组成的字符串“^[a-z]+$”　//由26个英文字母的小写组成的字符串“^[A-Za-z0-9]+$”　//由数字和26个英文字母组成的字符串“^\w+$”　//由数字、26个英文字母或者下划线组成的字符串“^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$”　//email地址“^[a-zA-z]+://(\w+(-\w+)*)(\.(\w+(-\w+)*))*(\?\S*)?$”　//url/^(d{2}|d{4})-((0([1-9]{1}))|(1[1|2]))-(([0-2]([1-9]{1}))|(3[0|1]))$/ // 年-月-日/^((0([1-9]{1}))|(1[1|2]))/(([0-2]([1-9]{1}))|(3[0|1]))/(d{2}|d{4})$/ // 月/日/年“^([w-.]+)@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.)|(([w-]+.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(]?)$” //Emil/^((\+?[0-9]{2,4}\-[0-9]{3,4}\-)|([0-9]{3,4}\-))?([0-9]{7,8})(\-[0-9]+)?$/ //电话号码“^(d{1,2}|1dd|2[0-4]d|25[0-5]).(d{1,2}|1dd|2[0-4]d|25[0-5]).(d{1,2}|1dd|2[0-4]d|25[0-5]).(d{1,2}|1dd|2[0-4]d|25[0-5])$” //IP地址 匹配中文字符的正则表达式： [\u4e00-\u9fa5] 匹配双字节字符(包括汉字在内)：[^\x00-\xff] 匹配空行的正则表达式：\n[\s| ]*\r 匹配HTML标记的正则表达式：/&amp;lt;(.*)&amp;gt;.*&amp;lt;\/\1&amp;gt;|&amp;lt;(.*) \/&amp;gt;/ 匹配首尾空格的正则表达式：(^\s*)|(\s*$) 匹配Email地址的正则表达式：\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*
匹配网址URL的正则表达式：^[a-zA-z]+://(\\w+(-\\w+)*)(\\.(\\w+(-\\w+)*))*(\\?\\S*)?$ 匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 匹配国内电话号码：(\d{3}-|\d{4}-)?(\d{8}|\d{7})? 匹配腾讯QQ号：^[1-9]*[1-9][0-9]*$
元字符及其在正则表达式上下文中的行为：
\ 将下一个字符标记为一个特殊字符、或一个原义字符、或一个后向引用、或一个八进制转义符。^ 匹配输入字符串的开始位置。如果设置了 RegExp 对象的Multiline 属性，^ 也匹配 ’\n’ 或 ’\r’ 之后的位置。$ 匹配输入字符串的结束位置。如果设置了 RegExp 对象的Multiline 属性，$ 也匹配 ’\n’ 或 ’\r’ 之前的位置。* 匹配前面的子表达式零次或多次。+ 匹配前面的子表达式一次或多次。+ 等价于 {1,}。?</description>
    </item>
    
  </channel>
</rss>
