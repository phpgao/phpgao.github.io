<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ldd on 老高的技术博客</title>
    <link>https://phpgao.github.io/tags/ldd/</link>
    <description>Recent content in ldd on 老高的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 17 May 2015 10:09:00 +0000</lastBuildDate><atom:link href="https://phpgao.github.io/tags/ldd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>发现一个命令ldd</title>
      <link>https://phpgao.github.io/good_cmd_ldd.html</link>
      <pubDate>Sun, 17 May 2015 10:09:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/good_cmd_ldd.html</guid>
      <description>ldd是Linux库操作中最实用的一个命令了，他可以查看一个程序所依赖的库。
如果你的程序执行起来缺少某个库，我们就去下载，但是把库放到哪里才能让程序正确是识别出来呢？使用ldd就可以了！
使用方法: ldd [options] file 功能:列出file运行所需的共享库 可用选项
➜ sbin ldd --help Usage: ldd [OPTION]... FILE... --help print this help and exit --version print version information and exit -d, --data-relocs process data relocations 执行符号重部署，并报告缺少的目标对象 -r, --function-relocs process data and function relocations 对目标对象和函数执行重新部署，并报告缺少的目标对象和函数 -u, --unused print unused direct dependencies 打印不需要链接的库 -v, --verbose print all information 打印所有信息 例子
➜ /bin ldd /bin/cp linux-vdso.so.1 =&amp;gt; (0x00007fff8dbfe000) libselinux.so.1 =&amp;gt; /lib64/libselinux.so.1 (0x00007f94558e4000) librt.so.1 =&amp;gt; /lib64/librt.so.1 (0x00007f94556dc000) libacl.</description>
    </item>
    
  </channel>
</rss>
