<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on 老高的技术博客</title>
    <link>https://phpgao.github.io/posts/</link>
    <description>Recent content in Posts on 老高的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 26 Oct 2020 08:04:00 +0000</lastBuildDate><atom:link href="https://phpgao.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>获取QQ头像</title>
      <link>https://phpgao.github.io/qq_face_url.html</link>
      <pubDate>Mon, 26 Oct 2020 08:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/qq_face_url.html</guid>
      <description>&lt;p&gt;最近有一个需求，某个需求的某个功能是获取QQ号码的头像，虽然QQ内部有方法能够获取到这个头像的URL，但是多一次请求总是会对性能有影响，所以最后搜索到了一种方法，只要只到对方的QQ号码，就可以拿到Ta的头像。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>批量复制ssh密钥到Linux系统的主机</title>
      <link>https://phpgao.github.io/batch_key_copy.html</link>
      <pubDate>Fri, 20 Dec 2019 07:12:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/batch_key_copy.html</guid>
      <description>&lt;p&gt;老高的测试环境中机器很多，每次登录都要输入密码很烦人，下面的脚本可以批量导入公钥到指定多个ip中，使用后记得把文件删除掉！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sshpass在macos下可能不好搞定，brew因为安全问题默认不给安装，可以通过别人写好的脚本来安装，其他系统自己想办法！很简单。
&lt;code&gt;brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>git-批量删除tag</title>
      <link>https://phpgao.github.io/git_delete_tags.html</link>
      <pubDate>Fri, 13 Dec 2019 02:12:21 +0000</pubDate>
      
      <guid>https://phpgao.github.io/git_delete_tags.html</guid>
      <description>一句话代码
# 批量删除远程tag git tag -l|xargs git push origin --delete tag # 批量删除本地tag git tag -l|xargs git tag -d </description>
    </item>
    
    <item>
      <title>docker系统源加速命令</title>
      <link>https://phpgao.github.io/docker_sed.html</link>
      <pubDate>Tue, 10 Dec 2019 02:23:53 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_sed.html</guid>
      <description>alpine  注：如果有@test或者@edge，可以先add后在sed
 sed -i &amp;#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&amp;#39; /etc/apk/repositories ubuntu sed -i &amp;#39;s/archive.ubuntu.com/mirrors.aliyun.com/g&amp;#39; /etc/apt/sources.list &amp;amp;&amp;amp; \  sed -i &amp;#39;s/security.ubuntu.com/mirrors.aliyun.com/g&amp;#39; /etc/apt/sources.list </description>
    </item>
    
    <item>
      <title>Centos8-初体验</title>
      <link>https://phpgao.github.io/centos8_experience.html</link>
      <pubDate>Tue, 26 Nov 2019 06:34:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/centos8_experience.html</guid>
      <description>&lt;p&gt;centos8已经发布有一段时间了，老高近期下载并安装了&lt;code&gt;CentOS-8-x86_64-1905-boot.iso&lt;/code&gt;版本，给大家当个小白鼠！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2019/11/3214508915.png&#34; alt=&#34;begin.png&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang的goproxy</title>
      <link>https://phpgao.github.io/goproxy.html</link>
      <pubDate>Tue, 26 Nov 2019 05:13:26 +0000</pubDate>
      
      <guid>https://phpgao.github.io/goproxy.html</guid>
      <description>既然go module已经官方支持，那么以后新建项目就直接go mod init了，但是老高在最近的开发中遇到了一个超级难题，包下不下来。。。
经过一番摸索和尝试，发现最好用的还是GOPROXY，于是给大家推荐几个GOPROXY地址，方便后期使用
export GOPROXY=https://goproxy.cn,direct, export GOPROXY=https://goproxy.io,direct, export GOPROXY=https://mirrors.aliyun.com/goproxy,direct, </description>
    </item>
    
    <item>
      <title>一个flag引发的惨案(memcached)</title>
      <link>https://phpgao.github.io/memcached_flag_error.html</link>
      <pubDate>Wed, 20 Nov 2019 05:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/memcached_flag_error.html</guid>
      <description>&lt;h2 id=&#34;起因&#34;&gt;起因&lt;/h2&gt;
&lt;p&gt;老高最近在重构一个服务，流程中有一步需要将数据格式化后放入memcached中，改数据之后会被另一个服务消费。老高使用的Python的&lt;code&gt;pymemcache&lt;/code&gt;包，调用add方法后没有错误。然后通知另一个JAVA服务来读数据，JAVA使用的包名为&lt;code&gt;com.danga.MemCached&lt;/code&gt;。该服务接受到消费任务后就来找之前放在memecached中的数据，好的！问题来了。&lt;/p&gt;
&lt;p&gt;JAVA用什么方法都读不到Python放进去的数据，但是JAVA自己放自己取是能读到的。
PYTHON同理，能够读到自己设置的数据，但是读取JAVA程序设置的值有乱码。
通过命令行设置的值JAVA读取有问题，Python没问题。&lt;/p&gt;
&lt;p&gt;程序猿的直觉告诉我，肯定是库出了问题！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>国内加速Homebrew</title>
      <link>https://phpgao.github.io/homebrew_boost.html</link>
      <pubDate>Mon, 09 Sep 2019 02:21:36 +0000</pubDate>
      
      <guid>https://phpgao.github.io/homebrew_boost.html</guid>
      <description>感谢ustc
brew 以及 homebrew-core # 替换brew.git: cd &amp;#34;$(brew --repo)&amp;#34; git remote set-url origin https://mirrors.ustc.edu.cn/brew.git # 替换homebrew-core.git: cd &amp;#34;$(brew --repo)/Library/Taps/homebrew/homebrew-core&amp;#34; git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git bottles # 对于bash用户： echo &amp;#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&amp;#39; &amp;gt;&amp;gt; ~/.bash_profile source ~/.bash_profile # 对于zsh用户 echo &amp;#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&amp;#39; &amp;gt;&amp;gt; ~/.zshrc source ~/.zshrc 重置 # 重置brew.git: cd &amp;#34;$(brew --repo)&amp;#34; git remote set-url origin https://github.com/Homebrew/brew.git # 重置homebrew-core.git: cd &amp;#34;$(brew --repo)/Library/Taps/homebrew/homebrew-core&amp;#34; git remote set-url origin https://github.com/Homebrew/homebrew-core.git </description>
    </item>
    
    <item>
      <title>QNAP安装Entware</title>
      <link>https://phpgao.github.io/qnap_install_entware.html</link>
      <pubDate>Sat, 07 Sep 2019 09:26:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/qnap_install_entware.html</guid>
      <description>&lt;p&gt;老高才入坑qnap(威联通)，在ssh到NAS后，发现没有常用的zsh、git、sudo，这可让用惯了centos，debian系统的老高情何以堪。&lt;/p&gt;
&lt;p&gt;一番查阅后，老高发现原来QNAP所使用的系统QTS可以使用Entware，也就是opkg最为包管理系统，这不就简单了，老高以前在OpenWrt上用的就是这个玩意儿！&lt;/p&gt;
&lt;p&gt;本篇内容可以让你学会如何在QNAP上安装Entware-ng，以及zsh，git，sudo还有ohmyzsh等常用工具，并且保证他们不会被系统还原！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mac-quick-look插件大全</title>
      <link>https://phpgao.github.io/mac_quicklook_plugins.html</link>
      <pubDate>Sat, 07 Sep 2019 03:56:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mac_quicklook_plugins.html</guid>
      <description>不要问那么多，装就对了！
brew cask install \ qlimagesize \ qlmarkdown \ qlcolorcode \ quicklook-json \ qlprettypatch \ suspicious-package \ quicklookase \ qlvideo \ provisionql \ quicklookapk \ webpquicklook \ quicklook-pat \ quicklook-csv \ qladdict </description>
    </item>
    
    <item>
      <title>玩转VPS之快速搭建HTTP代理</title>
      <link>https://phpgao.github.io/vps_tinyproxy.html</link>
      <pubDate>Sat, 31 Aug 2019 03:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vps_tinyproxy.html</guid>
      <description>&lt;p&gt;起因：今天想给家里的服务器装一个MacOS，于是果断打开小兵的下载页面，找到最新的14版系统，但是发现一个问题，不论怎么操作，下载速度都不会超过200KB/S，只有氪金了(迅雷)速度才能达到5M，这可难倒了老高！&lt;/p&gt;
&lt;p&gt;不过随着老高的不断尝试，发现使用搬瓦工VPS，直接wget下载速度是8M，稳定的8M，竟然比迅雷都快一点。好嘛，找到了突破口，下面的事情就是如何通过VPS把这个6G大的镜像运到本地！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>记一次frp的被阻断的问题</title>
      <link>https://phpgao.github.io/frp_tcp_reset.html</link>
      <pubDate>Fri, 30 Aug 2019 16:22:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/frp_tcp_reset.html</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;作为一个合格的程序员，应该抱着在哪里都要加班的理想。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了在家调试方便，老高使用frp将自己放在公司的开发机器的ssh端口开放出来了，但是配置frp客户端的过程中总是出现下面的一句话：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2019/08/30 23:42:47 [W] [service.go:82] login to server failed: EOF
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;开始怀疑是frp的版本问题，于是客户端和服务端都换上了最新的版本，结果还是无法解决问题，继续尝试更换端口，问题依旧。&lt;/p&gt;
&lt;p&gt;网上搜索一圈，发现遇到&lt;code&gt;login to server failed: EOF&lt;/code&gt;问题的人还真不少，下面看看老高是如何解决的吧！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>puppeteer的使用教程2---更多设置</title>
      <link>https://phpgao.github.io/puppeteer_basic_settings.html</link>
      <pubDate>Mon, 19 Aug 2019 11:47:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/puppeteer_basic_settings.html</guid>
      <description>&lt;p&gt;在第一篇，老高只是简单的介绍了puppeteer如何安装和简单的用法，在第二篇中，老高为大家带来chrome浏览器的一些基本设置，比如禁止gpu以提升性能等等！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>puppeteer的使用教程1---基本用法</title>
      <link>https://phpgao.github.io/puppeteer.html</link>
      <pubDate>Mon, 19 Aug 2019 10:12:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/puppeteer.html</guid>
      <description>&lt;p&gt;说到爬虫，就不得不接触一些反爬的技术了。其中，针对一些无法绕过或者无法正常阅读的JS代码，我们的最终法宝就是无头浏览器了！&lt;/p&gt;
&lt;p&gt;无头浏览器其实就是为我们提供了一个环境，这个环境让我们可以使用一些指令，这些指令基本能够包含人们能够用到的所有操作，所以特别适合用来做一些自动化测试(界面，接口或者漏洞)，或者爬虫。&lt;/p&gt;
&lt;p&gt;在Puppeteer之前，还是有很多无头浏览器的，比如老牌的selenium，还有phantomJs，目前他们已经基本停止维护，所以我们今天的主角就是Puppeteer了！Puppeteer到底如何使用呢？使用的时候又有哪些坑呢？请听老高一一道来！&lt;/p&gt;
&lt;p&gt;本篇是第一篇，主要让大家对Puppeteer有一个基本的概念！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>记一次网站升级</title>
      <link>https://phpgao.github.io/web_server_update.html</link>
      <pubDate>Sat, 10 Aug 2019 14:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/web_server_update.html</guid>
      <description>&lt;p&gt;老高于今年(2019)初收到了搬瓦工要停止OPENVZ的旧版服务器，同时列表中auto renew的选项被强制置灰。9.9刀的绝版服务器就这样被印上了大大的&lt;code&gt;拆&lt;/code&gt;字，而且还是两台！😂&lt;/p&gt;
&lt;p&gt;跑数据库的那台机器4月到期，于是把数据库先迁移了，跑在一台内存1G的机器上，由于上面还跑了一个git服务和ss，剩余内存也就400MB左右。下来就剩web服务器了，一看8月到期，先就这样吧！&lt;/p&gt;
&lt;p&gt;于是就一晃到了今天。。。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>centos8终于要来了！</title>
      <link>https://phpgao.github.io/centos8_is_coming.html</link>
      <pubDate>Sat, 10 Aug 2019 12:09:27 +0000</pubDate>
      
      <guid>https://phpgao.github.io/centos8_is_coming.html</guid>
      <description>&lt;p&gt;一路从7.0用到7.6，内核从2.7升级到5.X，centos8终于来了！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chrome再一次隐藏了http(s)和www</title>
      <link>https://phpgao.github.io/chrome_hide_https_www.html</link>
      <pubDate>Sat, 10 Aug 2019 09:50:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/chrome_hide_https_www.html</guid>
      <description>&lt;p&gt;Google又出来作恶了，虽然比上一次能好那么一点，只隐藏了www一个二级域名，话不多说，赶紧改回来！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2019/08/751830664.png&#34; alt=&#34;https://blog.phpgao.com&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>魔兽世界原版GM命令合集</title>
      <link>https://phpgao.github.io/wow_gm.html</link>
      <pubDate>Sat, 27 Jul 2019 11:09:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/wow_gm.html</guid>
      <description>&lt;p&gt;自己总结的魔兽世界GM命令，适合魔兽世界的各个版本，比如燃烧的远征，巫妖王等版本！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>从零开始编译wow私服</title>
      <link>https://phpgao.github.io/wow_server.html</link>
      <pubDate>Sat, 27 Jul 2019 08:30:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/wow_server.html</guid>
      <description>&lt;p&gt;自从魔兽世界开始转为月卡时，老高就基本AFK了。。。直到偶然听到歌单里的灰熊丘陵、风暴群山的BGM，又一次的手痒了，不过这次我们不冲点卡，我们以学习的态度搭建一个专属自己的魔兽世界服务器！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Charles的代理设置</title>
      <link>https://phpgao.github.io/setup_charles.html</link>
      <pubDate>Mon, 08 Jul 2019 02:12:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/setup_charles.html</guid>
      <description>&lt;p&gt;MacOS下的开发少不了抓包调试，而Charles绝对是开发者必不可少的抓包工具！&lt;/p&gt;
&lt;p&gt;不过老高在使用Charles时遇到了不少坑，下面总结一下再MacOS下Charles的使用方法吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>炉石传说有多少张卡牌</title>
      <link>https://phpgao.github.io/scrapy_hearthstone.html</link>
      <pubDate>Fri, 05 Jul 2019 02:46:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/scrapy_hearthstone.html</guid>
      <description>&lt;p&gt;炉石传说从老高入坑倒退坑，已经过了好几个年头，玩了这么久，你知道炉石传说有多少张卡牌吗？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答案是标准目前914多张，至于狂野模式是多少，点进来我告诉你。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>关于攒机和买笔记本的建议</title>
      <link>https://phpgao.github.io/buy_computer.html</link>
      <pubDate>Wed, 03 Jul 2019 05:09:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/buy_computer.html</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;9102年了，是时候换机子了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不知道怎么了，老高身边想新装机的同学慢慢多了起来，所以就有不少人问我怎么装机？！这不是搞么，老高可是程序猿啊。。。&lt;/p&gt;
&lt;p&gt;好吧，开个玩笑。其实装个机子，装个系统什么的老高还是略懂一些的。&lt;/p&gt;
&lt;p&gt;下面老高就简单的讲一下买机器时需要注意的点，希望大家看完后能买到让自己不后悔的机子。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用docker搭建私有git服务(gogs&#43;https)</title>
      <link>https://phpgao.github.io/gogs.html</link>
      <pubDate>Mon, 01 Jul 2019 06:18:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/gogs.html</guid>
      <description>&lt;p&gt;为什么有了github还要有自己的平台？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码审计安全(不会随便被删除)&lt;/li&gt;
&lt;li&gt;自己团队需要&lt;/li&gt;
&lt;li&gt;速度更快&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为什么选择gogs?&lt;/p&gt;
&lt;p&gt;请移步&lt;a href=&#34;https://gogs.io/&#34;&gt;官网&lt;/a&gt;学习，配置文件请参考&lt;a href=&#34;https://gogs.io/docs/advanced/configuration_cheat_sheet&#34;&gt;配置文件手册&lt;/a&gt;，配置样例请访问&lt;a href=&#34;https://github.com/gogs/gogs/blob/master/conf/app.ini&#34;&gt;app.ini&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>抖音的学习研究</title>
      <link>https://phpgao.github.io/douyin_spider.html</link>
      <pubDate>Tue, 25 Jun 2019 07:18:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/douyin_spider.html</guid>
      <description>&lt;p&gt;老高由于一些目的，需要研究学习一下抖音视频。记录一下过程，以作备忘。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;重要声明，本教程仅供参考，请勿直接通过本教程的代码或思路爬取抖音视频，否则后果自负！&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>迫于自如甲醛超标，我也来直播一下处理流程</title>
      <link>https://phpgao.github.io/f_ziroom_k.html</link>
      <pubDate>Mon, 17 Jun 2019 03:44:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/f_ziroom_k.html</guid>
      <description>坐标上海，5月底房子到期，刚好公司在此时和自如有合作，最终整租了一间40平一室一厅的非首次出租的自如房，房租半年付，使用公司的优惠便宜了大约300元。
直到一周后搬进去后，我和女友都出现了嗓子疼，咳嗽的症状，而且时间长不通风的情况下一股刺鼻的味道，睡一觉早上醒来嗓子干疼，于是在搬进去的第二天晚上，我开始以关键字 甲醛 自如 学习研究，发现这样住下去肯定命不久矣，于是买了一些初级的检测设备，联系管家，发了自测的甲醛和tvoc超标的图。
而管家的回复让我很郁闷，总结一下：
 这个房子不是首次出租，所以应该不会有问题(我能确定部分墙面肯定是新刷的) 之前住这里的是一家子人，还有一个小孩子，没说有问题 你的设备检测不准  套路过后，他们表示只承认cma报告，可以自己联系或者申请自如检测(后者可能要等很久)。
同时我也把我们公司负责自如的对接人，还有自如方的对接人，管家拉到群里，一起讨论这个问题，果然还是套路回答。这个也在预料之内，于是当天打电话预约了一家有cma资质的检测机构(不打广告了)，第二天早上请假做检测，一个点500，带发票550，7个工作日出结果(那周刚好有端午节，多等了几天)，邮寄纸质cma报告。
等报告期间我住过酒店，不过太贵了就又回去住了几天，一直保持通风，睡觉头都是朝着过道，嗓子又疼了一周。然后找到了新的住处，挑了一个周末搬过去了(还是老房子好啊!)。
终于在过了很久后的今天(20190617)，我终于收到了通知电话，结果确实是甲醛超标，而且只有甲醛超标，听到这个结果我是比较开心的，不是因为得到了有利的证据，而是tvoc没有超标，这玩意儿才是真正的大佬!
纸质报告明天才会拿到，不过之前的电话是有录音的</description>
    </item>
    
    <item>
      <title>在alpine中运行mysql</title>
      <link>https://phpgao.github.io/run_mysql_in_alpine.html</link>
      <pubDate>Sun, 05 May 2019 15:24:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/run_mysql_in_alpine.html</guid>
      <description>&lt;p&gt;搬瓦工的1G内存，想要跑一个MySQL服务，动辄500M内存就没了，剩下一半的内存让我感觉很虚，于是想把是不是把MySQL塞进alpine镜像中看看，结果一搜，果然已经有大神这样做了，使用的是MariaDB，测试下来，同样跑一个博客只需要50M内存就OK，简直完美！&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/yobasystems/alpine-mariadb&#34;&gt;yobasystems/alpine-mariadb&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker-最新安装命令</title>
      <link>https://phpgao.github.io/install_docker_in_centos.html</link>
      <pubDate>Fri, 26 Apr 2019 14:18:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/install_docker_in_centos.html</guid>
      <description>&lt;p&gt;docker就不多说了，按照贴出的代码一步一步就可以安装成功&lt;/p&gt;
&lt;p&gt;安装之前最好手动关闭selinux&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;setenforce 0
getenforce
# Permissive
sed -i &amp;#39;s/SELINUX=enforcing/SELINUX=disabled/&amp;#39; /etc/selinux/config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>go文章和项目收集</title>
      <link>https://phpgao.github.io/golang_project.html</link>
      <pubDate>Fri, 15 Feb 2019 03:37:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/golang_project.html</guid>
      <description>工作学习中遇到了很多有趣的go项目和文章，收集一下
文章或视频 https://golang.org/doc/codewalk/sharemem/ https://blog.labix.org/2011/10/09/death-of-goroutines-under-control https://blog.golang.org/share-memory-by-communicating https://golang.org/doc/codewalk/sharemem/ https://www.youtube.com/watch?v=lLDWF59aZAo http://satran.in/2017/11/15/Implementing_tails_follow_in_go.html https://www.flysnow.org/ https://github.com/polaris1119/The-Golang-Standard-Library-by-Example https://projecteuler.net/ 学习资料 https://github.com/mikespook/Learning-Go-zh-cn https://astaxie.gitbooks.io/build-web-application-with-golang/content/zh/ https://gobyexample.com/ https://github.com/Unknwon/go-fundamental-programming https://github.com/Unknwon/go-rock-libraries-showcases https://golang.org/doc/effective_go.html https://blog.golang.org/laws-of-reflection https://www.youtube.com/channel/UC_BzFbxG2za3bp5NRRRXJSw 项目 https://github.com/go-cmd/cmd https://github.com/fsnotify/fsnotify https://github.com/nathany/looper https://github.com/hpcloud/tail https://gopkg.in/tomb.v2 https://github.com/fatih/color https://github.com/mattn/go-colorable https://github.com/gongo/9t https://github.com/shanghai-edu/multissh https://github.com/gogs/gogs https://github.com/pkg/errors </description>
    </item>
    
    <item>
      <title>golang预定义的系统名称</title>
      <link>https://phpgao.github.io/go_system_cons.html</link>
      <pubDate>Fri, 18 Jan 2019 06:45:22 +0000</pubDate>
      
      <guid>https://phpgao.github.io/go_system_cons.html</guid>
      <description>Golang syslist
Golang预定义的OS列表 aix android darwin dragonfly freebsd hurd js linux nacl netbsd openbsd plan9 solaris windows zos Golang预定义的Arch(架构)列表 386 amd64 amd64p32 arm armbe arm64 arm64be ppc64 ppc64le mips mipsle mips64 mips64le mips64p32 mips64p32le ppc riscv riscv64 s390 s390x sparc sparc64 wasm 你认识几个？</description>
    </item>
    
    <item>
      <title>如何使用openldap搭建LDAP服务篇1--初见LDAP</title>
      <link>https://phpgao.github.io/how_to_config_ldap_server.html</link>
      <pubDate>Sat, 22 Dec 2018 09:13:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/how_to_config_ldap_server.html</guid>
      <description>&lt;p&gt;LDAP是轻量目录访问协议，这个服务从老高进入360就一直在用，LDAP带来的好处真的是很多，你可以把它想象成为一个内网版的单点登录服务，可以让你使用同一组账户密码访问所有支持LDAP验证的系统，为企业的内部运维带来了极大的便利。&lt;/p&gt;
&lt;p&gt;不过想要自己独立搭建一个LDAP服务还是挺麻烦的！不过一旦搭建好了LDAP服务器，剩下的管理和运维就简单多了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>修复nginx空主机头的问题</title>
      <link>https://phpgao.github.io/nignx_empty_host.html</link>
      <pubDate>Wed, 05 Dec 2018 16:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nignx_empty_host.html</guid>
      <description>&lt;p&gt;老高最近在整理服务器的nginx配置，但是整理好之后有一个问题，就是访问一个没有绑定的域名（已解析）的时候，会自动跳转到blog.phpgao.com。为了解决这个问题，查了很多资料，发现此文档&lt;a href=&#34;https://tengine.taobao.org/nginx_docs/cn/docs/http/request_processing.html#how_to_prevent_undefined_server_names&#34;&gt;Nginx如何处理一个请求&lt;/a&gt;，问题解决。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>V2上看到一个很棒的网站-nginxconfig.io</title>
      <link>https://phpgao.github.io/nginxconfig.html</link>
      <pubDate>Tue, 04 Dec 2018 04:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginxconfig.html</guid>
      <description>&lt;p&gt;nginx的配置老高的博客里有很多篇文章都有讲过，但是总是觉得不是很标准，前些天在V2看到了这个网站，浏览后发现这个工具简直神器！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2018面试总结</title>
      <link>https://phpgao.github.io/2018_new_start.html</link>
      <pubDate>Thu, 29 Nov 2018 14:17:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/2018_new_start.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2018/11/3936467250.jpg&#34; alt=&#34;程序猿面试&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;找新工作的念头是在今年6月开始萌发的，其实当时已经开始投简历了，结果因为种种原因(主要是忙?)拖到这会儿才真正开始面试。投简历的平台是boss直聘，简历用的jobDeer的模板，用md写好，生成pdf和doc格式，挂在自己的网站下，方便下载和浏览。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Acme工具配置Let&#39;s-Encrypt通配符HTTPS证书</title>
      <link>https://phpgao.github.io/acme.html</link>
      <pubDate>Thu, 16 Aug 2018 11:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/acme.html</guid>
      <description>&lt;p&gt;老高的域名使用很久了，同时也产生了大量的二级域名，Let&amp;rsquo;s Encrypt虽然每三个月续签的时候不需要加域名参数，但是如果要多加一个或者删除又需要敲一大堆命令，今年(2018)Let&amp;rsquo;s Encrypt强势支持了通配符证书，支持验证的方式是dns，所以需要自己去DNS解析处申请一个API，虽然多了DNS的操作，但是带来的好处真是太多，下面赶紧跟着老高学一下如果使用Acme工具配置Let&amp;rsquo;s Encrypt通配符HTTPS证书吧！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2018/08/3089062749.png&#34; alt=&#34;wildcard&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python-堆排序算法</title>
      <link>https://phpgao.github.io/heap_sort.html</link>
      <pubDate>Mon, 13 Aug 2018 15:41:35 +0000</pubDate>
      
      <guid>https://phpgao.github.io/heap_sort.html</guid>
      <description>&lt;p&gt;老高最近在准备面试，正好复习到堆排序，正好总结一下&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KMP算法笔记II--------学会计算next数组</title>
      <link>https://phpgao.github.io/kmp_2_get_next.html</link>
      <pubDate>Sun, 05 Aug 2018 16:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/kmp_2_get_next.html</guid>
      <description>&lt;p&gt;第一次学习KMP算法走了不少弯路，下面老高按照自己的学习步骤，总结一下KMP算法的要点，如果有错误或者疑问，欢迎指正！&lt;/p&gt;
&lt;p&gt;老高使用python语言实现算法，实现的语言不重要，重要的是他的思想！(其实老高的C语言早已年久失修?)&lt;/p&gt;
&lt;p&gt;本文是系列的第二篇，主要探讨一下KMP算法的思维方式并引出next数组概念。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KMP算法笔记I-------先学会朴素算法</title>
      <link>https://phpgao.github.io/kmp_1_the_basic.html</link>
      <pubDate>Sat, 04 Aug 2018 13:48:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/kmp_1_the_basic.html</guid>
      <description>&lt;p&gt;第一次学习KMP算法走了不少弯路，下面老高按照自己的学习步骤，总结一下KMP算法的要点，如果有错误或者疑问，欢迎指正！&lt;/p&gt;
&lt;p&gt;老高使用python语言实现算法，实现的语言不重要，重要的是他的思想！(其实老高的C语言早已年久失修?)&lt;/p&gt;
&lt;p&gt;本文是系列的第一篇，学习KMP之前最好了解一下朴素算法的写法，为以后的学习最好铺垫，此为渐进式学习！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>单循环链表</title>
      <link>https://phpgao.github.io/single_cycle_linked_list.html</link>
      <pubDate>Thu, 02 Aug 2018 14:34:35 +0000</pubDate>
      
      <guid>https://phpgao.github.io/single_cycle_linked_list.html</guid>
      <description>#!/usr/bin/env python3 # coding=utf-8 class Node: def __init__(self, data): self._data = data self._next = None def set_next(self, node): self._next = node def set_data(self, data): self._data = data def get_data(self): return self._data def get_next(self): return self._next class SingleCycleLinkedList: def __init__(self): self.head = Node(None) self.head.set_next(self.head) # 清空/初始化 def clear(self): self.head.set_next(self.head) # 是否为空 def is_empty(self): return self.head.get_next() == self.head # 获取大小 def size(self): count = 0 cur = self.head.get_next() while cur != self.head: count = count + 1 cur = cur.</description>
    </item>
    
    <item>
      <title>正确下载youtube视频的方式</title>
      <link>https://phpgao.github.io/youtube-dl-the-right-way.html</link>
      <pubDate>Mon, 30 Jul 2018 03:21:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/youtube-dl-the-right-way.html</guid>
      <description>&lt;p&gt;youtube这个&lt;strong&gt;不存在&lt;/strong&gt;的网站上有很多有用的资料，一般来说我们是可以下载所有视频到本地以供离线的情况下的研究学习，网上有很多工具提供了下载功能，但是在试用了很多标称很好用的软件后，老高发现，真的没有一个能和youtube-dl相提并论，所以老高还是记录一下如何使用正确使用youtube-dl！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>记一次黑苹果的安装</title>
      <link>https://phpgao.github.io/first_tonymacx86.html</link>
      <pubDate>Fri, 27 Jul 2018 01:27:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/first_tonymacx86.html</guid>
      <description>&lt;p&gt;最近老高的MBP和MACmini卡的不行，想换硬件吧，硬件直接焊死，简直&lt;em&gt;良心苹果&lt;/em&gt;，参考了很多黑苹果的安装贴后果断决定在我的台式机上安装最新版的macOS-High-Sierra-10.13.6，系统选择的是&lt;a href=&#34;https://blog.daliansky.net/macOS-High-Sierra-10.13.6-17G65-Release-Version-with-Clover-4596-original-mirror.html&#34;&gt;【黑果小兵】&lt;/a&gt;，确实好用，老高十分推荐！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2018/07/2089683343.png&#34; alt=&#34;blackapple&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;先来贴一波老高的渣渣台式机配置吧：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;CPU: i56500
主板: GA b150m power2 小板
内存: 16G 海盗船8*2套装
硬盘: 850evo 750evo(MacOS) SM951(win10) 西数4T红盘你懂的
WIFI: BCM943602CS (黑苹果免驱，win10需要安装驱动)
显卡: 七彩虹 烈焰战神 1066 特供版(穷)
显示器: DELL UP2516D 2k分辨率(开启HiDPI后凑活能看)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;总结一下：&lt;/p&gt;
&lt;p&gt;安装黑苹果需要你对U盘装系统、BIOS、EFI有一个大致的了解，否则还是先补课再来吧，除非你不怕把数据弄丢，或者不管弄成啥样你都有办法重新装Windows系统，那就OK，请瞎折腾吧！！&lt;/p&gt;
&lt;p&gt;还有一点，如果新装机的同学有安装黑苹果的打算，请务必挑选技嘉的板子，老高用这个板子安装黑苹果确实没有遇到什么神坑，过程还算比较顺利，目前老高的黑苹果系统运行流程稳定，睡眠唤醒都很正常，估计也是托了技嘉的福?。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>穿墙神器frp的安装与配置</title>
      <link>https://phpgao.github.io/frp_config.html</link>
      <pubDate>Fri, 13 Jul 2018 11:39:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/frp_config.html</guid>
      <description>&lt;p&gt;如题&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows激活工具的研究学习</title>
      <link>https://phpgao.github.io/windows_activation.html</link>
      <pubDate>Thu, 21 Jun 2018 07:38:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/windows_activation.html</guid>
      <description>&lt;p&gt;老高的K3路由器刷了官改，果然已经集成了最新的vlmcsd，路径为&lt;code&gt;/usr/root/kms/vlmcsd&lt;/code&gt;，命令行为&lt;code&gt;/usr/root/kms/vlmcsd -i /usr/root/kms/vlmcsd.ini -p /tmp/vlmcsd.pid -l /tmp/kms.log&lt;/code&gt;，既然有了这个，我们就学习一下怎么使用KMS激活Windows系统吧！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;严正声明：此篇文章只是研究学习，学习后请勿使用于任何场合！&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>最近数据库总是报错的原因</title>
      <link>https://phpgao.github.io/blog_down.html</link>
      <pubDate>Thu, 21 Jun 2018 06:41:03 +0000</pubDate>
      
      <guid>https://phpgao.github.io/blog_down.html</guid>
      <description>&lt;p&gt;最近博客数据库总是挂掉，很是郁闷，其实出错的原因很简单，老高手贱升级了&lt;code&gt;MySQL 8.0&lt;/code&gt;版本，从目前来看，MySQL 8.0不太适合配置低的机器。&lt;/p&gt;
&lt;p&gt;按照惯例，老高总结一下遇到的问题吧！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用pgbench测试你的数据库性能</title>
      <link>https://phpgao.github.io/how_to_use_pgbench.html</link>
      <pubDate>Tue, 12 Jun 2018 13:01:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/how_to_use_pgbench.html</guid>
      <description>&lt;p&gt;老高最近遇到了一些性能问题，排查起来很麻烦，其中一个步骤就是需要确定当前DB的抗压能力，Google后收获很大，所以赶紧和老高一起学习研究如果使用pgbench测试你的数据库性能吧！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>扶墙的原理</title>
      <link>https://phpgao.github.io/how_to_do_gfw.html</link>
      <pubDate>Thu, 07 Jun 2018 03:32:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/how_to_do_gfw.html</guid>
      <description>&lt;h2 id=&#34;扶墙的原理&#34;&gt;扶墙的原理&lt;/h2&gt;
&lt;p&gt;简单的说说翻墙到底怎么翻！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何备份MySQL-PG数据库并恢复</title>
      <link>https://phpgao.github.io/how_to_backup_and_restore_database.html</link>
      <pubDate>Mon, 04 Jun 2018 04:56:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/how_to_backup_and_restore_database.html</guid>
      <description>&lt;p&gt;老高最近又迁移了一次数据库，期间遇到了很多问题，本文主要记录了如果备份数据库并恢复到新的数据库中！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ps. 由于老高工作用的是PG数据库，而博客用的是MySQL，于是本篇就把二者的用法都写出来吧！&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>使用markdown编写简单的接口文档</title>
      <link>https://phpgao.github.io/markdown_api_doc.html</link>
      <pubDate>Wed, 09 May 2018 03:28:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/markdown_api_doc.html</guid>
      <description>如题，使用markdown格式写接口文档效率还是挺高的，因为你只需要关系接口的功能和内容，而不用在意排版，顺带提一下使用这个工具markdown_tables创建markdown格式的表格不要太方便！
 需要说明的是如果是大型多人合作项目，还是老老实实用apidoc等工具吧。
 接口大类 ----------- [toc] ----------- ### 接口1 #### 接口功能 &amp;gt; 接口说明 #### 接口地址 &amp;gt; 接口地址 #### 返回格式 &amp;gt; JSON #### 请求方式 &amp;gt; GET #### 请求参数 | 参数 | 必选 | 类型 | 默认值 | 说明 | |------|------|--------|--------|-----------------------------------------| | name | ture | string | foo | 请求的项目名 | | type | true | int | bar | 请求项目的类型。1：类型一；2：类型二 。 | #### 返回字段 | 返回字段 | 字段类型 | 说明 | |----------|----------|----------------------------------| | result | int | 返回结果状态。0：正常；1：错误。 | | reason | string | 错误说明 | | data | string | 数据 | #### 字段变化 字段变化说明 #### 接口示例 &amp;gt; 地址：接口地址示例 #```json { &amp;#34;result&amp;#34;: 0, &amp;#34;reason&amp;#34;: &amp;#34;success&amp;#34;, &amp;#34;data&amp;#34;: [] } #```  代码里的#请删除</description>
    </item>
    
    <item>
      <title>小米系统MIUI的证书管理(删除和导入)</title>
      <link>https://phpgao.github.io/miui_cert.html</link>
      <pubDate>Fri, 13 Apr 2018 08:55:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/miui_cert.html</guid>
      <description>找了好久，直接在设置里搜索凭据二次即可！
or
设置\更多设置\系统安全\加密与凭据\信任的凭据 设置\更多设置\系统安全\加密与凭据\从储存设备安装 如果上面的地方找不到，说明你是最新的MIUI系统，证书和凭据的位置搬家了！
设置 -&amp;gt; 密码、隐私与安全 -&amp;gt; 系统安全 -&amp;gt; 加密与凭据 英文系统
Setting -&amp;gt; Password &amp;amp; security -&amp;gt; Privacy -&amp;gt; Encryption &amp;amp; credentials  吐槽一下，为啥MIUI不能直接用证书跳转到这个配置页面。
 </description>
    </item>
    
    <item>
      <title>2018清明节西湖两日游</title>
      <link>https://phpgao.github.io/20180406.html</link>
      <pubDate>Sun, 08 Apr 2018 03:37:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/20180406.html</guid>
      <description>&lt;p&gt;放几张还能看的图吧，雨中的西湖人还是那么多！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统的鄙视链</title>
      <link>https://phpgao.github.io/os_disdain_chain.html</link>
      <pubDate>Sun, 08 Apr 2018 03:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/os_disdain_chain.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>使用Launchrocket管理MacOS的服务</title>
      <link>https://phpgao.github.io/launchrocket.html</link>
      <pubDate>Tue, 03 Apr 2018 14:13:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/launchrocket.html</guid>
      <description>&lt;p&gt;经常使用MacOS做web开发的同学们，当我们使用&lt;code&gt;brew&lt;/code&gt;安装nginx、php后，管理其守护进程的生命周期就基本只能靠类似&lt;code&gt;brew services start nginx&lt;/code&gt;管理了，要是有一个GUI程序为我们管理这些服务进程就好了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP官方中文手册chm下载地址</title>
      <link>https://phpgao.github.io/php_manual.html</link>
      <pubDate>Tue, 27 Mar 2018 06:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_manual.html</guid>
      <description>&lt;p&gt;学习一门语言，官方文档很重要，网上下载到的都是一些过时的PHP官方中文手册，要么是2015年版，要么挂摇头卖狗肉的写的最新，实际下载下来还是2015。偶然间发现原来PHP.NET官网提供下载，本篇文章里老高就来告诉大家PHP官方中文手册chm下载地址。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu-系统一键安装-Shadowsocks-和-KCPTUN-加速</title>
      <link>https://phpgao.github.io/auto_install_shadowsocks_and_kcptun-html.html</link>
      <pubDate>Wed, 14 Mar 2018 07:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/auto_install_shadowsocks_and_kcptun-html.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://blog.phpgao.com/auto_install_shadowsocks_and_kcptun.html&#34;&gt;Centos7 一键安装 Shadowsocks 和 KCPTUN 加速&lt;/a&gt;的兄弟篇，基于&lt;strong&gt;Ubuntu 16.04&lt;/strong&gt;编写，兼容性未测试。&lt;/p&gt;
&lt;p&gt;卸载命令参考&lt;a href=&#34;https://blog.phpgao.com/auto_install_shadowsocks_and_kcptun.html&#34;&gt;Centos7 一键安装 Shadowsocks 和 KCPTUN 加速&lt;/a&gt;里的说明，操作一样。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一些好用好玩的app和web</title>
      <link>https://phpgao.github.io/fun_apps_and_web.html</link>
      <pubDate>Tue, 13 Mar 2018 03:22:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/fun_apps_and_web.html</guid>
      <description>http://www.upupoo.com/ https://docs.microsoft.com/zh-cn/sysinternals/ https://github.com/yangyangwithgnu/hardseed http://www.yingdev.com/projects/wgestures https://www.snipaste.com/ https://www.draw.io http://mikeschultz.xyz/materialette/ https://www.autohotkey.com/ https://windirstat.net/ https://www.ipip.net/download.html#ip_trace https://ivarptr.github.io/yu-writer.site/ http://1218.io/ https://github.com/shadowsocksrr/shadowsocksr-csharp/releases https://www.alertover.com https://send-anywhere.com/business http://pooi.moe/QuickLook/ https://www.chuyu.me/zh-Hans/index.html http://clipber.com/clipber/#download_app http://www.hellofont.cn/ https://github.com/chengr28/RevokeChinaCerts http://code.taobao.org/p/mychrome/src/trunk/release/ https://github.com/sylnsfar/qrcode https://chris.dziemborowicz.com/apps/hourglass/ https://getsharex.com/ http://rufus.akeo.ie/ https://www.xnview.com/en/xnconvert/#downloads https://otp.landian.la/index.html http://www.rjno1.com/mpv-easy-player.html https://github.com/Codeusa/SteamCleaner https://www.shencut.com/ http://www.screentogif.com/?l=zh_cn http://www.traynier.com/software/steammover</description>
    </item>
    
    <item>
      <title>记录一下Telegram的IP地址</title>
      <link>https://phpgao.github.io/telegram_ip.html</link>
      <pubDate>Fri, 09 Mar 2018 03:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/telegram_ip.html</guid>
      <description>&lt;p&gt;斐讯K3刷的官改版用GFWlist上不了TG，估计是TG的服务器IP没有进黑名单，解决办法是手动加入到GFW强制走代理列表。&lt;/p&gt;
&lt;p&gt;20181115更新&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自从玩了塞尔达...</title>
      <link>https://phpgao.github.io/zelda_saigao.html</link>
      <pubDate>Mon, 05 Mar 2018 11:01:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/zelda_saigao.html</guid>
      <description>&lt;p&gt;过年前托朋友入手港版NS，于是过年到现在沉迷塞尔达无法自拔。。。年后又入了DLC季票，大师模式又新开档，目前过了4神兽，就剩加农没打了。。。每天刷刷人马，刷刷Amiibo，捡捡流星也是乐在其中！这篇文章没什么主题，就是想吹吹塞尔达有多好玩！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2018/03/15830282.jpg&#34; alt=&#34;NS 双红&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>常用dig命令</title>
      <link>https://phpgao.github.io/dig.html</link>
      <pubDate>Fri, 02 Feb 2018 07:37:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/dig.html</guid>
      <description>+noall表示隐藏所有内容 +answer 表示显示响应内容
+[no]question,+[no]answer,+[no]authority,+[no]stat,+short
# 直接查询根DNS dig # 指定解析服务器为8.8.8.8 dig @8.8.8.8 phpgao.com # 查询DNS记录 dig -t NS phpgao.com +noall +answer # 查询MX记录 dig -t MX phpgao.com +noall +answer </description>
    </item>
    
    <item>
      <title>2018年了，你在用什么浏览器，我在用什么浏览器</title>
      <link>https://phpgao.github.io/360chrome.html</link>
      <pubDate>Tue, 23 Jan 2018 06:59:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/360chrome.html</guid>
      <description>&lt;p&gt;2018年了，你在用哪个浏览器？&lt;/p&gt;
&lt;p&gt;今天给大家推荐一款很有诚意的浏览器 &amp;mdash; &lt;a href=&#34;http://chrome.360.cn/&#34;&gt;360极速浏览器&lt;/a&gt;，不是那个绿色LOGO的360安全浏览器，而是血统还算纯正的360极速浏览器。为什么想推荐这个浏览器呢？下面老高讲几个超级好用的功能，看看其他做到的浏览器有几个？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP验证IP</title>
      <link>https://phpgao.github.io/php_valid_ip.html</link>
      <pubDate>Tue, 23 Jan 2018 06:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_valid_ip.html</guid>
      <description>正则的效率是在比不上原生的，所以丢个链接(过滤器函数)走人。
二逼正则:
$valid = preg_match(&amp;#39;/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\z/&amp;#39;, $string); 正确正则:
preg_match(&amp;#39;/^(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)(?:[.](?:25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)){3}$/&amp;#39;, $ipAddress); 过滤器的选项，比如可以过滤私有IP地址等。
用法参考Validating an IP address with PHP&amp;rsquo;s filter_var function</description>
    </item>
    
    <item>
      <title>K2P刷padavan教程</title>
      <link>https://phpgao.github.io/padavan_for_k2p.html</link>
      <pubDate>Tue, 23 Jan 2018 05:17:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/padavan_for_k2p.html</guid>
      <description>&lt;p&gt;快上车吧！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;padavan原生支持802.1X认证，虽然K2也行，但是百兆的性能确实跟不上时代了，所以入了K2P愉快的刷起！&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>数据库的优化</title>
      <link>https://phpgao.github.io/fuck_db.html</link>
      <pubDate>Thu, 18 Jan 2018 02:15:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/fuck_db.html</guid>
      <description>&lt;p&gt;在实际工作中，通常会遇到某个进程或者请求运行的十分缓慢，其中大部分的时间都花在了数据库的查询和写入上，每次遇到这个问题就十分头痛。首先，鉴于我们是很底层的程序员，没法花钱给企业加硬件，那我们能完成的事情就是用头脑取分析并优化每一条查询，来获得查询效率的提升。&lt;/p&gt;
&lt;p&gt;老高总结了一下工作中遇到的问题，以后再遇到相同的问题后可以快速排查。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>老高持有的虚拟币(附糖果链接)</title>
      <link>https://phpgao.github.io/shit_coin.html</link>
      <pubDate>Tue, 09 Jan 2018 06:59:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/shit_coin.html</guid>
      <description>总结一下目前持有的币种吧(排名不分先后，量也都不大)
 BTC(比特币) ETH(以太坊) ETC(以太坊经典) QTUM(量子链) BAT(注意力币) PAY DOGE(狗币) EMC2(爱因斯坦币) RDD XVG OMG(嫩模币) JNT(2月上B网)  唉，错过了成为百万负翁的机会，买这个就当买个彩票吧 ?
 顺便分享一波糖果：
需认证  币乎社区注册送7万KEY，2月上交易所，算了一下大概值300，应该靠谱，不过需要实名认证，老高已经领了。。。  无需认证   iost糖果 链接 ，注册后需要到 telegram 发一下注册码就算激活了
  全民持股 BestBi 交易平台全新上线，点击或复制链接到浏览器进行注册，领取免费糖果：best.bi
  www.btcaso.com支持币币和C2C交易，注册就送50个CAC币，交易费全返邀请人。
  </description>
    </item>
    
    <item>
      <title>WootHosting-KVM架构512M内存$15一年</title>
      <link>https://phpgao.github.io/woothosting.html</link>
      <pubDate>Sat, 06 Jan 2018 17:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/woothosting.html</guid>
      <description>&lt;p&gt;WootHosting是老高最近才发现的一款VPS服务商，目测又是华人开的，并且界面和&lt;a href=&#34;https://blog.phpgao.com/hostmybytes.html&#34;&gt;HostMyBytes&lt;/a&gt;简直一模一样，同样支持中文。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mac挂载NTFS免费工具mounty</title>
      <link>https://phpgao.github.io/mounty.html</link>
      <pubDate>Wed, 27 Dec 2017 04:51:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mounty.html</guid>
      <description>&lt;p&gt;你还在为MacOs无法写入NTFS格式的U盘或者移动硬盘烦恼吗？赶紧试试，mac需要安装brew先：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>那些值得一试的油猴(Tampermonkey)脚本</title>
      <link>https://phpgao.github.io/tampermonkey_script.html</link>
      <pubDate>Wed, 13 Dec 2017 04:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/tampermonkey_script.html</guid>
      <description>&lt;p&gt;一下都是老高觉得十分好用的油猴脚本，分享给大家！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>斐讯路由器k2-k2p-k3刷机教程和固件推荐</title>
      <link>https://phpgao.github.io/phicomm_router.html</link>
      <pubDate>Wed, 13 Dec 2017 03:25:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/phicomm_router.html</guid>
      <description>&lt;p&gt;自从2年前斐讯开始免费购机活动开始，老高前前后后入了K1 K2&lt;em&gt;5 K2P&lt;/em&gt;2 K3*2，目前K1已经废弃，K2,K2P,K3都刷好固件后服役，为了让大家更好的薅羊毛，老高总结了一些购买和刷机经验分享给大家。&lt;/p&gt;
&lt;p&gt;K3在家里做主路由，K2P用做二级路由，K2和K2P因为有华硕固件自带802.1x认证，所以在公司做主路由用，关于斐讯K3路由器802.1x，其实其他路由器也是可以的，但是&lt;/p&gt;
&lt;p&gt;通过阅读本文，你可以学到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最适合自己的购买0元购斐讯路由器K2,K2P,K3&lt;/li&gt;
&lt;li&gt;斐讯K2刷机&lt;/li&gt;
&lt;li&gt;斐讯K2p刷机&lt;/li&gt;
&lt;li&gt;斐讯K3刷机&lt;/li&gt;
&lt;li&gt;各种适合斐讯K2,K2P,K3路由器的固件&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>查询IOS可降级版本</title>
      <link>https://phpgao.github.io/f_ck_ios.html</link>
      <pubDate>Wed, 13 Dec 2017 03:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/f_ck_ios.html</guid>
      <description>&lt;p&gt;IP6用到现在，系统版本已经是11了，眼看着系统越来越卡，到现在逛个淘宝都不想用IP看了。废话不多说，这篇文章就是想记录一下查询能够降级的最低版本，让IP6再能撑几年吧。&lt;/p&gt;
&lt;p&gt;下面两个地址可以查询能降级的版本，二者好像数据不太一致，待我降级完成后更新。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用tasker把新短信和未接电话转发到email或server酱</title>
      <link>https://phpgao.github.io/tasker_sms_calls_to_internet.html</link>
      <pubDate>Tue, 12 Dec 2017 09:46:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/tasker_sms_calls_to_internet.html</guid>
      <description>&lt;p&gt;有两个手机号又同时用着IP的同学是不是每天都要带着两部手机闯天下呢？(老高更是有三个手机卡。。)每天在多个手机上操作简直快要精分了，于是想起了之前在PLAY上购买了tasker，貌似可以把多个手机收到的信息转发到网上，比如邮件或者push服务，老高能想到的几个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pushbullet.com/&#34;&gt;Pushbullet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pushover.net/&#34;&gt;Pushover&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://instapush.im/&#34;&gt;Instapush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sc.ftqq.com&#34;&gt;server酱&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;各家服务都差不多，都可以实现用一个API推送你的消息，区别就是UI和价格了，这次就以server酱(免费)为例看看如何设置吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有闲置的手机(最好是小米)也是可以搞一搞的，毕竟那么多神卡可以申请。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>保持ssh不自动断开</title>
      <link>https://phpgao.github.io/keep_connect_ssh.html</link>
      <pubDate>Thu, 07 Dec 2017 08:14:38 +0000</pubDate>
      
      <guid>https://phpgao.github.io/keep_connect_ssh.html</guid>
      <description>&lt;p&gt;在mac上ssh自己的服务器后总是会断开，比如wget某一个东西，或者tar一个大文件，如果你总是受此困扰，不妨尝试一下此文里的配置。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>centos升级内核版本以支持overlay2</title>
      <link>https://phpgao.github.io/update_linux_kernel.html</link>
      <pubDate>Thu, 30 Nov 2017 05:00:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/update_linux_kernel.html</guid>
      <description>&lt;p&gt;搬瓦工新入的KVM架构的机器，默认内核版本是&lt;code&gt;4.10.4&lt;/code&gt;，如果是本地用ISO安装的系统，默认内核版本可能更低，比如&lt;code&gt;3.10.0&lt;/code&gt;，如果我们想要获取到最新的Linux特性，那么就必须升级内核版本到最新，我们可以用很简单的几个命令就可做到。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>php返回json格式的{}花括号</title>
      <link>https://phpgao.github.io/php_return_empty_class.html</link>
      <pubDate>Thu, 23 Nov 2017 06:48:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_return_empty_class.html</guid>
      <description>方括号的[]在json中调试是一个数组，而花括号{}在json中表示一个对象，不过二者在PHP中基本上一个empty就可以判断为i空了，但在js里好像就有一些麻烦了，可能需要下面的判断方式。
p = [] if((Array.isArray(p) &amp;amp;&amp;amp; p.length === 0)){ alert(&amp;#39;[]&amp;#39;); } p = {} if(Object.prototype.isPrototypeOf(p) &amp;amp;&amp;amp; Object.keys(p).length === 0){ alert(&amp;#39;{}&amp;#39;); } WAY1:
$a = json_decode(&amp;#39;{}&amp;#39;); echo json_encode($a); WAY2:
$a = new stdclass; // $a = new ArrayObject(); echo json_encode($a); 虽然花括号{}和方括号的[]二者在PHP和JSON中都表示不同的东西，但是突然要返回空对象还是冷不丁的想一下，我上哪儿去找一个空对象啊? ?</description>
    </item>
    
    <item>
      <title>NProgress-and-DocReady</title>
      <link>https://phpgao.github.io/nprogress_docready.html</link>
      <pubDate>Thu, 16 Nov 2017 06:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nprogress_docready.html</guid>
      <description>&amp;lt;script&amp;gt; NProgress.start(); (function(funcName, baseObj) { // The public function name defaults to window.docReady  // but you can pass in your own object and own function name and those will be used  // if you want to put them in a different namespace  funcName = funcName || &amp;#34;docReady&amp;#34;; baseObj = baseObj || window; var readyList = []; var readyFired = false; var readyEventHandlersInstalled = false; // call this when the document is ready  // this function protects itself against being called more than once  function ready() { if (!</description>
    </item>
    
    <item>
      <title>chrome-firefox-Opera浏览器的正确下载地址</title>
      <link>https://phpgao.github.io/browser-lists.html</link>
      <pubDate>Thu, 09 Nov 2017 02:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/browser-lists.html</guid>
      <description>&lt;p&gt;如果下载Windows版本的Chrome，其实官网会直接给一个很小的下载器，打开下载器才能安装最新版的Chrome，这个很不爽了！&lt;/p&gt;
&lt;p&gt;好在我们可以通过再下载地址URL后加&lt;code&gt;Standalone&lt;/code&gt;参数来告诉Google我们不想要那个安装器。&lt;/p&gt;
&lt;p&gt;还有火狐，一不小心就下载到了国内的定制版本，所以记录一下各个浏览器的下载地址，省的下次又被忽悠了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>按模板生成组合</title>
      <link>https://phpgao.github.io/2754.html</link>
      <pubDate>Tue, 31 Oct 2017 09:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/2754.html</guid>
      <description>&lt;p&gt;收集了一些方法，用来生产域名然后查询注册信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginx配置一篇足矣</title>
      <link>https://phpgao.github.io/nginx_config.html</link>
      <pubDate>Wed, 18 Oct 2017 07:58:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_config.html</guid>
      <description>&lt;p&gt;nginx的一些配置记录&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>所有平台可用的GIT管理工具</title>
      <link>https://phpgao.github.io/git_gui_tool.html</link>
      <pubDate>Wed, 18 Oct 2017 03:54:53 +0000</pubDate>
      
      <guid>https://phpgao.github.io/git_gui_tool.html</guid>
      <description>丢个链接走人，老高现在正在用sourceTree，最近是越来越卡，准备换一个。
GUI Clients</description>
    </item>
    
    <item>
      <title>Virtual-box时间同步</title>
      <link>https://phpgao.github.io/virtua_box_time_sync.html</link>
      <pubDate>Sat, 14 Oct 2017 16:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/virtua_box_time_sync.html</guid>
      <description>&lt;p&gt;当虚拟机安装好之后，如果有一段时间没有启动，当下一次启动时后系统时间会变得和主机环境不一致，我们需要安装一些软件来保证每次开机后会与主机时间同步。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Logrotate的基本使用方法</title>
      <link>https://phpgao.github.io/logrotate_conf.html</link>
      <pubDate>Sat, 14 Oct 2017 15:53:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/logrotate_conf.html</guid>
      <description>&lt;p&gt;Linux服务器上我们用Logrotate来分割归档日志文件，结合crond我们可以指定每天在某个时间自动整理日志等文档。本文主要说明了Centos下Logrotate的使用和配置的方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决rename不支持正则的问题</title>
      <link>https://phpgao.github.io/rename_to_prename.html</link>
      <pubDate>Fri, 13 Oct 2017 11:02:51 +0000</pubDate>
      
      <guid>https://phpgao.github.io/rename_to_prename.html</guid>
      <description>&lt;p&gt;一句话命令&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dropbox新姿势备份服务器数据</title>
      <link>https://phpgao.github.io/dropbox_backup.html</link>
      <pubDate>Fri, 13 Oct 2017 08:00:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/dropbox_backup.html</guid>
      <description>&lt;p&gt;老高以前写过一篇&lt;a href=&#34;https://blog.phpgao.com/dropbox_sync_cli.html&#34;&gt;使用dropbox同步备份网站和数据库&lt;/a&gt;的文章，里面的内容虽说能用，但已经很过时了，今天老高给大家介绍一中更好的方式，那就是用过API备份。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PhpStorm-一些配置</title>
      <link>https://phpgao.github.io/phpstorm_config.html</link>
      <pubDate>Wed, 11 Oct 2017 08:02:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/phpstorm_config.html</guid>
      <description>&lt;p&gt;代码写时间长了难免有重装的时候，然后之前一些自定义的东西就没了，主要是一些格式化，模板等一些规范化的东西，之前看好像有配置导出功能，但是用了一次，貌似没什么卵用，所以还是记下来吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在linux或MacOS统创建和解压cab(cabinet)文件</title>
      <link>https://phpgao.github.io/create_and_extract_cab_file_in_linux_or_macos.html</link>
      <pubDate>Mon, 07 Aug 2017 16:22:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/create_and_extract_cab_file_in_linux_or_macos.html</guid>
      <description>&lt;p&gt;由于工作原因，需要在Linux下操作cab文件，拜访Google后得到两枚神器，在此与大家分享。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2017/08/3551035709.jpeg&#34; alt=&#34;cab file&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Centos7-系统一键安装-Shadowsocks-和-KCPTUN-加速</title>
      <link>https://phpgao.github.io/auto_install_shadowsocks_and_kcptun.html</link>
      <pubDate>Thu, 03 Aug 2017 04:17:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/auto_install_shadowsocks_and_kcptun.html</guid>
      <description>&lt;p&gt;新安装的centos7系统可以使用下面的安装脚本一键安装$$，如果嫌复制粘贴麻烦，可以到&lt;a href=&#34;https://github.com/phpgao/my_scripts/tree/master/code&#34;&gt;脚本地址&lt;/a&gt;下载&lt;/p&gt;
&lt;h2 id=&#34;安装命令&#34;&gt;安装命令&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sh -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/phpgao/my_scripts/master/code/ss_for_centos.sh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 或者&lt;/span&gt;

sudo sh -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/phpgao/my_scripts/master/code/ss_for_centos.sh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装完毕后查看ss配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cat /etc/ss-config.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看kcptun配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;/etc/kcp-config.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果想要修改，使用vi命令即可。修改完记得重启服务才能生效！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;# 重启ss服务
systemctl restart shadowsocks-server

# 重启kcptun服务
systemctl restart kcp-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>系统下载</title>
      <link>https://phpgao.github.io/system_ed2k.html</link>
      <pubDate>Mon, 10 Jul 2017 08:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/system_ed2k.html</guid>
      <description>&lt;p&gt;记录一下&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang简介</title>
      <link>https://phpgao.github.io/golang.html</link>
      <pubDate>Fri, 23 Jun 2017 05:13:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/golang.html</guid>
      <description>&lt;h1 id=&#34;golang简介&#34;&gt;Golang简介&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>GarageBand中官方课程官网下载地址</title>
      <link>https://phpgao.github.io/garageband_download.html</link>
      <pubDate>Thu, 18 May 2017 03:18:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/garageband_download.html</guid>
      <description>&lt;p&gt;弃ukulele转吉他，刚好GarageBand有教程，就不要脸的记录一下下载方法。有时间的话老高会把资源上传网盘，并更新下载地址。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2017/05/2351783159.jpg&#34; alt=&#34;GarageBand&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cron在Centos上的安装方法</title>
      <link>https://phpgao.github.io/cron_on_centos.html</link>
      <pubDate>Fri, 17 Mar 2017 08:25:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/cron_on_centos.html</guid>
      <description>&lt;p&gt;Centos最小化安装时候貌似crond是不带的，需要自己手动安装。但是Centos不同的版本安装命令不一样，在此记录一下！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>树莓派安装记录-usb-samba-aria2-xware-apt-get</title>
      <link>https://phpgao.github.io/raspberry_setup_tool.html</link>
      <pubDate>Wed, 15 Mar 2017 15:49:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/raspberry_setup_tool.html</guid>
      <description>&lt;p&gt;老高的R6300v2自从刷了梅林后，一直在挂硬盘做迅雷离线下载。眼看着夏天到了，还是给路由器减减压，于是祭出老早买的树莓派2B，再次踏上折腾之路。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Laravel的容器的工作原理</title>
      <link>https://phpgao.github.io/laravel_container.html</link>
      <pubDate>Tue, 14 Mar 2017 16:08:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/laravel_container.html</guid>
      <description>&lt;p&gt;使用Laravel有一段时间了，终于抽点了时间看了一下其laravel实现的IOC控制反转的概念，确实很有意思。&lt;/p&gt;
&lt;p&gt;Laravel的容器虽然和docker的容器概念不同，但是都一样承载了十分重要的信息！docker的容器为程序提供了可读写的环境，Lravel的容器为类的初始化提供了便利，解决了以依赖注入和资源获取的问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>体验Alpine-Linux-Docker-Image</title>
      <link>https://phpgao.github.io/docker_alpine.html</link>
      <pubDate>Fri, 10 Mar 2017 05:23:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_alpine.html</guid>
      <description>&lt;p&gt;如果你已经研究过老高的&lt;a href=&#34;https://blog.phpgao.com/kcptun_on_sakura.html&#34;&gt;为樱花打造的KCPTUN&lt;/a&gt;，此docker镜像就是基于Alpine最新版，当时只是简单的使用了一下，这次老高想深入研究一下docker的Alpine。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2017/03/3782981747.png&#34; alt=&#34;alpine_log&#34;  /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Alpine做名词将意思是高山植物，估计想表达简单，耐用的意思吧。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Windows10,Windows7复原音量合成器</title>
      <link>https://phpgao.github.io/win10_sound_mixer_reset.html</link>
      <pubDate>Thu, 09 Mar 2017 14:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/win10_sound_mixer_reset.html</guid>
      <description>&lt;p&gt;有时候临时降低了某个程序的音量，但是之后如何恢复默认设置确实是个麻烦事儿，&lt;/p&gt;
&lt;p&gt;网上搜索了一堆教程有的教程竟然叫你重新安装声卡驱动，简直要死了。。。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2017/03/2809581131.png&#34; alt=&#34;sound_mixer&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一句话命令</title>
      <link>https://phpgao.github.io/simple_command_line.html</link>
      <pubDate>Thu, 09 Mar 2017 09:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/simple_command_line.html</guid>
      <description>&lt;p&gt;记录一些比较简单又懒得记得命令&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>高性价比VPS再现---DeployNode</title>
      <link>https://phpgao.github.io/deploynode.html</link>
      <pubDate>Thu, 09 Mar 2017 07:37:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/deploynode.html</guid>
      <description>&lt;p&gt;该服务器位于法国，后台管理界面很不错，1G内存用起来很爽，老高机器的IP是&lt;strong&gt;213.32.42.xx&lt;/strong&gt;，欢迎骚扰。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://deploynode.com/clients/aff.php?aff=3&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2017/03/1889568454.png&#34; alt=&#34;deploynode&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一个ss的安装脚本</title>
      <link>https://phpgao.github.io/shadowsocks_install_script.html</link>
      <pubDate>Thu, 09 Mar 2017 07:30:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/shadowsocks_install_script.html</guid>
      <description>&lt;p&gt;这个脚本是写给小白和我用的，可以直接在&lt;strong&gt;centos&lt;/strong&gt;上可以执行，使用方法很简单。&lt;/p&gt;
&lt;p&gt;更新：&lt;/p&gt;
&lt;p&gt;这个脚本已经很旧了，请移步&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.phpgao.com/auto_install_shadowsocks_and_kcptun.html&#34;&gt;Centos7 系统一键安装 Shadowsocks 和 KCPTUN 加速&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.phpgao.com/auto_install_shadowsocks_and_kcptun-html.html&#34;&gt;Ubuntu 系统一键安装 Shadowsocks 和 KCPTUN 加速&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>使用docker运行redmine</title>
      <link>https://phpgao.github.io/docker_remine.html</link>
      <pubDate>Wed, 08 Mar 2017 13:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_remine.html</guid>
      <description>&lt;p&gt;网上的都不太靠谱，还是自己过一遍吧！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>为樱花打造的KCPTUN</title>
      <link>https://phpgao.github.io/kcptun_on_sakura.html</link>
      <pubDate>Thu, 02 Mar 2017 02:51:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/kcptun_on_sakura.html</guid>
      <description>&lt;p&gt;老高课余时间研究了一下kcptun，然后维护了一个支持shadowsocks-libv + kcptun的镜像，希望能给大家点帮助。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Centos7-安装最新版-NGINX,PHP,Mysql,Mariadb</title>
      <link>https://phpgao.github.io/all_in_centos7.html</link>
      <pubDate>Fri, 24 Feb 2017 06:40:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/all_in_centos7.html</guid>
      <description>&lt;p&gt;自己下载源代码编译很麻烦有没有？注意系统是&lt;strong&gt;Centos7&lt;/strong&gt;！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>为python的logging加点颜色吧</title>
      <link>https://phpgao.github.io/python_colorful_log.html</link>
      <pubDate>Wed, 22 Feb 2017 15:02:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python_colorful_log.html</guid>
      <description>&lt;p&gt;代码原理很简单，在需要加颜色的地方加上控制颜色显示的语义即可。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一些神代码注释</title>
      <link>https://phpgao.github.io/no_comments.html</link>
      <pubDate>Mon, 20 Feb 2017 08:48:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/no_comments.html</guid>
      <description>&lt;p&gt;&amp;hellip;&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Centos7-虚拟机配置</title>
      <link>https://phpgao.github.io/centos7-vm-cluster.html</link>
      <pubDate>Sat, 18 Feb 2017 12:10:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/centos7-vm-cluster.html</guid>
      <description>&lt;p&gt;一些注意的地方，留坑待填&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GIT添加空文件夹方法</title>
      <link>https://phpgao.github.io/git_empty_dir.html</link>
      <pubDate>Tue, 14 Feb 2017 03:26:23 +0000</pubDate>
      
      <guid>https://phpgao.github.io/git_empty_dir.html</guid>
      <description>add a .gitignore file :
* !.gitignore </description>
    </item>
    
    <item>
      <title>openwrt的免密登录</title>
      <link>https://phpgao.github.io/openwrt_ssh_without_passwd.html</link>
      <pubDate>Mon, 16 Jan 2017 13:39:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/openwrt_ssh_without_passwd.html</guid>
      <description>&lt;p&gt;openwrt的ssh和标准ssh所需要的秘钥格式不同(ssh-kengen产生的是PEM格式)，想要生成能够正常工作的秘钥，使用下面的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>斐讯K2刷机记录</title>
      <link>https://phpgao.github.io/phicomm_k2.html</link>
      <pubDate>Fri, 06 Jan 2017 06:11:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/phicomm_k2.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2017/01/3380399088.jpg&#34; alt=&#34;K2&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;过节359入的，购买地址&lt;a href=&#34;https://union-click.jd.com/jdc?e=0&amp;amp;p=AyIHZR5bEgAWBVMfWyUBFQdRElsUMlZYDUUEJVtXQhQQRQtaV1MJBABAHUBZCQVYEgIWDlUaRExHTlplTy8XcVZgVhw%2Bc1ZCfTwaEGcDFEcsTVcZMhM3VRpaFAIVA1EcXiUyEgdlTTUVAxMGVBpaHAAUN1MbWBUCEAJSGmsVBxsPUxlcHQoVDlccaxcCIlwAdVwWBxUCUR0OEQRCAFYrayUy&amp;amp;t=W1dCFBBFC1pXUwkEAEAdQFkJBVgSAhYOVRpETEdOWg%3D%3D&#34;&gt;【斐讯PSG1218】-京东&lt;/a&gt;，记一下刷机步骤。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>转的</title>
      <link>https://phpgao.github.io/repost.html</link>
      <pubDate>Wed, 28 Dec 2016 03:53:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/repost.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.verycd.com/topics/2837883/&#34;&gt;《Android开发视频教学》www.marsdroid.org/Android开发视频教程&amp;ndash;更新第五季第五集/Mars is back!!![MP4] - VeryCD电驴大全&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;展望未来，总结过去10年的程序员生涯，给程序员小弟弟小妹妹们的一些总结性忠告 
走过的路，回忆起来是那么曲折，把自己的一些心得体会分享给程序员兄弟姐妹们，虽然时代在变化，但是很可能你也会走我已经做过的10年的路程，有些心得体会你可以借鉴一下，觉得说得有道理的你就接纳，觉得说得没道理的，你就抛弃，以下是我发自内心的，给大家的忠告，特别是针对那些小弟弟妹妹们。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>下载站</title>
      <link>https://phpgao.github.io/download_sites.html</link>
      <pubDate>Wed, 21 Dec 2016 05:56:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/download_sites.html</guid>
      <description>&lt;p&gt;为了塞满硬盘，一起努力吧！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/12/1137613735.jpg&#34; alt=&#34;disk_full&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;图片来自网络&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP判断网络连通</title>
      <link>https://phpgao.github.io/php_test_network.html</link>
      <pubDate>Mon, 19 Dec 2016 06:38:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_test_network.html</guid>
      <description>&lt;p&gt;PHP代理其实挺麻烦的。。。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>老高推荐的VPS---Bandwagon-Host</title>
      <link>https://phpgao.github.io/bandwagon.html</link>
      <pubDate>Fri, 09 Dec 2016 06:22:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/bandwagon.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/12/1997432409.png&#34; alt=&#34;bandwagon_logo&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;作为老高博客的常客来说，搬瓦工一定再熟悉不过了。这篇文章是从&lt;a href=&#34;https://blog.phpgao.com/vps.html&#34;&gt;30元一年，打造自己的翻墙VPS&lt;/a&gt;独立出来的。主要是介绍搬瓦工(Bandwagon Host)的购买方式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ps.老高的博客目前就稳定运行在bandwagon每年$9.9的服务器上！&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>老高推荐的VPS---virmach</title>
      <link>https://phpgao.github.io/virmach.html</link>
      <pubDate>Fri, 09 Dec 2016 02:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/virmach.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/12/3240554130.png&#34; alt=&#34;virmach&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;特价页地址：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://virmach.com/manage/aff.php?aff=1248&amp;amp;gid=22&#34;&gt;Cheap Windows VPS &amp;amp; Linux VPS - VirMach.com | The Best &amp;amp; Cheapest VPS Cloud Hosting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;推荐理由：&lt;/p&gt;
&lt;p&gt;价格低廉，支持中文，可以与搬瓦工一战！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用日本樱花arukas的免费docker服务搭建shadowsocks</title>
      <link>https://phpgao.github.io/arukas.html</link>
      <pubDate>Wed, 07 Dec 2016 11:09:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/arukas.html</guid>
      <description>&lt;p&gt;这个工具是老高的同事介绍给我的！目前应该是测试阶段，他的有点像国内的Daocloud，操作很简单，老高1min就能搭建完毕，看完本文，你一定也可以！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2017/03/3239870027.png&#34; alt=&#34;sakura&#34;  /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ps. arukas倒着念不就是Sakura ?，樱花家的IP算是比较优质的了，老高用上海电信ping值在80-90ms。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>让typecho支持emoji</title>
      <link>https://phpgao.github.io/typecho_with_emoji.html</link>
      <pubDate>Wed, 07 Dec 2016 06:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_with_emoji.html</guid>
      <description>&lt;p&gt;这年头文章里加个emoji很正常吧，但是typecho貌似之前没有考虑到，没有原生支持emoji，但是这怎么能难倒我们勤劳的码农呢！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/12/2007228227.jpg&#34; alt=&#34;doge&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用KCPTUN加速你的VPS</title>
      <link>https://phpgao.github.io/kcptun.html</link>
      <pubDate>Wed, 07 Dec 2016 03:30:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/kcptun.html</guid>
      <description>&lt;p&gt;自从FS废了以后，老高一直在寻找一个替代品，直到发现了kcptun，老高的搬瓦工又迎来了第二春。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/12/748461753.png&#34; alt=&#34;kcptun_logo&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Let&#39;s-Encrypt-----免费的https证书</title>
      <link>https://phpgao.github.io/let-us_encrypt.html</link>
      <pubDate>Thu, 01 Dec 2016 03:28:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/let-us_encrypt.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/12/2787518341.png&#34; alt=&#34;letsencrypt&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;(图片来自网络)&lt;/p&gt;
&lt;p&gt;老高的证书快过期了(2016-12-11)，本着节约资(R)源(MB)的精神，准备使用&lt;a href=&#34;https://letsencrypt.org/getting-started/&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>记录一些好用的管理面板</title>
      <link>https://phpgao.github.io/useful_admin.html</link>
      <pubDate>Wed, 30 Nov 2016 09:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/useful_admin.html</guid>
      <description>redis  RedisMyAdmin RedisAdmin PyRedisAdmin Redis Desktop Manager  Memcached  phpMemAdmin phpMemcachedAdmin  mysql  phpMyAdmin  Beanstalk  beanstalk_console aurora  </description>
    </item>
    
    <item>
      <title>docker使用笔记VII----Scrapy</title>
      <link>https://phpgao.github.io/docker_install_scrapy.html</link>
      <pubDate>Tue, 15 Nov 2016 07:53:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_install_scrapy.html</guid>
      <description>&lt;p&gt;最近在研究Scrapy的安装，发现在centos上安装还是挺麻烦的，于是总结出来所有的依赖和加速的问题，终于能用了！&lt;/p&gt;
&lt;p&gt;下面看看老高是怎么在Centos下安装Scrapy！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/11/95790073.png&#34; alt=&#34;sc.png&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>当用户不存在时执行adduser</title>
      <link>https://phpgao.github.io/adduser_if_user_do_not_exist.html</link>
      <pubDate>Fri, 21 Oct 2016 07:49:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/adduser_if_user_do_not_exist.html</guid>
      <description>使用了id工具，构建docker镜像的时候这一句很有用！
id -u laogao &amp;amp;&amp;gt;/dev/null || useradd -u 30105 laogao </description>
    </item>
    
    <item>
      <title>离线安装setuptools</title>
      <link>https://phpgao.github.io/install_setuptools_offline.html</link>
      <pubDate>Wed, 12 Oct 2016 11:00:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/install_setuptools_offline.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/10/1048756566.png&#34; alt=&#34;setuptools.png&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;由于某些原因，没法在线安装setuptools，研究了一下官方提供的安装脚本，发现原来想要离线安装setuptools很简单。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>转到VScode</title>
      <link>https://phpgao.github.io/visual_studio_code.html</link>
      <pubDate>Fri, 19 Aug 2016 06:17:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/visual_studio_code.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/08/4023163725.png&#34; alt=&#34;integrated-terminal_integrated-terminal.png&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;放弃atom，投入巨硬的怀抱。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>修改docker容器的Base-Device-Size</title>
      <link>https://phpgao.github.io/docker_base_device_size.html</link>
      <pubDate>Thu, 18 Aug 2016 06:41:03 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_base_device_size.html</guid>
      <description>&lt;p&gt;老高的容器在运行一段时间的时候会突然无法写入数据，报错&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;docker no space left on device&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Google之，发现原来是&lt;strong&gt;Base Device Size&lt;/strong&gt;的问题，其默认值是10G，而容器经过一段时间的运行写入文件量早已超过10G，就造成无法写入数据的问题了。&lt;/p&gt;
&lt;p&gt;下面给出解决方案：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一行代码更改密码</title>
      <link>https://phpgao.github.io/change_passwd_in_one_line.html</link>
      <pubDate>Thu, 14 Jul 2016 08:02:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/change_passwd_in_one_line.html</guid>
      <description>&lt;p&gt;修改密码的时候，大家是不是都有输入两次密码的经历，这种交互适合终端操作，而不是用于脚本操作，对于老高这种一言不合就写Dockerfile的猿，真是很不友好。&lt;/p&gt;
&lt;p&gt;下面老高就教你怎么使用一行代码更改密码。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>unicode标准日期格式</title>
      <link>https://phpgao.github.io/date_format_patterns.html</link>
      <pubDate>Thu, 14 Jul 2016 05:49:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/date_format_patterns.html</guid>
      <description>丢个链接闪人 → → → Appendix F: Date Format Patterns
顺便加上python的日期格式化 → → → strftime-strptime-behavior</description>
    </item>
    
    <item>
      <title>docker使用笔记VI----PHP</title>
      <link>https://phpgao.github.io/docker-note6-php.html</link>
      <pubDate>Thu, 30 Jun 2016 10:07:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker-note6-php.html</guid>
      <description>&lt;p&gt;在docker里构建一个PHP环境，很简单吗？我可不觉得。。。赶紧记录一下！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker使用笔记V----FTP-与-SSH-支持</title>
      <link>https://phpgao.github.io/docker-note5-ftp-and-ssh.html</link>
      <pubDate>Thu, 30 Jun 2016 08:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker-note5-ftp-and-ssh.html</guid>
      <description>&lt;p&gt;给容器赋予FTP和ssh登录在调试和使用阶段都是很不错的功能！下面看老高怎么实现的。&lt;/p&gt;
&lt;p&gt;(基于ubuntu:xenial)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker使用笔记IV----使用docker的风格分离Nginx-PHP--Mysql</title>
      <link>https://phpgao.github.io/docker-note4-nginx-php-mysql-html.html</link>
      <pubDate>Wed, 29 Jun 2016 04:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker-note4-nginx-php-mysql-html.html</guid>
      <description>&lt;p&gt;今天老高动手实践一下分离nginx和php，还有mysql。即三个image: g-nginx,g-php,g-mysql。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/06/20358963.png&#34; alt=&#34;php7&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>安装指定版本的docker</title>
      <link>https://phpgao.github.io/docker_install_specific_version.html</link>
      <pubDate>Fri, 24 Jun 2016 03:38:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_install_specific_version.html</guid>
      <description>&lt;p&gt;安装指定版本的docker，在Google上搜索关键字&lt;strong&gt;docker install specific version&lt;/strong&gt;，搜到的解决办法基本都没法用。于是自己动手，发现一个安装指定版本的捷径！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/06/799230615.png&#34; alt=&#34;安装指定版本的docker&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python-代码片段总结</title>
      <link>https://phpgao.github.io/python_function.html</link>
      <pubDate>Thu, 16 Jun 2016 07:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python_function.html</guid>
      <description>&lt;p&gt;慢慢积累吧！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/06/2183667823.jpeg&#34; alt=&#34;python&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自己建立ngrok服务器进行内网穿透</title>
      <link>https://phpgao.github.io/ngrok_how_to.html</link>
      <pubDate>Tue, 14 Jun 2016 11:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ngrok_how_to.html</guid>
      <description>&lt;p&gt;随着国内运营商的IP不够用的节奏，我们拨号拿到的IP已经不再是类似&lt;code&gt;122.1.33.22&lt;/code&gt;的公网IP了，而是类似&lt;code&gt;10.1.2.33&lt;/code&gt;的内网IP，换句话说，我们没法直接访问到我们自己家里的路由器了！如何解决这个问题呢？目前成本最低的方式就是使用内网穿透技术了。说白了就是端口转发，即我们需要一台类似反向代理的VPS(&lt;a href=&#34;https://blog.phpgao.com/vps.html&#34;&gt;老高的VPS使用的搬瓦工&lt;/a&gt;)，把我们的请求转发到内网里，这样就相当于在防火墙内打了个洞，我们的数据能够穿透运营商的限制到达内网设备。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/06/3882816681.png&#34; alt=&#34;ngrok原理&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;图片来自网络，侵删。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在Linux下建立自签名的https网站</title>
      <link>https://phpgao.github.io/self_signed_ssl_site.html</link>
      <pubDate>Thu, 09 Jun 2016 13:32:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/self_signed_ssl_site.html</guid>
      <description>&lt;p&gt;学习完了&lt;a href=&#34;https://blog.phpgao.com/encryption_decryption.html&#34;&gt;证书，密钥，加密，rsa到底是啥？&lt;/a&gt;一文后，我们就可以开始着手建立一个自签名的网站了！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>证书，密钥，加密，rsa到底是啥？</title>
      <link>https://phpgao.github.io/encryption_decryption.html</link>
      <pubDate>Fri, 03 Jun 2016 06:27:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/encryption_decryption.html</guid>
      <description>&lt;p&gt;简单的回答：&lt;/p&gt;
&lt;p&gt;证书也叫CA(Certification Authority)证书；密钥就是用来加解密用的文件或者字符串；rsa即非对称加密算法。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/06/2098671918.png&#34; alt=&#34;RSA&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux下简单计算md5,base64,sha1,sha2</title>
      <link>https://phpgao.github.io/md5_sha1_sha2_in_linux.html</link>
      <pubDate>Wed, 01 Jun 2016 03:25:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/md5_sha1_sha2_in_linux.html</guid>
      <description>&lt;p&gt;经常加密的同学，算个md5真是顺手的事儿。。。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Centos7下使用Squid快速搭建带认证的HTTP代理服务器</title>
      <link>https://phpgao.github.io/squid_proxy_with_basic_auth.html</link>
      <pubDate>Tue, 24 May 2016 03:47:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/squid_proxy_with_basic_auth.html</guid>
      <description>&lt;p&gt;在centos下很容易就可以搭建好一个HTTP代理服务器，&lt;a href=&#34;https://blog.phpgao.com/shadowsocks_on_linux.html&#34;&gt;搭建一个socks5代理更是简单的不用说&lt;/a&gt;！&lt;/p&gt;
&lt;p&gt;不管是测试用途还是自己使用，Squid都是一个很不错的代理工具！他支持正向代理，反向代理，还有透明代理！老高最近搭建了一个简单的squid的正向代理，随便记记笔记！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果只是想使用代理而不需要认证功能，&lt;strong&gt;tinyproxy&lt;/strong&gt;也是不错的选择！&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>把zsh放到docker里</title>
      <link>https://phpgao.github.io/zsh_in_docker.html</link>
      <pubDate>Fri, 20 May 2016 11:22:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/zsh_in_docker.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/05/3841937683.png&#34; alt=&#34;zsh &amp;#43; oh-my-zsh&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;每次进入docker容器内操作一些东西时，那效率简直太低！吓得老高赶紧把&lt;strong&gt;zsh + oh-my-zsh&lt;/strong&gt;打包塞进去，终于可以愉快的开发了！zsh都装了，sshd也一起开了得了！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>让-PHPSTORM-更智能的支持-Laravel</title>
      <link>https://phpgao.github.io/laravel_on_phpstorm.html</link>
      <pubDate>Fri, 13 May 2016 07:39:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/laravel_on_phpstorm.html</guid>
      <description>&lt;p&gt;PHPSTORM已经很智能了，但是laravel更狡猾，比如如下的代码就没法实现动态跟踪，因为此处使用到了Laravel的Facades。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginx&#43;php-上传大文件</title>
      <link>https://phpgao.github.io/nginx_php_upload_big_file.html</link>
      <pubDate>Fri, 13 May 2016 03:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_php_upload_big_file.html</guid>
      <description>&lt;p&gt;有时候确实需要上传一些比较大的文件，老高的服务器是nginx+php，二者都需要配置。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nexus6刷机笔记</title>
      <link>https://phpgao.github.io/nexus_flash_rom.html</link>
      <pubDate>Thu, 12 May 2016 04:07:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nexus_flash_rom.html</guid>
      <description>&lt;p&gt;记录一下刷机的命令&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python守护进程---python-daemon</title>
      <link>https://phpgao.github.io/python-daemon.html</link>
      <pubDate>Wed, 11 May 2016 10:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python-daemon.html</guid>
      <description>&lt;p&gt;python的守护进程模块，遵循&lt;a href=&#34;https://www.python.org/dev/peps/pep-3143&#34;&gt;PEP 3143&lt;/a&gt;，很好很强大！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关闭OSX的rootless和修改MAMP的php.ini配置</title>
      <link>https://phpgao.github.io/rootless_and_mamp.html</link>
      <pubDate>Thu, 05 May 2016 11:17:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/rootless_and_mamp.html</guid>
      <description>&lt;p&gt;记录一下最近遇到的问题&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Laracasts视频下载工具</title>
      <link>https://phpgao.github.io/laracasts_downloader.html</link>
      <pubDate>Mon, 25 Apr 2016 13:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/laracasts_downloader.html</guid>
      <description>&lt;p&gt;最近老高在看laravel框架，巧遇laracasts，发现还是老外讲课有深度啊！这么好的视频，有很多还是免费的，果断下载下来保存。&lt;/p&gt;
&lt;p&gt;于是，就诞生了这篇文章！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Laravel-非常规教程之1-生命周期</title>
      <link>https://phpgao.github.io/laravel_lesson1.html</link>
      <pubDate>Fri, 22 Apr 2016 11:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/laravel_lesson1.html</guid>
      <description>&lt;p&gt;上一节老高零(瞎)散(扯)的讲了一下laravel的基本知识，不知道你现在搞清楚symfony vs laravel的关系了吗？其实没多大关系，l借用了s的组件，laravel的屏蔽了框架复杂的内部实现，让程序猿们注重业务的开发，而symfony的学习曲线很陡峭，需要你掌握框架的运行机制和各种组件的关系。&lt;/p&gt;
&lt;p&gt;本节关注一次请求在Laravel中的生命周期！就是从接收到请求到返回请求整个过程中都发生了哪些比较重要的事件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Laravel-非常规教程之0-引入篇</title>
      <link>https://phpgao.github.io/laravel_lesson0.html</link>
      <pubDate>Fri, 22 Apr 2016 05:50:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/laravel_lesson0.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/04/2314951677.jpg&#34; alt=&#34;laravel logo&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;hi!大家好。老高又开始折腾laravel了 :-D&lt;/p&gt;
&lt;p&gt;(基于Laravel 5.2)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>两个好用的命令行工具-watch-和-rsync</title>
      <link>https://phpgao.github.io/command_line_tool_watch_rsync.html</link>
      <pubDate>Thu, 21 Apr 2016 08:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/command_line_tool_watch_rsync.html</guid>
      <description>几句话说完。
watch有监控的需求，比如文件列表的变化等。
# -5 指的是间隔5s执行一次 # --differences 指高亮变化的地方 watch -n 5 --differences ls -l rsync不多说了，主要解决了我在服务器之间的大文件同步需求，scp本来也能做，但是如果文件名相同会直接覆盖。
# --update 不覆盖更新的文件 # --times 选项保持每个文件的访问权限、创建和最后修改时间 rsync -e ssh --update --verbose --times someone@someip:~/* /tmp/ </description>
    </item>
    
    <item>
      <title>使用命令行下载youtube的视频和字幕</title>
      <link>https://phpgao.github.io/download_youtube_via_cmd.html</link>
      <pubDate>Tue, 19 Apr 2016 14:24:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/download_youtube_via_cmd.html</guid>
      <description>&lt;p&gt;老高买使用搬瓦工有好久了，但是直到今天才想起来用命令行下载youtube的视频，实在是惭愧。赶紧加班写篇文章赎罪！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/04/2588463203.png&#34; alt=&#34;youtube.png&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;今天的主角在这儿&lt;a href=&#34;https://rg3.github.io/youtube-dl/download.html&#34;&gt;youtube-dl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;源代码点这儿&lt;a href=&#34;https://github.com/rg3/youtube-dl&#34;&gt;rg3/youtube-dl&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在线OCR工具</title>
      <link>https://phpgao.github.io/orc.html</link>
      <pubDate>Mon, 18 Apr 2016 13:10:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/orc.html</guid>
      <description>onlineocr free! 在线文字识别 convertpdftoword 转换器 百度OCR识别
百度OCR识别企业版</description>
    </item>
    
    <item>
      <title>6元RMB入手Surge的小弟Shadowrocket</title>
      <link>https://phpgao.github.io/shadowrocket.html</link>
      <pubDate>Mon, 18 Apr 2016 06:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/shadowrocket.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/04/3746704404.png&#34; alt=&#34;ss.png&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;自从IOS9开放了一些之前必须交钱才能使用的更底层的网络接口后(Network Extension)，类似Surge的APP不断涌现。&lt;/p&gt;
&lt;p&gt;而老高的手机早早已经越狱，当时没有这方面的需求。而当我想购买Surge的时候，却又经历了Surge的下架，再加价上架，看到现在的价格，老高只能表示呵呵了。&lt;/p&gt;
&lt;p&gt;昨天在APP商店里搜了一下ss，发现了Shadowrocket，竟然只卖6元，果断入手！&lt;/p&gt;
&lt;p&gt;注：文末有下载链接&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>卸载思科any-connect-OS-X客户端</title>
      <link>https://phpgao.github.io/uninstall_cisco_any_connect_client-1.html</link>
      <pubDate>Mon, 18 Apr 2016 05:35:41 +0000</pubDate>
      
      <guid>https://phpgao.github.io/uninstall_cisco_any_connect_client-1.html</guid>
      <description>一句话命令
sudo pkgutil --forget com.cisco.pkg.anyconnect.vpn </description>
    </item>
    
    <item>
      <title>docker使用笔记III----docker的快速安装</title>
      <link>https://phpgao.github.io/docker-note3-html.html</link>
      <pubDate>Sun, 10 Apr 2016 14:06:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker-note3-html.html</guid>
      <description>&lt;p&gt;docker快速安装笔记&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用VirtualBox在后台运行镜像</title>
      <link>https://phpgao.github.io/virtualbox_run_in_background.html</link>
      <pubDate>Tue, 05 Apr 2016 01:58:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/virtualbox_run_in_background.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/04/3686880991.png&#34; alt=&#34;VirtualBox&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;老高的想做的很简单，就是开一个没有界面的虚拟机运行在后台，由于VirtualBox的GUI和虚拟机的运行管理是分离的，想要做到这一点很容易！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker打包优化</title>
      <link>https://phpgao.github.io/docker_build_optimize.html</link>
      <pubDate>Fri, 01 Apr 2016 03:50:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_build_optimize.html</guid>
      <description>&lt;p&gt;老高最近快被工作掩埋了，各种赶上线，各种修BUG，真凄惨！
今天来说说Docker打包的优化问题。为什么要说这个问题呢？请听我慢慢道来。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/04/1459029166.png&#34; alt=&#34;Docker&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>获取所有用户的计划任务</title>
      <link>https://phpgao.github.io/crontab_for_everyone.html</link>
      <pubDate>Fri, 18 Mar 2016 10:44:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/crontab_for_everyone.html</guid>
      <description>一句话代码
cut -d: -f1 /etc/passwd|xargs -i sudo crontab -u {} -l </description>
    </item>
    
    <item>
      <title>golang使用multiconfig后导致glog无法接受命令行参数</title>
      <link>https://phpgao.github.io/multiconfig_vs_glog.html</link>
      <pubDate>Fri, 18 Mar 2016 06:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/multiconfig_vs_glog.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/03/506524902.png&#34; alt=&#34;flag&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;老高在最近的一个项目(GOLANG)中加入了&lt;a href=&#34;https://github.com/koding/multiconfig&#34;&gt;koding/multiconfig&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这个包可以用默认值(struct tag)&amp;lt;文件&amp;lt;环境变量&amp;lt;命令行参数的顺序设置参数，很好很强大，极大地方便了测试和开发。&lt;/p&gt;
&lt;p&gt;但是同时他也带来了一个问题，和glog一起工作的时候会报错：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag provided but not defined: -alsologtostderr&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Centos搭建GIT服务器</title>
      <link>https://phpgao.github.io/build-git-server.html</link>
      <pubDate>Mon, 14 Mar 2016 05:36:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/build-git-server.html</guid>
      <description>&lt;h2 id=&#34;server&#34;&gt;server&lt;/h2&gt;
&lt;p&gt;1.首先安装git&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yum install git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>python守护进程demo</title>
      <link>https://phpgao.github.io/pythond.html</link>
      <pubDate>Tue, 23 Feb 2016 04:11:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/pythond.html</guid>
      <description>&lt;p&gt;代码网上copy的，原理基本一致。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>迅雷远程下载的服务脚本</title>
      <link>https://phpgao.github.io/xunlei_service_start.html</link>
      <pubDate>Sun, 31 Jan 2016 09:28:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/xunlei_service_start.html</guid>
      <description>&lt;p&gt;放到&lt;code&gt;/etc/init.d&lt;/code&gt;中即可。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/home/pi/xunlei/portal&lt;/code&gt;是portal的绝对路径！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker的tag实验</title>
      <link>https://phpgao.github.io/docker_tag.html</link>
      <pubDate>Mon, 25 Jan 2016 11:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_tag.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/11/2256355596.png&#34; alt=&#34;docker tag&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;git的tag功能是为了将代码的某个状态打上一个戳，通过tag我们可以很轻易的找到对应的提交。一般大家会在一些重要事件打tag，比如提测时，开发完成时，测试结束时，版本发布时等等。&lt;/p&gt;
&lt;p&gt;对比git的tag，docker的tag似乎更加灵活，docker将文件等信息的变动抽象为一次次的commit，每一次commit以后可能走向不同的分支，当我们完成dockerfile的构建后，会生成一串无规则的字符串代表此次生成的ID，此时，tag的作用就是为他创建一个友好的NAME，方便我们对镜像库的管理。&lt;/p&gt;
&lt;p&gt;有时候tag的过度友好也会对我们造成一些困惑，下面老高总结一下在使用docker tag时遇到的坑。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>送转运中国邀请码</title>
      <link>https://phpgao.github.io/zyzg.html</link>
      <pubDate>Thu, 21 Jan 2016 02:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/zyzg.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/01/2815969812.png&#34; alt=&#34;uszcn&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;为了防止以后这种事情在此发生，请在此页面留下你的邮箱，老高会尽快给你发的。&lt;/p&gt;
&lt;p&gt;由于新的邀请码必须在旧的邀请码使用之后才能生成，&lt;strong&gt;所以同一天求码的同学收到的码可能是同一个&lt;/strong&gt;，就看谁先激活了！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker-批量删除名字为none的镜像</title>
      <link>https://phpgao.github.io/docker_rmi_none_name.html</link>
      <pubDate>Wed, 20 Jan 2016 03:58:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_rmi_none_name.html</guid>
      <description>下面代码的意思是批量停止已经Exited的容器，然后删除之，最后删除，因为名称为none的镜像可能还没有退出，这样做也保险一点。
docker stop $(docker ps -a -q -f status=exited) docker rm -v $(docker ps -a -q -f status=exited) docker images|grep none|awk &amp;#39;{print $3 }&amp;#39;|xargs docker rmi 如果要直接删除所有的容器，可以这样：
docker kill $(docker ps -a -q) docker rm -v $(docker ps -a -q) </description>
    </item>
    
    <item>
      <title>Nexus6刷机教程</title>
      <link>https://phpgao.github.io/nexus6_unlock.html</link>
      <pubDate>Tue, 19 Jan 2016 07:13:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nexus6_unlock.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/01/3352563752.jpg&#34; alt=&#34;nexus6&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;老高的Nexus5去年由于进水，导致触摸屏失灵，淘宝一搜屏幕的价格，我去。。。算了还是在家吃灰吧！&lt;/p&gt;
&lt;p&gt;转眼到了11月黑五，色魔张大妈推了一条信息，奶6促销$199，果断入手。&lt;/p&gt;
&lt;p&gt;在经历了清关被扣，又要交税等等事情后，终于于今天（2016年1月19日）顺利收到，在此十分感谢向同事从上海人肉快递到北京！&lt;/p&gt;
&lt;p&gt;总部的网可以直接Google，但是OTA升级的速度简直不敢恭维，索性直接解锁线刷系统了！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一个很无力的403错误</title>
      <link>https://phpgao.github.io/mess_with_error_403.html</link>
      <pubDate>Mon, 18 Jan 2016 03:38:23 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mess_with_error_403.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/01/875541267.png&#34; alt=&#34;403错误&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;老高为了省时省力，在window平台下的开发环境使用了&lt;a href=&#34;http://www.upupw.net/&#34;&gt;UPUPW&lt;/a&gt;，这个环境使得老高可以在5min内搭建出一个完整的(nginx/apache) + PHP + my*开发环境。&lt;/p&gt;
&lt;p&gt;但是最近在调试接口的时候，偶尔会有几个接口直接报错403，于是开始了无尽的403折磨之路。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go下载</title>
      <link>https://phpgao.github.io/goalng_download_file.html</link>
      <pubDate>Sat, 16 Jan 2016 14:40:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/goalng_download_file.html</guid>
      <description>&lt;p&gt;今天处理GO下载的时候遇到一个问题：如果调用readall去读取response，会造成很大的内存消耗，并且无法获取下载的进度。&lt;/p&gt;
&lt;p&gt;直到搜到&lt;a href=&#34;https://www.reddit.com/r/golang/comments/2bmnoq/ioutilreadallhttpresponsebody_memory_consumption/&#34;&gt;ioutil.ReadAll(httpResponse.Body) memory consumption&lt;/a&gt;，才解决了我的问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>树莓派samba的配置和自动挂载USB储存设备</title>
      <link>https://phpgao.github.io/raspberry_automount.html</link>
      <pubDate>Sat, 09 Jan 2016 07:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/raspberry_automount.html</guid>
      <description>安装依赖包 apt-get install ntfs-3g apt-get install samba 编辑samba vi /etc/samba/smb.conf #add [media] comment = Temporary file space path = /media read only = no public = yes 重启samba服务
/etc/init.d/samba restart USB自动挂载 挂载好麻烦，自动脚本来帮忙，使用的技术叫做udev。
vi /etc/udev/rules.d/10-usbstorage.rules KERNEL!=&amp;#34;sd*&amp;#34;, GOTO=&amp;#34;media_by_label_auto_mount_end&amp;#34; SUBSYSTEM!=&amp;#34;block&amp;#34;,GOTO=&amp;#34;media_by_label_auto_mount_end&amp;#34; IMPORT{program}=&amp;#34;/sbin/blkid -o udev -p %N&amp;#34; ENV{ID_FS_TYPE}==&amp;#34;&amp;#34;, GOTO=&amp;#34;media_by_label_auto_mount_end&amp;#34; ENV{ID_FS_LABEL}!=&amp;#34;&amp;#34;, ENV{dir_name}=&amp;#34;%E{ID_FS_LABEL}&amp;#34; ENV{ID_FS_LABEL}==&amp;#34;&amp;#34;, ENV{dir_name}=&amp;#34;Untitled-%k&amp;#34; ACTION==&amp;#34;add&amp;#34;, ENV{mount_options}=&amp;#34;relatime,sync&amp;#34; ACTION==&amp;#34;add&amp;#34;, ENV{ID_FS_TYPE}==&amp;#34;vfat&amp;#34;, ENV{mount_options}=&amp;#34;iocharset=utf8,umask=000&amp;#34; ACTION==&amp;#34;add&amp;#34;, ENV{ID_FS_TYPE}==&amp;#34;ntfs&amp;#34;, ENV{mount_options}=&amp;#34;iocharset=utf8,umask=000&amp;#34; ACTION==&amp;#34;add&amp;#34;, RUN+=&amp;#34;/bin/mkdir -p /media/%E{dir_name}&amp;#34;, RUN+=&amp;#34;/bin/mount -o $env{mount_options} /dev/%k /media/%E{dir_name}&amp;#34; ACTION==&amp;#34;remove&amp;#34;, ENV{dir_name}!=&amp;#34;&amp;#34;, RUN+=&amp;#34;/bin/umount -l /media/%E{dir_name}&amp;#34;, RUN+=&amp;#34;/bin/rmdir /media/%E{dir_name}&amp;#34; LABEL=&amp;#34;media_by_label_auto_mount_end&amp;#34; 参考 树莓派自动挂载usb移动存储设备</description>
    </item>
    
    <item>
      <title>跑在raspberry上的docker</title>
      <link>https://phpgao.github.io/docker_on_raspberry_pi.html</link>
      <pubDate>Fri, 08 Jan 2016 11:15:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_on_raspberry_pi.html</guid>
      <description>&lt;p&gt;老高的树莓派昨天(2016-01-07)到货，配件果断买买买（其实只买了SD卡和亚克力盒子）。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/01/293942554.jpg&#34; alt=&#34;树莓派&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;你能找到树莓派藏在哪儿吗？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在SourceTree取消被忽略的文件</title>
      <link>https://phpgao.github.io/source_tree_cancel_ignore_files.html</link>
      <pubDate>Tue, 05 Jan 2016 05:44:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/source_tree_cancel_ignore_files.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/01/2444613047.png&#34; alt=&#34;SourceTree忽略文件&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;老高刚才不小心在SourceTree中忽略了一个上级文件夹(一样的名字没看清，并且勾选了全局忽略)，导致里面的所有文件都被忽略掉了，很是尴尬。。。&lt;/p&gt;
&lt;p&gt;搜了半天，总算在&lt;a href=&#34;https://answers.atlassian.com/questions/158997/how-to-track-an-ignored-file&#34;&gt;这里&lt;/a&gt;找到了有用的答案，原来被SourceTree全局忽略的文件会保存在一个文件中，而不是直接写到.gitignore里，否则就不会这么麻烦了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>梅林固件迅雷远程开机自启设置</title>
      <link>https://phpgao.github.io/merlin_xware_start_on_boot.html</link>
      <pubDate>Sat, 26 Dec 2015 14:59:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/merlin_xware_start_on_boot.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/12/2370665736.png&#34; alt=&#34;merlin_xware_start_on_boot&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2015年12月20日周总结</title>
      <link>https://phpgao.github.io/2015-12-20.html</link>
      <pubDate>Sun, 20 Dec 2015 08:53:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/2015-12-20.html</guid>
      <description>学习：
select、poll、epoll之间的区别总结[整理] I/O多路复用技术（multiplexing）是什么？ 所谓全栈——《Web全栈工程师的自我修养》读书笔记 Awesome Networking &amp;mdash; clowwindy 《理解网络IO模型》四部曲：从模型到实现，从select到poll，再到epoll，基于源码深层探究，一起看看 IOS9 SURGE Go语言TCP Socket编程 setsockopt中参数之SO_REUSEADDR的意义 select — Waiting for I/O completion socket — Low-level networking interface
工具：
PHP standards Dockerfile 语法检查及优化工具 搭建docker内网私服（docker-registry with nginx&amp;amp;ssl on centos） Centos 7.x 使用Docker registry镜像创建私有仓库</description>
    </item>
    
    <item>
      <title>When-u-fix-a-bug-in-production....</title>
      <link>https://phpgao.github.io/when-u-fix-a-bug-in-production.html</link>
      <pubDate>Tue, 15 Dec 2015 12:40:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/when-u-fix-a-bug-in-production.html</guid>
      <description>当你在生产环境中修bug的时候，很形象。
转自@JonathanDeMoor</description>
    </item>
    
    <item>
      <title>终于全站https了，看到小绿锁开心不？</title>
      <link>https://phpgao.github.io/enable_https.html</link>
      <pubDate>Sun, 13 Dec 2015 12:40:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/enable_https.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/12/3818874258.png&#34; alt=&#34;https&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;今天花了点时间把全站改为https了，其实主要是把多说砍了！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用nc发送http请求</title>
      <link>https://phpgao.github.io/nc_http.html</link>
      <pubDate>Fri, 11 Dec 2015 15:26:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nc_http.html</guid>
      <description>echo -n &amp;#34;GET / HTTP/1.0\n\n\n&amp;#34;|nc phpgao.com 80 -vv nc phpgao.com 80 &amp;lt;&amp;lt;END HEAD / HTTP/1.1 Host: phpgao.com END </description>
    </item>
    
    <item>
      <title>让你的docker支持代理</title>
      <link>https://phpgao.github.io/docker_proxy.html</link>
      <pubDate>Thu, 10 Dec 2015 09:10:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_proxy.html</guid>
      <description>&lt;p&gt;功夫网越来越猖狂，连docker都不放过。。。&lt;/p&gt;
&lt;p&gt;So，我们需要使用代理去下载、搜索我们需要的镜像！&lt;/p&gt;
&lt;p&gt;需要注意的是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通过老高的实验，在修改了代理设置后必须重启docker的守护进程！&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>git支持socks5和HTTP代理</title>
      <link>https://phpgao.github.io/git_on_socks5.html</link>
      <pubDate>Thu, 10 Dec 2015 07:30:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/git_on_socks5.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/12/3997949415.png&#34; alt=&#34;git logo&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;一直以来，老高都是用proxychains用的git，原来发现git本来就支持socks5代理!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>傻逼铁道部</title>
      <link>https://phpgao.github.io/sb_china_train.html</link>
      <pubDate>Thu, 10 Dec 2015 07:10:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/sb_china_train.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/12/3859121289.jpg&#34; alt=&#34;中指&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;这个&lt;a href=&#34;http://www.12306.cn/mormhweb/zxdt_ggxx/201512/t20151208_4003.html&#34;&gt;通知&lt;/a&gt;真TM扯淡，不会说人话，说的都是鬼话！！还是自己排个序再排个版吧！&lt;/p&gt;
&lt;p&gt;而且票还是抢不到！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>将你的PHP程序升级到PHP7.0</title>
      <link>https://phpgao.github.io/upgrade_to_php_70_on_centos7.html</link>
      <pubDate>Sun, 06 Dec 2015 13:20:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/upgrade_to_php_70_on_centos7.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/12/515318547.png&#34; alt=&#34;PHP&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;(以上图片来自互联网)&lt;/p&gt;
&lt;p&gt;这两天抽空把系统升到7.0，把PHP也升到7.0，随便记一点笔记吧！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>年年有黑五，今年活儿特多</title>
      <link>https://phpgao.github.io/black_friday_in_2015.html</link>
      <pubDate>Sat, 05 Dec 2015 12:26:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/black_friday_in_2015.html</guid>
      <description>&lt;p&gt;总是觉得今年的黑五活动特别多（为买找理由）。。。&lt;/p&gt;
&lt;p&gt;给大家晒一晒单(订单)吧！不知道大家还买了啥超值物件，让老高长长见识呗~&lt;/p&gt;
&lt;h2 id=&#34;中亚&#34;&gt;中亚&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/12/3150088930.png&#34; alt=&#34;饥饿鲨ssd&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;2015-12-11到货！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/12/2463286068.jpg&#34; alt=&#34;到货&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sublime-配置-插件-主题总结</title>
      <link>https://phpgao.github.io/go_sublime.html</link>
      <pubDate>Thu, 03 Dec 2015 11:23:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/go_sublime.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/12/3173255088.png&#34; alt=&#34;sublime&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;可自用，可参考，欢迎大家补充！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>本博客二级域名正在转为blog</title>
      <link>https://phpgao.github.io/mv_www2blog.html</link>
      <pubDate>Sat, 28 Nov 2015 07:21:50 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mv_www2blog.html</guid>
      <description>RT</description>
    </item>
    
    <item>
      <title>充分利用oh-my-zsh</title>
      <link>https://phpgao.github.io/oh_my_zsh_advanced.html</link>
      <pubDate>Thu, 26 Nov 2015 12:10:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/oh_my_zsh_advanced.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/11/3511197024.png&#34; alt=&#34;sss2.png&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;都听说&lt;a href=&#34;http://ohmyz.sh&#34;&gt;oh-my-zsh&lt;/a&gt;很NB，但是具体NB在哪里呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码补全&lt;/li&gt;
&lt;li&gt;切换目录增强&lt;/li&gt;
&lt;li&gt;各种主题&lt;/li&gt;
&lt;li&gt;命令历史增强&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>使用zsh&#43;omz打造你的超级终端</title>
      <link>https://phpgao.github.io/ultimate_terminal.html</link>
      <pubDate>Wed, 25 Nov 2015 13:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ultimate_terminal.html</guid>
      <description>&lt;p&gt;自从走上了Linux这条路，就离不开终端了。。。&lt;/p&gt;
&lt;p&gt;如果不好好折腾一下，真是对不起自己的老花眼了！&lt;/p&gt;
&lt;p&gt;所以老高针对Mac(没有的赶紧买买买)下的iterm2进行了简单的定制，记录如下：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/11/2794686997.png&#34; alt=&#34;Screen Shot 2015-11-25 at 7.11.28 PM.png&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GO语言开发环境搭建笔记</title>
      <link>https://phpgao.github.io/let_us_go.html</link>
      <pubDate>Wed, 25 Nov 2015 03:10:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/let_us_go.html</guid>
      <description>&lt;p&gt;开始学一门新的语言，开发环境需要好好配置！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/06/3416344597.jpg&#34; alt=&#34;GOLANG&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[VPS]老高推荐VPS----RamNode</title>
      <link>https://phpgao.github.io/ramnode.html</link>
      <pubDate>Tue, 24 Nov 2015 06:38:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ramnode.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/11/2000021281.png&#34; alt=&#34;afflogoblack.png&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小技巧---在Finder中显示路径</title>
      <link>https://phpgao.github.io/show_path_in_finder.html</link>
      <pubDate>Mon, 23 Nov 2015 07:01:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/show_path_in_finder.html</guid>
      <description>&lt;p&gt;在默认的Finder中是直接看不到路径的，除非你把某个文件拖到终端里。。。&lt;/p&gt;
&lt;p&gt;如下图：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/11/536081178.png&#34; alt=&#34;Finder&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;如何解决呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chrome插件---Redirect-Path(揪出隐藏起来的小尾巴)</title>
      <link>https://phpgao.github.io/chrome_redirect_path.html</link>
      <pubDate>Mon, 23 Nov 2015 05:39:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/chrome_redirect_path.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/11/792731461.png&#34; alt=&#34;Redirect Path&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;有时候我们在查看一些外链的时候，某些链接大家看到的可能已经是被t.cn转换过的链接，比如&lt;code&gt;http://t.cn/Rw0r7Y5&lt;/code&gt;，这样导致了一个问题————我该不该点呢？&lt;/p&gt;
&lt;p&gt;还有一个案例，就是类似色魔张大妈的直达链接，基本上都会跳转很多次，其中几个有一次可能带有推广的小尾巴，但是他们在网址连一扫而过，我们根本抓不住他，怎么办？&lt;/p&gt;
&lt;p&gt;下面这个工具可以帮你！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>暴走的程序猿---香港一日游</title>
      <link>https://phpgao.github.io/hk_trip.html</link>
      <pubDate>Tue, 17 Nov 2015 06:22:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/hk_trip.html</guid>
      <description>&lt;p&gt;趁着去珠海出差的周末，老高偷偷的到澳门和香港溜达了一圈。这也是老高第一次正式接触万恶的资本主义，所以一定要写一篇文章记录一下！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>珠海-香港一日游计划</title>
      <link>https://phpgao.github.io/one_day_in_hk.html</link>
      <pubDate>Fri, 13 Nov 2015 11:13:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/one_day_in_hk.html</guid>
      <description>&lt;h2 id=&#34;航线&#34;&gt;航线&lt;/h2&gt;
&lt;p&gt;购票地址：&lt;a href=&#34;http://61.145.229.172:8011/User/Default.aspx&#34;&gt;珠海九州港客运服务有限公司&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;9:00 九州港 - 港澳码头&lt;/p&gt;
&lt;p&gt;21:30 港澳码头 - 九州港&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用ss的多用户模式</title>
      <link>https://phpgao.github.io/ss-mutil_users.html</link>
      <pubDate>Fri, 13 Nov 2015 05:53:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ss-mutil_users.html</guid>
      <description>&lt;p&gt;多用户模式是什么？&lt;/p&gt;
&lt;p&gt;就是使用一个配置文件，存放多个端口+密码的信息，如果你在共享你的ss，那么这个功能将十分实用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker使用笔记-II----multi-port-shadowsocks</title>
      <link>https://phpgao.github.io/docker_note2.html</link>
      <pubDate>Thu, 12 Nov 2015 05:46:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_note2.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/11/2256355596.png&#34; alt=&#34;docker logo&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.phpgao.com/docker-note1.html&#34;&gt;上一节&lt;/a&gt;我们建立了简单的容器，这一届我们进一步探索docker的功能&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker使用笔记-I----Dockerfile-build-run-kill</title>
      <link>https://phpgao.github.io/docker-note1.html</link>
      <pubDate>Thu, 12 Nov 2015 03:58:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker-note1.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/11/2256355596.png&#34; alt=&#34;docker logo&#34;  /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;docker &amp;ndash; 像安装卸载APP一样简单的部署服务器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这些文章是老高自己使用docker是的一些笔记，偶尔会更新。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在github的某次commit中close或者fix某个issue</title>
      <link>https://phpgao.github.io/github_fix_or_close_issue.html</link>
      <pubDate>Tue, 10 Nov 2015 05:32:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/github_fix_or_close_issue.html</guid>
      <description>&lt;p&gt;当你在某次提交解决了其他人提出的issue时，你可以使用github中的语法实现自动操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>帝都的初雪@2015.11.6</title>
      <link>https://phpgao.github.io/2047.html</link>
      <pubDate>Fri, 06 Nov 2015 13:21:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/2047.html</guid>
      <description>&lt;p&gt;在北京出差，眼瞅着马上又要雾霾了，今天打开窗，雪景映入眼帘！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/11/500160160.jpg&#34; alt=&#34;雪景1&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>入手R6300-V2，大家有什么想说的？</title>
      <link>https://phpgao.github.io/r6300v2.html</link>
      <pubDate>Thu, 05 Nov 2015 12:55:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/r6300v2.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/11/548519534.jpg&#34; alt=&#34;R6300 V2&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>才发现PHP官方已经提供CHM了</title>
      <link>https://phpgao.github.io/php_chm.html</link>
      <pubDate>Tue, 03 Nov 2015 03:23:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_chm.html</guid>
      <description>&lt;p&gt;丢个链接走人&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/11/2827250856.png&#34; alt=&#34;PHP chm&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在MAC下使用proxychain</title>
      <link>https://phpgao.github.io/proxychain.html</link>
      <pubDate>Sun, 25 Oct 2015 14:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/proxychain.html</guid>
      <description>&lt;p&gt;proxychain的功能很强大，让我们不需要使用export指定ssh的http代理就可以***了。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/10/3772244129.png&#34; alt=&#34;proxychain&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于内容提取和摘要生成</title>
      <link>https://phpgao.github.io/extractor_and_generator.html</link>
      <pubDate>Thu, 22 Oct 2015 11:44:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/extractor_and_generator.html</guid>
      <description>&lt;p&gt;整理待用&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>每天自动升级你的Centos</title>
      <link>https://phpgao.github.io/yum_cron.html</link>
      <pubDate>Mon, 12 Oct 2015 08:33:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/yum_cron.html</guid>
      <description>搜到了这一篇文章Automatic nightly YUM updates with yum-cron
给大家安利一下。
# 安装 yum install yum-cron -y # 配置 vim /etc/sysconfig/yum-cron # 开启服务 chkconfig yum-cron on # or chkconfig --level 345 yum-cron on # 运行服务 service yum-cron start # 检查日志 grep yum.cron /var/log/cron | tail -10 </description>
    </item>
    
    <item>
      <title>mac必备软件Go2shell</title>
      <link>https://phpgao.github.io/go2shell.html</link>
      <pubDate>Mon, 12 Oct 2015 06:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/go2shell.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/10/418026121.png&#34; alt=&#34;go2shell&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;这个软件能够让你在Finder中轻松地在当前路径打开shell！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用ssh的反向隧道管理内网路由器</title>
      <link>https://phpgao.github.io/ssh-reverse-tunnel.html</link>
      <pubDate>Fri, 02 Oct 2015 04:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ssh-reverse-tunnel.html</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;SSH协议真是了不得！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/10/2363969333.png&#34; alt=&#34;pandorabox&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;光是看标题，大家会看的云里雾里的，倾听老高细细道来！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[VPS]老高推荐VPS----MrRapidHost</title>
      <link>https://phpgao.github.io/mrapidhost.html</link>
      <pubDate>Tue, 22 Sep 2015 02:37:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mrapidhost.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/09/1388919397.png&#34; alt=&#34;MrRapidHost&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;MrRapidHost目前有一款VPS性价比不错，很适合搭梯子。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[VPS]老高推荐VPS----time4vps</title>
      <link>https://phpgao.github.io/time4vps.html</link>
      <pubDate>Sat, 19 Sep 2015 05:21:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/time4vps.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/09/3507011008.png&#34; alt=&#34;time4vps&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>跟老高一起学laravel吧</title>
      <link>https://phpgao.github.io/learning_laravel.html</link>
      <pubDate>Fri, 11 Sep 2015 04:21:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/learning_laravel.html</guid>
      <description>http://laravelbase.com/sections/1%7D http://www.kancloud.cn/baidu/laravel5</description>
    </item>
    
    <item>
      <title>[老高的收藏夹]之硬件天梯图</title>
      <link>https://phpgao.github.io/fav_tianti.html</link>
      <pubDate>Thu, 10 Sep 2015 01:37:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/fav_tianti.html</guid>
      <description>&lt;p&gt;选择笔记本或者手机的时候，下面的网站可以给你一个最直观的参考！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pip下使用代理安装包</title>
      <link>https://phpgao.github.io/pip_via_proxy.html</link>
      <pubDate>Wed, 09 Sep 2015 09:09:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/pip_via_proxy.html</guid>
      <description>一句话代码
pip install --proxy x.x.x.x:8080 requsets pip install --proxy x.x.x.x:8080 --upgrade pip 帮助文件
pip -h --proxy &amp;lt;proxy&amp;gt; Specify a proxy in the form [user:passwd@]proxy.server:port. </description>
    </item>
    
    <item>
      <title>还是忍不住下单了</title>
      <link>https://phpgao.github.io/github-shop-2015.html</link>
      <pubDate>Wed, 09 Sep 2015 02:11:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/github-shop-2015.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/09/172808848.jpg&#34; alt=&#34;Octocat Figurine&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;终于在&lt;a href=&#34;http://github.myshopify.com/&#34;&gt;github shop&lt;/a&gt;败了Octocat Figurine！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mac下使用brew配置nginx&#43;php&#43;mysql&#43;PostgreSQL</title>
      <link>https://phpgao.github.io/mac_onmpp.html</link>
      <pubDate>Mon, 07 Sep 2015 09:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mac_onmpp.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/09/1049308967.jpg&#34; alt=&#34;yosemite&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;大家在win下和Linux系统下配置PHP运行环境已经有很多参考资料了，以老高的经验，win下最好用的是UPUPW，linux求方便是centos+kangle，更加复杂的方法可以翻翻老高的&lt;a href=&#34;https://blog.phpgao.com/archives.html&#34;&gt;文章归档&lt;/a&gt;，里面有很多可以参考的内容。&lt;/p&gt;
&lt;p&gt;今天由于工作需要，必须在&lt;strong&gt;OSX&lt;/strong&gt;下配置PHP的开发运行环境，经过一番折腾，终于搞定了！主要参考了&lt;a href=&#34;http://blog.frd.mn/install-nginx-php-fpm-mysql-and-phpmyadmin-on-os-x-mavericks-using-homebrew/&#34;&gt;Install Nginx, PHP-FPM, MySQL and phpMyAdmin on OS X Mavericks or Yosemite&lt;/a&gt;这篇文章，推荐英文好的同学直接看原文。&lt;/p&gt;
&lt;p&gt;下面记录一下！(请按照顺序配置)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>大流量网站怎么优化</title>
      <link>https://phpgao.github.io/large_scale_web_site_optimize.html</link>
      <pubDate>Mon, 24 Aug 2015 10:48:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/large_scale_web_site_optimize.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/09/1782607352.png&#34; alt=&#34;流量！&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;最近面试总是多多少少会出现这个问题，虽然老高的网站流量不大，但是如果解决这个问题，但是在理论上还是能回答的。&lt;/p&gt;
&lt;p&gt;首先能够明确的是，一般问这个问题的人应该没听过&lt;strong&gt;C10K&lt;/strong&gt;这个问题吧，注意修饰词&lt;strong&gt;一般&lt;/strong&gt;。所以你有挺高的概率&lt;strong&gt;不需要&lt;/strong&gt;从更底层的回答这个问题，比如多线程和多进程的取舍，或者使用异步和非阻塞等等。。。不过老高还是建议你去了解一下&lt;strong&gt;C10K&lt;/strong&gt;这个概念！这个地方有原文&lt;a href=&#34;http://www.kegel.com/c10k.html&#34;&gt;点我&lt;/a&gt;，这个地方有翻译&lt;a href=&#34;http://www.cnblogs.com/fll/archive/2008/05/17/1201540.html&#34;&gt;点我&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个问题回答的方式，出发点很多。老高认为这样回答比较好：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>最近的见闻</title>
      <link>https://phpgao.github.io/recent_august.html</link>
      <pubDate>Sat, 22 Aug 2015 11:59:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/recent_august.html</guid>
      <description>&lt;p&gt;老高最近告别了20多年的西安生活，一人坐火车来到上海，还好有老伙计收留。&lt;/p&gt;
&lt;p&gt;最近没有更新文章，但想写的其实很多。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/08/2886413420.png&#34; alt=&#34;14小时的火车&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在openwrt上开启sftp</title>
      <link>https://phpgao.github.io/sftp_openwrt.html</link>
      <pubDate>Fri, 24 Jul 2015 09:38:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/sftp_openwrt.html</guid>
      <description>一句话代码
opkg update opkg install openssh-sftp-server reference:
http://wiki.openwrt.org/doc/howto/sftp.server</description>
    </item>
    
    <item>
      <title>安利一个电影----只有你听见</title>
      <link>https://phpgao.github.io/only-you-can-hear-me.html</link>
      <pubDate>Wed, 08 Jul 2015 12:58:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/only-you-can-hear-me.html</guid>
      <description>B站链接: 白乙一代表作
网盘链接: cxt3
由于百度误判，请把.rar去掉，然后解压zip文件</description>
    </item>
    
    <item>
      <title>tcp链接的几种状态</title>
      <link>https://phpgao.github.io/tcp_status.html</link>
      <pubDate>Wed, 08 Jul 2015 04:02:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/tcp_status.html</guid>
      <description>&lt;p&gt;转自 &lt;a href=&#34;http://xinaction.iteye.com/blog/1180541&#34;&gt;tcp链接的几种状态&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/07/503433726.jpg&#34; alt=&#34;tcp链接的几种状态&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>快速升级python到2.7</title>
      <link>https://phpgao.github.io/update_python_to_27.html</link>
      <pubDate>Tue, 30 Jun 2015 05:44:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/update_python_to_27.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/1602052211.png&#34; alt=&#34;python&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;(python logo来自互联网)&lt;/p&gt;
&lt;p&gt;摘自 &lt;a href=&#34;https://github.com/h2oai/h2o-2/wiki/Installing-python-2.7-on-centos-6.3.-Follow-this-sequence-exactly-for-centos-machine-only#how-to-install-python-276-on-centos-63-62-and-64-okay-too-probably-others&#34;&gt;Installing python 2.7 on centos 6.3. Follow this sequence exactly for centos machine only&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yunfile文件下载脚本</title>
      <link>https://phpgao.github.io/yum-file-downloader.html</link>
      <pubDate>Mon, 29 Jun 2015 04:25:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/yum-file-downloader.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/4049188365.png&#34; alt=&#34;YUNFILE&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;脚本的诞生源自这里&lt;a href=&#34;https://www.v2ex.com/t/201623&#34;&gt;python 爬虫求助&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>简单socket编程2</title>
      <link>https://phpgao.github.io/socket-lesson2.html</link>
      <pubDate>Sat, 27 Jun 2015 14:09:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/socket-lesson2.html</guid>
      <description>&lt;p&gt;上一节我们提到了socket编程的基本形式，这一节我们加强服务端的性能！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>http库测试工具---httpbin</title>
      <link>https://phpgao.github.io/how-to-httpbin.html</link>
      <pubDate>Sat, 27 Jun 2015 11:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/how-to-httpbin.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/727407702.jpg&#34; alt=&#34;http&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;(图片来自互联网)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果一个人想学习爬虫技术，我会首先推荐他学会使用httpbin！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;httpbin(&lt;a href=&#34;http://httpbin.org&#34;&gt;官网&lt;/a&gt;|&lt;a href=&#34;https://github.com/Runscope/httpbin&#34;&gt;github&lt;/a&gt;)是一个很不错测试工具，你可以放心大胆的&lt;strong&gt;黑&lt;/strong&gt;他，而不用担心他报复你。他有点像一个蜜罐，时刻等待着你的光临，然后根据你的请求，给你返回你想要的东西&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP天坑总结</title>
      <link>https://phpgao.github.io/php-fool.html</link>
      <pubDate>Sat, 27 Jun 2015 01:59:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php-fool.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/2312350731.jpg&#34; alt=&#34;天坑&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;PHP天坑你懂得，不断总结中。。。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MAC下快速安装PHP</title>
      <link>https://phpgao.github.io/mac-install-php.html</link>
      <pubDate>Fri, 26 Jun 2015 05:59:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mac-install-php.html</guid>
      <description>请安装Homebrew先
# 添加源 brew tap josegonzalez/homebrew-php # 一键安装php各个版本 brew install php54 php54-mcrypt brew install php55 php55-xdebug brew install php56 </description>
    </item>
    
    <item>
      <title>发现了一个不错的PHP框架Slim</title>
      <link>https://phpgao.github.io/php-slim-framework.html</link>
      <pubDate>Thu, 25 Jun 2015 04:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php-slim-framework.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/2369929849.png&#34; alt=&#34;Slim Framework&#34;  /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Slim的中文意思是苗条的。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>准备入坑草缸，有什么建议吗？</title>
      <link>https://phpgao.github.io/Aquarium-Plants-to-be-done.html</link>
      <pubDate>Wed, 24 Jun 2015 15:13:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/Aquarium-Plants-to-be-done.html</guid>
      <description>(图片来自虫师)
先买个小的练练手</description>
    </item>
    
    <item>
      <title>简单socket编程1</title>
      <link>https://phpgao.github.io/socket-lesson1.html</link>
      <pubDate>Wed, 24 Jun 2015 04:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/socket-lesson1.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/2605814858.jpg&#34; alt=&#34;socket&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;(图片来自互联网)&lt;/p&gt;
&lt;p&gt;说到socket，学过网络基础的人都听过，他是TCP/IP的抽象，他是网络世界的入口，它无处不在。&lt;/p&gt;
&lt;p&gt;学会了socket编程，就意味着能够更深层次的控制你的流量，之后再看python的urllib*或php的curl，简直就是小儿科！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>近距离接触HTTP协议</title>
      <link>https://phpgao.github.io/socket-http.html</link>
      <pubDate>Wed, 24 Jun 2015 00:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/socket-http.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/4066750042.png&#34; alt=&#34;HTTP_logo&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;(图片来自WIKI)&lt;/p&gt;
&lt;p&gt;超文本传输协议（HTTP，HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络协议。我们打开浏览器输入网址&lt;code&gt;www.google.com&lt;/code&gt;，不对！刚才那个是一个不存在的网址，我们还是用&lt;code&gt;www.phpgao.com&lt;/code&gt;为例吧。我们(客户端)将老高的域名输入浏览器，浏览器就会为我们呈现老高的网页，首先我们能确定作为客户端，在此期间必定与老高的服务器发生了某种关系！但是具体发送了什么呢？作为一名WEB开发人员，这是我们必须知道的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>代理网站列表</title>
      <link>https://phpgao.github.io/proxy-list.html</link>
      <pubDate>Tue, 23 Jun 2015 09:44:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/proxy-list.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/4026837055.png&#34; alt=&#34;快递 代理&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;(图片来自互联网)&lt;/p&gt;
&lt;p&gt;代理是个好东西！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python中的cookielib的使用方法</title>
      <link>https://phpgao.github.io/python-cookielib.html</link>
      <pubDate>Sun, 21 Jun 2015 11:18:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python-cookielib.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/2635542683.jpg&#34; alt=&#34;cookie&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;(图片来自互联网)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.python.org/2/library/cookielib.html&#34;&gt;cookielib&lt;/a&gt;是一个自动处理cookies的模块，如果我们在使用爬虫等技术的时候需要保存cookie，那么cookielib会让你事半功倍！他最常见的搭档模块就是python下的urllib和request。&lt;/p&gt;
&lt;p&gt;但是老高在使用cookielib的时候总是碰到这样那样的问题，在查看cookielib的源码后，有所感悟。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Privoxy将socks5代理转为http代理</title>
      <link>https://phpgao.github.io/privoxy-shadowsocks.html</link>
      <pubDate>Fri, 19 Jun 2015 02:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/privoxy-shadowsocks.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/13067004.png&#34; alt=&#34;访问谷歌&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;大家都知道shadowsocks只提供了SOCKS5的代理，而没有提供http代理，而很多软件仅提供了http代理的支持，比如老高需要使用shell命令行扶墙，或者使用git同步android的源代码，再或者更新android SDK，该怎么办呢？&lt;/p&gt;
&lt;p&gt;老高在此介绍一个软件&lt;a href=&#34;http://www.privoxy.org&#34;&gt;Privoxy&lt;/a&gt;，它可以作为&lt;strong&gt;代理的代理&lt;/strong&gt;，为我们解决上述问题！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Privoxy is a non-caching web proxy with advanced filtering capabilities for enhancing privacy, modifying web page data and HTTP headers, controlling access, and removing ads and other obnoxious Internet junk. Privoxy has a flexible configuration and can be customized to suit individual needs and tastes. It has application for both stand-alone systems and multi-user networks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由介绍看来，privoxy的功能可远远不止http代理这么简单！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>新主题基于Bootstrap3</title>
      <link>https://phpgao.github.io/new_theme_bootstrap3.html</link>
      <pubDate>Fri, 19 Jun 2015 01:48:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/new_theme_bootstrap3.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/3708675869.png&#34; alt=&#34;新主题&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;大家应该注意到了，老高花了两天时间匆忙做的难看的主题终于上线了。&lt;/p&gt;
&lt;p&gt;已经实现的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自适应页面&lt;/li&gt;
&lt;li&gt;lazyload图片加载&lt;/li&gt;
&lt;li&gt;加载速度优化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前BS的浏览器支持情况如下表&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用7牛云储存加速你的网站</title>
      <link>https://phpgao.github.io/7niu.html</link>
      <pubDate>Mon, 15 Jun 2015 04:24:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/7niu.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://portal.qiniu.com/signup?code=3lpzf8jdg9h02&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/1776694894.png&#34; alt=&#34;7牛LOGO&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不知道大家有没有发现老高的博客虽然使用了低价的搬瓦工，但是速度却没有你想象的那么满。答案就是使用了7牛的云加速。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UltraVPS-性价比$12-年</title>
      <link>https://phpgao.github.io/ultravps.html</link>
      <pubDate>Mon, 15 Jun 2015 03:14:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ultravps.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.ultravps.com/clients/aff.php?aff=155&amp;amp;pid=34&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/2007871324.png&#34; alt=&#34;2015-06-22_09-51-10.png&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今天老高发现了一个算是性价比和搬瓦工持平的VPS－－－UltraVPS&lt;/p&gt;
&lt;p&gt;如果对搬瓦工速度不太满意的可以试试UltraVPS的基础套餐。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目前基础套餐可以使用3折优惠码！
这家VPS可能不稳定，购买前请三思！&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>PHP实现常见排序</title>
      <link>https://phpgao.github.io/php-sort.html</link>
      <pubDate>Tue, 09 Jun 2015 15:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php-sort.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/1704156785.png&#34; alt=&#34;排序&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;(图片来自互联网)&lt;/p&gt;
&lt;p&gt;最近老高复习了下数据结构，此文会慢慢更新！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&amp;lt;?php

$count = 1000;

for($i=0;$i&amp;lt;$count;$i++){
    $random_array[$i] = rand(0,$count);
}


# 空白对照
$start = microtime(1);
echo &amp;#39;Do nothing takes:&amp;#39; . number_format((microtime(1) - $start), 6);
echo &amp;#34;\n&amp;#34;;

# 原生方法排序
$test_array = $random_array;
$start = microtime(1);

sort($test_array);
echo &amp;#39;Origin sort takes:&amp;#39; . number_format((microtime(1) - $start), 6);
echo &amp;#34;\n&amp;#34;;

# 冒泡排序
# 两两交换，思路很简单
$test_array = $random_array;
$start = microtime(1);
# 需要把计算个数的时间也考虑到
$count = count($test_array);
# 循环n-1次
for($i=1;$i&amp;lt;$count;$i++){
    # 循环n-1-$i次
    for($j=0;$j&amp;lt;$count-$i;$j++){
        if($test_array[$j] &amp;gt; $test_array[$j+1]){
            $tmp = $test_array[$j];
            $test_array[$j] = $test_array[$j+1];
            $test_array[$j+1] = $tmp;
        }
    }
}
echo &amp;#39;Bubble sort takes:&amp;#39; . number_format((microtime(1) - $start), 6);
echo &amp;#34;\n&amp;#34;;

# 选择排序
# 依次选择最小(大)的元素，等选择完毕自动有序
$test_array = $random_array;
$start = microtime(1);
$count = count($test_array);

for($i=0;$i&amp;lt;$count-1;$i++){
    # $test_array[$i]为当前最小
    for($j=$i+1;$j&amp;lt;$count;$j++){
        # 从下一个开始比较
        if($test_array[$i] &amp;gt; $test_array[$j]){
            $tmp = $test_array[$j];
            $test_array[$j] = $test_array[$i];
            $test_array[$i] = $tmp;
        }
    }
}
echo &amp;#39;Select sort takes:&amp;#39; . number_format((microtime(1) - $start), 6);
echo &amp;#34;\n&amp;#34;;


# 插入排序
# 就像别人给你发扑克牌，拿到一张牌就插到你手上，并使之有序
$test_array = $random_array;
$start = microtime(1);
$count = count($test_array);
# 直接跳过$i=0
for($i=1;$i&amp;lt;$count;$i++){
    # 取$i左边的元素先比，比到最左
    for($j=$i-1;$j&amp;gt;=0;$j--){
        # 共$j+1个元素，其中前$j个有序
        if($test_array[$j] &amp;gt; $test_array[$j+1]){
            $tmp = $test_array[$j];
            $test_array[$j] = $test_array[$j+1];
            $test_array[$j+1] = $tmp;
        }else{
            break;
        }
    }
}

echo &amp;#39;Insertion sort takes:&amp;#39; . number_format((microtime(1) - $start), 6);
echo &amp;#34;\n&amp;#34;;


# 快速排序
# 有点递归的思想，随机一个基准，将集合分为两半，然后继续分解，直到元素个数为1或0个
$test_array = $random_array;
$start = microtime(1);

function quick_sort($arr){
    $len = count($arr);
    # 符合条件&amp;lt;=1即无需分组
    if($len &amp;lt;= 1) return $arr;

    # floor也行，主要是取整
    $index = ceil($len/2);
    $base = $arr[$index];

    $left = array();
    $right = array();

    for($i=0;$i&amp;lt;$len;$i++){
        if($i == $index) continue;
        if($arr[$i] &amp;lt; $base){
            $left[] = $arr[$i];
        }else{
            $right[] = $arr[$i];
        }
    }

    $l = quick_sort($left);
    $r = quick_sort($right);
    return array_merge($l, (array)$base, $r);
}

quick_sort($test_array);
echo &amp;#39;Quick sort takes:&amp;#39; . number_format((microtime(1) - $start), 6);
echo &amp;#34;\n&amp;#34;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>centos下安装使用composer</title>
      <link>https://phpgao.github.io/composer-centos.html</link>
      <pubDate>Tue, 09 Jun 2015 02:20:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/composer-centos.html</guid>
      <description>&lt;p&gt;composer的中文意思为作曲家，是php最新的包管理器。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/3590997597.png&#34; alt=&#34;php composer&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SS公共服务器的基本安全措施</title>
      <link>https://phpgao.github.io/ss-public-server.html</link>
      <pubDate>Mon, 08 Jun 2015 08:15:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ss-public-server.html</guid>
      <description>&lt;p&gt;老高以前免费分享的ss服务器 &lt;a href=&#34;https://blog.phpgao.com/try_shadowsocks_via_qrcode.html&#34;&gt;免费shadowsocks&lt;/a&gt; ，被攻击了。。。后台检测到有大量的垃圾邮件，是我大意了，忘记了给做一些保护措施，赶紧补上。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>华山攻略</title>
      <link>https://phpgao.github.io/climb-and-conquer-mount-hua.html</link>
      <pubDate>Fri, 05 Jun 2015 09:10:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/climb-and-conquer-mount-hua.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/3208204977.jpg&#34; alt=&#34;欧阳锋&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;(配图你懂得)&lt;/p&gt;
&lt;p&gt;这篇文章你能够了解到：&lt;/p&gt;
&lt;p&gt;华山最新攻略
夜爬华山攻略
华山日出
华山第一险
长空栈道
找自虐
徒步爬山&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你知道吗？华山发音是四声，huà。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>一次愉快的海淘经历之博朗340S</title>
      <link>https://phpgao.github.io/shopping-braun.html</link>
      <pubDate>Fri, 05 Jun 2015 02:40:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/shopping-braun.html</guid>
      <description>&lt;p&gt;5月17日发现 色魔张大妈的&lt;a href=&#34;http://haitao.smzdm.com/p/328619&#34;&gt;再补货：BRAUN 博朗 3 Series 新3系 340S-4 干湿两用 电动剃须刀$39.95+$3.75直邮中国&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/2602715779.jpg&#34; alt=&#34;340S&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;刚好老爹和老哥都想换剃须刀，索性直接订购了两个，等发货两天后，果然又是易客满接盘国内物流，无奈继续上传身份证，记得要打水印，然后就坐等收货了。本想着这个又要等上1个月（上次东芝2T硬盘和SANDISK 64G有过阴影），结果。。。请看下图：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一则广告---梦想依在，人生正当年！</title>
      <link>https://phpgao.github.io/do-not-lose-your-passion.html</link>
      <pubDate>Thu, 04 Jun 2015 12:26:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/do-not-lose-your-passion.html</guid>
      <description>同志们不要忘记了自己的梦想啊！</description>
    </item>
    
    <item>
      <title>openwrt中br-lan,eth0,eth0.1,eth0.2</title>
      <link>https://phpgao.github.io/openwrt-interface.html</link>
      <pubDate>Tue, 02 Jun 2015 11:07:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/openwrt-interface.html</guid>
      <description>&lt;p&gt;openwrt的接口真是多，老高一下子都看晕了，不过仔细理一理，还是能够分辨的。&lt;/p&gt;
&lt;p&gt;首先盗openwrt-wiki中的一张图，这张图对理解这些接口很重要！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/3406911994.png&#34; alt=&#34;asus-internals-default&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tcpdump命令讲解</title>
      <link>https://phpgao.github.io/tcpdump.html</link>
      <pubDate>Tue, 02 Jun 2015 06:29:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/tcpdump.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/2931030976.png&#34; alt=&#34;tcpdump&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;什么是tcpdump？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A powerful command-line packet analyzer; and libpcap, a portable C/C++ library for network traffic capture.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;一个强大的抓包命令行工具，还有libpcap，一个跨平台的C/C++网络抓包库。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>typecho插件编写教程7---Helper类</title>
      <link>https://phpgao.github.io/typecho_plugin_tutorial-7.html</link>
      <pubDate>Tue, 02 Jun 2015 03:00:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_plugin_tutorial-7.html</guid>
      <description>&lt;p&gt;&lt;code&gt;Helper&lt;/code&gt;类为我们封装了很多与插件有关的操作，并且全部是公共静态方法，比如获取系统配置、添加路由、添加面板等功能，是开发插件必不可少的工具。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;插件帮手将默认出现在所有的typecho发行版中.因此你可以放心使用它的功能, 以方便你的插件安装在用户的系统里.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Helper类的注释已经写的很清楚了，老高在此仅挑几个常用的方法讲讲。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>鸟哥的私房菜学习笔记----iptables防火墙设置</title>
      <link>https://phpgao.github.io/vbird_linux_note_iptables.html</link>
      <pubDate>Sun, 31 May 2015 08:22:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vbird_linux_note_iptables.html</guid>
      <description>&lt;p&gt;多图杀猫，流量党渗入&lt;/p&gt;
&lt;p&gt;以下内容总结自鸟哥的 Linux 私房菜 &amp;ndash; 服务器(第三版)，同时推荐喜欢Linux的同学们学习阅读。&lt;/p&gt;
&lt;p&gt;关于VPS的更多安全设置可以参考 &lt;a href=&#34;https://blog.phpgao.com/vps_safty.html&#34;&gt;VPS安全设置&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://blog.phpgao.com/vps_iptables.html&#34;&gt;VPS安全之防火墙设置&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>鸟哥的私房菜学习笔记----网络速查</title>
      <link>https://phpgao.github.io/vbird_linux_note_network.html</link>
      <pubDate>Sun, 31 May 2015 03:32:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vbird_linux_note_network.html</guid>
      <description>&lt;p&gt;多图杀猫，流量党渗入&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>-etc-profile,-etc-bashrc等文件的区别与作用</title>
      <link>https://phpgao.github.io/profile_bashrc_bash_profile_bashrc_definition.html</link>
      <pubDate>Thu, 28 May 2015 17:14:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/profile_bashrc_bash_profile_bashrc_definition.html</guid>
      <description>&lt;p&gt;当我们在做一些与bash相关的操作时，比如设置别名、登录启动项等，多多少少都会与下面几个文件打交道，用的时候一查，然后又忘了。好记性不如烂笔头，下面老高就帮你理一理这些文件到底是干啥的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/etc/profile&lt;/li&gt;
&lt;li&gt;/etc/bashrc&lt;/li&gt;
&lt;li&gt;~/.bash_profile&lt;/li&gt;
&lt;li&gt;~/.bashrc&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Linux下安装trash-cli防止误删文件</title>
      <link>https://phpgao.github.io/linux-trash-cli.html</link>
      <pubDate>Thu, 28 May 2015 11:43:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/linux-trash-cli.html</guid>
      <description>&lt;p&gt;玩过Linux的同学应该都知道这个要命的命令，此命令一出，系统几乎废了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rm -rf /
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;虽然一再强调&lt;code&gt;rm&lt;/code&gt;的时候要注意，但是还是会有同学犯错误删文件，有什么办法能够减少此类事情的发生呢？&lt;/p&gt;
&lt;p&gt;今天老高就要介绍此工具&amp;mdash;&amp;ndash;  &lt;code&gt;trash-cli&lt;/code&gt;。他实现了类似回收站的功能，以后删除的时候就有了后悔药。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/05/2919137931.jpg&#34; alt=&#34;trash-cli&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>centos安装EPEL</title>
      <link>https://phpgao.github.io/centos_install_epel.html</link>
      <pubDate>Wed, 27 May 2015 14:25:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/centos_install_epel.html</guid>
      <description>EPEL全称Extra Packages for Enterprise Linux，官方翻译为 企业版 Linux 附加软件包。顾名思义，他可以扩充你的软件库，安装很多软件时能省去很多时间。比如最近很火的PHP的DoS漏洞，Bug 61461，在EPEL下面只需要一条命令就能将PHP升级为5.9，避免重新编。
老高推荐新安装的centos系统都先安装此附加软件包！
安装命令：
yum install epel-release 没有报错的话，那么EPEL就安装完毕了。
如果上述命令还是解决不了问题，那就必须有针对性的安装了。
以下命令复制自Install EPEL and additional repositories on CentOS and Red Hat
#CentOS and Red Hat Enterprise Linux 5.x wget http://dl.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm rpm -Uvh epel-release-5*.rpm #CentOS and Red Hat Enterprise Linux 6.x wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm rpm -Uvh epel-release-6*.rpm #CentOS and Red Hat Enterprise Linux 7.x wget http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm rpm -Uvh epel-release-7*.rpm 你还可以在此查看每个系统对应的最新的EPEL版本</description>
    </item>
    
    <item>
      <title>在centos上安装Munin监控服务器运行状态</title>
      <link>https://phpgao.github.io/munin_on_centos.html</link>
      <pubDate>Wed, 27 May 2015 13:48:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/munin_on_centos.html</guid>
      <description>&lt;p&gt;老高的服务器在搬瓦工上跑着，虽然后台有各种监控信息，但是要想查看还是必须登录后再点击很多次才能看到，很麻烦，于是通过Google找到了这个小巧的系统监控软件 &amp;ndash; &lt;a href=&#34;http://munin-monitoring.org&#34;&gt;Munin&lt;/a&gt;。这个软件在系统中部署很简单，几行代码就能搞定！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2014-11-24: Munin 2.0.25 is released.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://guide.munin-monitoring.org/en/latest/index.html&#34;&gt;Munin手册地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>shadowsocks相关资源下载</title>
      <link>https://phpgao.github.io/download_shadowsocks.html</link>
      <pubDate>Tue, 26 May 2015 05:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/download_shadowsocks.html</guid>
      <description>&lt;p&gt;鉴于很多同学找不到shadowsocks客户端服务端，老高在此提供最新的下载，如果某软件有更新，请留言提醒！&lt;/p&gt;
&lt;p&gt;请注意&lt;strong&gt;老高不会对下载的软件负责&lt;/strong&gt;，老高也没有做sha1、md5校验，都是直接下载下来的。。。&lt;/p&gt;
&lt;p&gt;如果不放心的话，你有绕道的权利！&lt;/p&gt;
&lt;p&gt;顺便分享几个站&lt;/p&gt;
&lt;p&gt;直接下载Google Play的APK&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://apps.evozi.com/apk-downloader/&#34;&gt;apk-downloader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;直接下载chrome商店应用&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://chrome-extension-downloader.com/&#34;&gt;chrome-extension-downloader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;网友 &lt;a href=&#34;http://weibo.com/nocheers&#34;&gt;@disonlee&lt;/a&gt; 提供&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://getchrome.sinaapp.com&#34;&gt;getchrome.sinaapp.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux服务器配置Redis并启用PHP支持</title>
      <link>https://phpgao.github.io/redis_php.html</link>
      <pubDate>Mon, 25 May 2015 13:29:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/redis_php.html</guid>
      <description>&lt;p&gt;redis目前(20150525)已经更新到了3.0版本，今天我们来学习如何在服务器部署Redis，并启用php支持。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/05/1996252458.jpg&#34; alt=&#34;Redis logo&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决MySQL中Sleep连接过多的问题</title>
      <link>https://phpgao.github.io/mysql_too_many_sleeping_connections.html</link>
      <pubDate>Mon, 25 May 2015 12:19:28 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mysql_too_many_sleeping_connections.html</guid>
      <description>&lt;p&gt;有时候你在mysql中运行&lt;code&gt;SHOW PROCESSLIST;&lt;/code&gt;后会发现数据库中有很多这样的进程：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/05/1013249303.jpg&#34; alt=&#34;MySQL中Sleep连接过多&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决ngx_lua_waf总是提示参数错误的问题</title>
      <link>https://phpgao.github.io/ngx_lua_waf_error_500.html</link>
      <pubDate>Mon, 25 May 2015 05:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ngx_lua_waf_error_500.html</guid>
      <description>&lt;p&gt;最近服务上了ngx_lua_waf以防御攻击，但是ngx_lua_waf的参数确实有些严格，导致自己写文章都被BAN，于是看了看源码，发现可以添加url白名单功能，这不就搞定了！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>让多说支持UA的显示</title>
      <link>https://phpgao.github.io/duoshuo_user_agent.html</link>
      <pubDate>Mon, 25 May 2015 04:34:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/duoshuo_user_agent.html</guid>
      <description>&lt;p&gt;代码由 huhuhuhu 提供&lt;/p&gt;
&lt;p&gt;地址 &lt;a href=&#34;http://git.oschina.net/huhuhuhu/Make-DUOSHUO-Show-UA&#34;&gt;huhu呼呼 / Make DUOSHUO Show UA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;老高的博客目前的评论系统使用了 多说 + typecho多说插件，最近才发现了多说还可以支持显示UA，动手吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>缓存插件TpCache-for-Typecho</title>
      <link>https://phpgao.github.io/tpcache_for_typecho.html</link>
      <pubDate>Sun, 24 May 2015 13:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/tpcache_for_typecho.html</guid>
      <description>&lt;h2 id=&#34;功能&#34;&gt;功能&lt;/h2&gt;
&lt;p&gt;减缓网站并发压力而开发的缓存插件。&lt;/p&gt;
&lt;h2 id=&#34;注意&#34;&gt;注意&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;支持&lt;strong&gt;Memcache&lt;/strong&gt;，&lt;strong&gt;Redis&lt;/strong&gt;，&lt;strong&gt;Mysql&lt;/strong&gt;三种驱动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;非js方式的&lt;/strong&gt;访问统计插件会失效&lt;/li&gt;
&lt;li&gt;BUG请在&lt;a href=&#34;https://blog.phpgao.com/tpcache_for_typecho.html&#34;&gt;缓存插件TpCache for Typecho&lt;/a&gt;页汇报&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>几条命令找出服务器上的垃圾文件</title>
      <link>https://phpgao.github.io/clean-up-your-linux.html</link>
      <pubDate>Sun, 24 May 2015 04:25:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/clean-up-your-linux.html</guid>
      <description>&lt;p&gt;Linux用久了也可能出现很多垃圾文件，下面跟着老高用几行命令揪出来占用系统空间的家伙们！&lt;/p&gt;
&lt;p&gt;当然，如果你的服务器容量是TB、PB级别的请无视此文。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP安装配置Opcache加速你的网站</title>
      <link>https://phpgao.github.io/php-opcache-optimize.html</link>
      <pubDate>Sun, 24 May 2015 03:08:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php-opcache-optimize.html</guid>
      <description>&lt;p&gt;本文针对PHP5.5等高级版本，编译时需要加上&lt;code&gt;--enable-opcache&lt;/code&gt;参数&lt;/p&gt;
&lt;p&gt;编译PHP请参考&lt;a href=&#34;https://blog.phpgao.com/compile_php.html&#34;&gt;编译PHP5.6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;编译安装完成后，我们开始配置Opcache&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux服务器配置memcached并启用PHP支持</title>
      <link>https://phpgao.github.io/php-memcached-extension-installation.html</link>
      <pubDate>Sun, 24 May 2015 02:32:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php-memcached-extension-installation.html</guid>
      <description>&lt;p&gt;最近在服务器上部缓存系统，记录一下PHP安装memcached扩展。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>彻底解决编译PHP找不到libc-client.a的问题</title>
      <link>https://phpgao.github.io/libc-client-404.html</link>
      <pubDate>Sat, 23 May 2015 04:07:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/libc-client-404.html</guid>
      <description>&lt;p&gt;最近PHP爆出漏洞，老高也在升级PHP版本，并加入一些支持，但是遇到这个问题很蛋疼&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;configure: error: Cannot find imap library (libc-client.a). Please check your c-client installation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;网上搜了各种教程，各种cp都没用，索性我们就自己编译吧！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用搬瓦工的VPS搭建博客网站</title>
      <link>https://phpgao.github.io/website_on_bandwagonhost.html</link>
      <pubDate>Fri, 22 May 2015 02:07:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/website_on_bandwagonhost.html</guid>
      <description>&lt;p&gt;想必大家买了VPS后一定都不想闲着。。。搭个博客算是最简单实用了。&lt;/p&gt;
&lt;p&gt;但是基本上大家在网上下载到的一键安装包都没有&lt;strong&gt;后台管理&lt;/strong&gt;功能，如果想多绑定几个域名都不知道怎么操作，更别提搭建多个站点了。&lt;/p&gt;
&lt;p&gt;下面老高就介绍一种简单实用的网站搭建方法，搭建出的网站速度快，安全性高，还支持各种优化配置。&lt;/p&gt;
&lt;p&gt;最重要的是操作基本都是傻瓜式的，不需要很多web技能也可以完整的配置下来，而且基本上就成了半个运维了，是不是很厉害！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;像老高这样的&lt;strong&gt;老司机&lt;/strong&gt;，整个装下来再加上安全设置最多5分钟搞定，相信你一定也可以！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;搭建过程中如果有什么问题，请留言交流！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/11/3949848852.gif&#34; alt=&#34;kangle&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>typecho插件编写教程6---调用接口</title>
      <link>https://phpgao.github.io/typecho_plugin_tutorial-6.html</link>
      <pubDate>Wed, 20 May 2015 12:39:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_plugin_tutorial-6.html</guid>
      <description>&lt;p&gt;此篇我们开始调用接口，我们在插件类中新定义一个方法，起名为&lt;code&gt;send_post&lt;/code&gt;，在方法中我们通过系统配置获取接口调用地址。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>typecho插件编写教程5---核心代码</title>
      <link>https://phpgao.github.io/typecho_plugin_tutorial-5.html</link>
      <pubDate>Wed, 20 May 2015 10:47:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_plugin_tutorial-5.html</guid>
      <description>&lt;p&gt;之前啰嗦了很多，现在开始写核心代码。&lt;/p&gt;
&lt;p&gt;分析一下，发布文章的时候，我们需要的信息就是当前文章的URL，我们需要想办法从&lt;code&gt;$contents&lt;/code&gt;、 &lt;code&gt;$class&lt;/code&gt;中拿到他。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>typecho插件编写教程4---插件点</title>
      <link>https://phpgao.github.io/typecho_plugin_tutorial-4.html</link>
      <pubDate>Wed, 20 May 2015 05:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_plugin_tutorial-4.html</guid>
      <description>&lt;p&gt;终于，在能够保存配置信息后，我们可以开始编写插件的挂载功能了。&lt;/p&gt;
&lt;p&gt;首先我们需要知道系统为我们在各个关键的环节都预留了插件点给我们，系统运行到插件点时，会检测到是否有插件挂在这个点上，然后执行插件的逻辑！&lt;/p&gt;
&lt;p&gt;插件的工作就是找到合适的插件点，挂上去，然后执行自己的逻辑。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>删除nginx-fastcgi-cache缓存</title>
      <link>https://phpgao.github.io/nginx-fastcgi-cache-deletion.html</link>
      <pubDate>Wed, 20 May 2015 05:05:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx-fastcgi-cache-deletion.html</guid>
      <description>老高通过nginx的优化配置，配置了fastcgi_cache，服务器使用缓存固然很好，但是也会遇到很尴尬的时候。
比如突然发现某个错别字，在后台改好后发现文章之前已被缓存，不知道还要等多久才能刷新，解决办法是删除生成的文件
但想要找到已经可不容易，有两个办法：
 一个一个找或者直接删除全部缓存 根据nginx的URL &amp;ndash; key的规则，再使用两层hash来定位文件  因为老高缓存的文件数不多，所以最后的解决办法是 &amp;ndash; 关键字过滤
# 找 grep -r &amp;#39;your keywords&amp;#39; . # 删 grep -rl &amp;#39;your keywords&amp;#39; . |xargs rm 下面的也可以
find |xargs grep &amp;#39;your keywords&amp;#39; find |xargs grep -l &amp;#39;your keywords&amp;#39;|xargs rm 顺便记个笔记
# 顺便记一下find限定查找文件和目录 find -type f find -type d # grep --help 中-R也很有用！ grep -r --include=&amp;#34;*.php&amp;#34; </description>
    </item>
    
    <item>
      <title>typecho插件编写教程3---保存配置</title>
      <link>https://phpgao.github.io/typecho_plugin_tutorial-3.html</link>
      <pubDate>Wed, 20 May 2015 02:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_plugin_tutorial-3.html</guid>
      <description>&lt;p&gt;上一节我们制作了一个裸插件，下面我们开始让我们的插件开始工作！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>typecho插件编写教程2---新插件</title>
      <link>https://phpgao.github.io/typecho_plugin_tutorial-2.html</link>
      <pubDate>Wed, 20 May 2015 01:05:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_plugin_tutorial-2.html</guid>
      <description>&lt;p&gt;第一节我们了解了一个插件的基本构成，下面我们需要一个实例练习巩固。&lt;/p&gt;
&lt;p&gt;真赶巧，老高最近正在改版&lt;a href=&#34;https://blog.phpgao.com/typecho_plugin_baidusubmit.html&#34;&gt;百度sitemap提交插件for typecho&lt;/a&gt;，下面和老高一起改版吧！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>typecho插件编写教程1---从HelloWorld说起</title>
      <link>https://phpgao.github.io/typecho_plugin_tutorial-1.html</link>
      <pubDate>Tue, 19 May 2015 13:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_plugin_tutorial-1.html</guid>
      <description>&lt;p&gt;最近老高正在编写一个关于typecho的插件，由于typecho不像wordpress，有那么多的文档参考，写一个插件还是遇到了很多的坑，不过随着研究的不断深入，老高也慢慢上手了，于是总结出此篇编写教程分享给大家！&lt;/p&gt;
&lt;p&gt;如果你对typecho的源码有兴趣，可以参考老高的系列文章&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.phpgao.com/typecho_source_code_init.html&#34;&gt;typecho源代码解析1 - 系统初始化&lt;/a&gt;
&lt;a href=&#34;https://blog.phpgao.com/typecho_source_code_plugin.html&#34;&gt;typecho源代码解析2 - 插件机制&lt;/a&gt;
&lt;a href=&#34;https://blog.phpgao.com/typecho_source_code_dispatch.html&#34;&gt;typecho源代码解析3 - 路由分发&lt;/a&gt;
&lt;a href=&#34;https://blog.phpgao.com/typecho_source_code_business_logic.html&#34;&gt;typecho源代码解析4 - 业务逻辑&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginx编译安装ngx_lua模块</title>
      <link>https://phpgao.github.io/nginx_ngx_lua.html</link>
      <pubDate>Tue, 19 May 2015 06:11:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_ngx_lua.html</guid>
      <description>&lt;p&gt;nginx lua模块淘宝开发的nginx第三方模块,它能将lua语言嵌入到nginx配置中,从而使用lua就极大增强了nginx的能力.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginx的优化配置</title>
      <link>https://phpgao.github.io/nginx_optimization.html</link>
      <pubDate>Tue, 19 May 2015 01:12:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_optimization.html</guid>
      <description>&lt;p&gt;老高的服务器最近表示亚历山大，先祭出此篇缓解前端压力，之后再从代码中优化一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用ss-manyuser和ss-panel搭建shadowsocks分享平台</title>
      <link>https://phpgao.github.io/share_shadowsocks.html</link>
      <pubDate>Mon, 18 May 2015 14:43:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/share_shadowsocks.html</guid>
      <description>ss-manyuser做前端，ss-panel做后端，运行环境centos6。
项目地址 感谢以下大神提供源码
manyuser：
shadowsocks manyuser branch
ss-panel:
ss-panel
安装 mkdir /data cd /data git clone https://github.com/mengskysama/shadowsocks.git backend git clone https://github.com/orvice/ss-panel.git front 配置 front # 1. 创建数据库，并建立一个本地用户shadowsocks@localhost，并赋予权限 CREATE DATABASE IF NOT EXISTS shadowsocks DEFAULT CHARSET utf8 COLLATE utf8_general_ci; GRANT ALL PRIVILEGES ON shadowsocks.* TO &amp;#39;shadowsocks&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;password&amp;#39;; # 2. 导入sql cd front cat sql/*.sql &amp;gt; merged.sql # 登录mysql mysql&amp;gt;use shadowsocks; mysql&amp;gt;source path/to/merged.sql; # 3. 将数据库配置信息写入lib/config.php 这里要提一下：
userid=1的用户是管理员，最好把他的端口将50000改为15000，密码是直接md5，可以自己修改。
passwd字段是ss的连接密码。
backend # 准备环境 yum -y install python-pip m2crypto pip install cymysql # 2.</description>
    </item>
    
    <item>
      <title>simple_html_dom换行符丢失的问题</title>
      <link>https://phpgao.github.io/simple_html_dom_miss_n.html</link>
      <pubDate>Mon, 18 May 2015 12:10:37 +0000</pubDate>
      
      <guid>https://phpgao.github.io/simple_html_dom_miss_n.html</guid>
      <description>今天老高在更新**Table Of Contents for typecho**的时候，遇到了一个问题。
因为解析文档的时候，换行符\n被无故删除掉了，导致pre中code的解析一片混乱，阅读源代码后发现了这个选项stripRN，默认值是true，即默认删除变量中的换行符，将其关闭即可！
核心代码位于约1147行左右。
if ($stripRN) { $str = str_replace(&amp;#34;\r&amp;#34;, &amp;#34; &amp;#34;, $str); $str = str_replace(&amp;#34;\n&amp;#34;, &amp;#34; &amp;#34;, $str); ... </description>
    </item>
    
    <item>
      <title>模拟登录脚本之搬瓦工bandwagonhost</title>
      <link>https://phpgao.github.io/login_script_for_bandwagonhost.html</link>
      <pubDate>Sun, 17 May 2015 13:15:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/login_script_for_bandwagonhost.html</guid>
      <description>老早写的，都忘了当初想干啥了。。。。
半成品，留个坑，待填。
#!/usr/bin/env python # encoding: utf-8 import cookielib import requests def http_send(url, post_data=&amp;#39;&amp;#39;, **kwargs): cookie_handler = cookielib.MozillaCookieJar(&amp;#39;cookie.txt&amp;#39;) try: cookie_handler.load(ignore_discard=1) except cookielib.LoadError, e: print e + &amp;#34;new cookie file&amp;#34; headers = { &amp;#39;User-Agent&amp;#39;: &amp;#39;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 Safari/537.36&amp;#39;} if post_data: req = requests.post(url, data=post_data, cookies=cookie_handler) else: req = requests.get(url) print req.headers for c in req.cookies: cookie_handler.set_cookie(c) cookie_handler.save(ignore_discard=1) return req.content if __name__ == &amp;#39;__main__&amp;#39;: # init cookie print http_send(&amp;#39;http://localhost/clientarea.</description>
    </item>
    
    <item>
      <title>发现一个命令ldd</title>
      <link>https://phpgao.github.io/good_cmd_ldd.html</link>
      <pubDate>Sun, 17 May 2015 10:09:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/good_cmd_ldd.html</guid>
      <description>ldd是Linux库操作中最实用的一个命令了，他可以查看一个程序所依赖的库。
如果你的程序执行起来缺少某个库，我们就去下载，但是把库放到哪里才能让程序正确是识别出来呢？使用ldd就可以了！
使用方法: ldd [options] file 功能:列出file运行所需的共享库 可用选项
➜ sbin ldd --help Usage: ldd [OPTION]... FILE... --help print this help and exit --version print version information and exit -d, --data-relocs process data relocations 执行符号重部署，并报告缺少的目标对象 -r, --function-relocs process data and function relocations 对目标对象和函数执行重新部署，并报告缺少的目标对象和函数 -u, --unused print unused direct dependencies 打印不需要链接的库 -v, --verbose print all information 打印所有信息 例子
➜ /bin ldd /bin/cp linux-vdso.so.1 =&amp;gt; (0x00007fff8dbfe000) libselinux.so.1 =&amp;gt; /lib64/libselinux.so.1 (0x00007f94558e4000) librt.so.1 =&amp;gt; /lib64/librt.so.1 (0x00007f94556dc000) libacl.</description>
    </item>
    
    <item>
      <title>小米路由器mini折腾之redsocks2的配置篇</title>
      <link>https://phpgao.github.io/redsocks_config.html</link>
      <pubDate>Sun, 17 May 2015 04:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/redsocks_config.html</guid>
      <description>&lt;p&gt;刚刚(2015-05-17 12:00:15)老高刷了目前最新的小米路由mini的pandorabox固件(&lt;strong&gt;r820&lt;/strong&gt;)&lt;/p&gt;
&lt;p&gt;很多朋友说这个版本的redsocks2升级为加强版，选项太多，于是不会配置了。&lt;/p&gt;
&lt;p&gt;下面老高就来讲讲如何配置redsocks2，以及如何与chinadns联合配置。&lt;/p&gt;
&lt;p&gt;如果需要了解更详细的配置，请参考老高的另一篇 &lt;a href=&#34;https://blog.phpgao.com/carzy_router.html&#34;&gt;小米路由器mini折腾之自动翻墙篇&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排查PHP-FPM占用CPU过高</title>
      <link>https://phpgao.github.io/php-fpm-high-cpu-consumption.html</link>
      <pubDate>Fri, 15 May 2015 10:48:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php-fpm-high-cpu-consumption.html</guid>
      <description>最近老高发现服务器的CPU总是被某个php-fpm占用过高，记录一下如何排查。
发现 如何发现的呢？当然是使用top命令，发现系统的load average&amp;gt;3，这说明系统已经处于比较高的负载中。
尝试解决 当我把php-fpm重启后，没过一会儿又开始cpu狂飙！这是什么鬼？
开始排查 首先，我们开启在php-fmp.conf中开启错误日志，慢执行日志还有常规日志
error_log = /var/log/php/error.log access.log = /var/log/php/access.$pool.log access.format = &amp;#34;%R - %u %t \&amp;#34;%m %r%Q%q\&amp;#34; %s %f %{mili}d %{kilo}M %{system}C%%&amp;#34; slowlog = /var/log/php/slow.$pool.log request_slowlog_timeout = 3s 重启php-fpm后我们开始监视日志
# 查看慢执行日志 [15-May-2015 12:50:22] [pool www] pid 1819 script_filename = /home/ftp/phpergao/wwwroot/index.php [0x00007f2d286c2790] replace() /home/ftp/phpergao/wwwroot/usr/plugins/CdnHelper/Plugin.php:72 [0x00007fff78ab00f0] replace() unknown:0 [0x00007f2d286c2420] call_user_func_array() /home/ftp/phpergao/wwwroot/var/Typecho/Plugin.php:489 [0x00007fff78ab0430] __call() unknown:0 [0x00007f2d286c1f78] contentEx() /home/ftp/phpergao/wwwroot/var/Widget/Abstract/Contents.php:141 [0x00007f2d286c1b78] ___content() /home/ftp/phpergao/wwwroot/var/Typecho/Widget.php:385 [0x00007fff78ab0850] __get() unknown:0 [0x00007f2d286c1870] content() /home/ftp/phpergao/wwwroot/var/Widget/Abstract/Contents.php:783 [0x00007f2d286c1628] content() /home/ftp/phpergao/wwwroot/var/Widget/Archive.</description>
    </item>
    
    <item>
      <title>mysql优化之日志配置</title>
      <link>https://phpgao.github.io/mysql_log_configure.html</link>
      <pubDate>Thu, 14 May 2015 11:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mysql_log_configure.html</guid>
      <description>如果你选mysql数据库作为数据持久化的工具，那么就需要一个合理的日志配置，这样有助于排错和数据备份及恢复！
首先我们可以通过下面的MySQL的sql查询正在运行中的日志配置。
刚好我们熟悉一下SHOW VARIABLES LIKE的用法！这个命令是用来查询MySQL运行时配置的语句，LIKE后面的可以接通配符查找！
还有对应的设置语法叫SET GLOBAL，后面我们会用到。
mysql&amp;gt; SHOW VARIABLES LIKE &amp;#39;%log%&amp;#39;; +-----------------------------------------+---------------------------------+ | Variable_name | Value | +-----------------------------------------+---------------------------------+ | back_log | 50 | | binlog_cache_size | 32768 | | binlog_direct_non_transactional_updates | OFF | | binlog_format | STATEMENT | | expire_logs_days | 0 | | general_log | OFF | | general_log_file | /var/run/mysqld/mysqld.log | | innodb_flush_log_at_trx_commit | 1 | | innodb_locks_unsafe_for_binlog | OFF | | innodb_log_buffer_size | 1048576 | | innodb_log_file_size | 5242880 | | innodb_log_files_in_group | 2 | | innodb_log_group_home_dir | .</description>
    </item>
    
    <item>
      <title>将-php-fpm-配置为服务</title>
      <link>https://phpgao.github.io/php-fpm-service.html</link>
      <pubDate>Thu, 14 May 2015 10:59:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php-fpm-service.html</guid>
      <description>&lt;p&gt;请将以下脚本适当修改后命名为&lt;strong&gt;php-fpm&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>php-fpm---启动参数及重要配置详解</title>
      <link>https://phpgao.github.io/php-fpm-configure.html</link>
      <pubDate>Thu, 14 May 2015 10:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php-fpm-configure.html</guid>
      <description>&lt;p&gt;约定几个目录&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/usr/local/php/sbin/php-fpm
/usr/local/php/etc/php-fpm.conf
/usr/local/php/etc/php.ini&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>文章目录-Table-Of-Contents-for-Typecho</title>
      <link>https://phpgao.github.io/table_of_contents_for_typecho.html</link>
      <pubDate>Wed, 13 May 2015 14:10:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/table_of_contents_for_typecho.html</guid>
      <description>&lt;p&gt;Table Of Contents大家都懂得，效果可以看老高的博客。&lt;/p&gt;
&lt;p&gt;欢迎使用！欢迎FORK！欢迎star！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/05/3482950149.png&#34; alt=&#34;Table Of Contents&#34;  title=&#34;Table Of Contents 截图&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>为SourceTree添加Kaleidoscope的external-diff支持</title>
      <link>https://phpgao.github.io/sourcetree_kaleidoscope.html</link>
      <pubDate>Tue, 12 May 2015 16:41:06 +0000</pubDate>
      
      <guid>https://phpgao.github.io/sourcetree_kaleidoscope.html</guid>
      <description>编辑 ~/.gitconfig
# add [difftool &amp;#34;sourcetree&amp;#34;] cmd = /usr/local/bin/ksdiff -- \&amp;#34;$LOCAL\&amp;#34; \&amp;#34;$REMOTE\&amp;#34; path = [mergetool &amp;#34;sourcetree&amp;#34;] cmd = /usr/local/bin/ksdiff --merge --output \&amp;#34;$MERGED\&amp;#34; --base \&amp;#34;$BASE\&amp;#34; -- \&amp;#34;$LOCAL\&amp;#34; \&amp;#34;$REMOTE\&amp;#34; trustExitCode = true 参考
https://ruby-china.org/topics/14404</description>
    </item>
    
    <item>
      <title>git的submodule的使用总结</title>
      <link>https://phpgao.github.io/git_submodule.html</link>
      <pubDate>Tue, 12 May 2015 06:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/git_submodule.html</guid>
      <description>&lt;p&gt;老高最近的项目用到了git的submodule，期间遇到了很多坑，比如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如何更新submodule
如何修改并提交submodule
如何将submodule的变更在父项目中提交&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>换一个主题，换一个心情</title>
      <link>https://phpgao.github.io/new_theme_20150512.html</link>
      <pubDate>Tue, 12 May 2015 03:50:31 +0000</pubDate>
      
      <guid>https://phpgao.github.io/new_theme_20150512.html</guid>
      <description>历时2天，使用了Amaze UI，并且移植了Amaze UI的官方博客主题。
目前还有BUG，待修复。。。</description>
    </item>
    
    <item>
      <title>在mac上安装并使用docker</title>
      <link>https://phpgao.github.io/docker_on_mac.html</link>
      <pubDate>Thu, 30 Apr 2015 10:55:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/docker_on_mac.html</guid>
      <description>&lt;p&gt;docker最近实在火的不行，老高最近也在使用，顺便记录一下。&lt;/p&gt;
&lt;h2 id=&#34;下载安装&#34;&gt;下载安装&lt;/h2&gt;
&lt;p&gt;下载和安装主要参考下面的文章&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://docs.docker.com/installation/mac/&#34;&gt;http://docs.docker.com/installation/mac/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://community.emc.com/docs/DOC-44372&#34;&gt;https://community.emc.com/docs/DOC-44372&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux终端美化资源整理</title>
      <link>https://phpgao.github.io/pretty_linux.html</link>
      <pubDate>Wed, 29 Apr 2015 11:26:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/pretty_linux.html</guid>
      <description>配色方案 通用主题 https://github.com/chriskempson/tomorrow-theme.git
https://github.com/altercation/solarized.git
iterm2 Monokai-Soda
寻找主题方法 github里随便一搜就是一堆堆
https://github.com/search?q=iterm2+theme</description>
    </item>
    
    <item>
      <title>zsh-&#43;-oh-my-zsh-默认shell的最佳替代品</title>
      <link>https://phpgao.github.io/oh-my-zsh.html</link>
      <pubDate>Wed, 29 Apr 2015 11:00:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/oh-my-zsh.html</guid>
      <description>项目地址
zsh &amp;mdash;&amp;ndash;&amp;gt; http://www.zsh.org oh-my-zsh &amp;mdash;-&amp;gt; http://ohmyz.sh
 The last shell you’ll ever need!
 使用方法 为你的MAC、Linux安装zsh
# Centos yum install zsh git -y # OSX brew install zsh git -y 安装oh-my-zsh # via curl curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh # via wget wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O - | sh 设置zsh为系统默认shell # 为root用户修改默认shell为zsh chsh -s /bin/zsh root # 为当前用户修改默认shell为zsh chsh -s /bin/zsh # or chsh -s `which zsh` # 恢复命令 chsh -s /bin/bash add to ~/.</description>
    </item>
    
    <item>
      <title>免费shadowsocks</title>
      <link>https://phpgao.github.io/try_shadowsocks_via_qrcode.html</link>
      <pubDate>Wed, 29 Apr 2015 03:13:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/try_shadowsocks_via_qrcode.html</guid>
      <description>&lt;p&gt;老高最近搭建了一个小应用，功能是共享老高科学上网的帐号供大家体验，使用方法很简单，使用软件提供的&lt;strong&gt;二维码扫描&lt;/strong&gt; 或者 直接打开 &lt;strong&gt;json版本&lt;/strong&gt;，里面什么密码的都有，地址在文末。&lt;/p&gt;
&lt;p&gt;客户端下载请移步 &lt;a href=&#34;https://blog.phpgao.com/download_shadowsocks.html&#34;&gt;shadowsocks相关资源下载&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;服务器由&lt;strong&gt;搬瓦工&lt;/strong&gt;提供，地点是&lt;strong&gt;洛杉矶&lt;/strong&gt;，使用的套餐是**$9.9**，搭建方法请参考&lt;a href=&#34;https://blog.phpgao.com/shadowsocks_on_linux.html&#34;&gt;使用shadowsocks轻松扶墙教程&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>编译小米路由mini的openwrt固件</title>
      <link>https://phpgao.github.io/xiaomi_router_openwrt.html</link>
      <pubDate>Tue, 28 Apr 2015 16:15:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/xiaomi_router_openwrt.html</guid>
      <description>&lt;p&gt;花了一天，终于编译好了小米路由器的openwrt，过程真是一波三折。。。值得一讲。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>安装shadowsocks-python并启用chacha20加密</title>
      <link>https://phpgao.github.io/shadowsocks_chacha20.html</link>
      <pubDate>Mon, 27 Apr 2015 14:29:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/shadowsocks_chacha20.html</guid>
      <description>&lt;p&gt;原版shadowsocks使用python写的，源码在此&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/shadowsocks/shadowsocks&#34;&gt;https://github.com/shadowsocks/shadowsocks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面老高写一个如何安装shadowsocks并且开启chacha20加密的方法&lt;/p&gt;
&lt;p&gt;老高的运行环境&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;centos6 + python2.6&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>使用nginx-&#43;-uWSGI运行flask程序</title>
      <link>https://phpgao.github.io/nginx_uwsgi_flask.html</link>
      <pubDate>Mon, 27 Apr 2015 11:46:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_uwsgi_flask.html</guid>
      <description>&lt;p&gt;老高最近写了一个&lt;a href=&#34;https://github.com/phpgao/qrcode-for-ss&#34;&gt;flask小应用&lt;/a&gt;，功能很简单，就是通过读取配置再显示ss的二维码配置，不过想让他运行起来统一管理，还是费了一些周折啊。&lt;/p&gt;
&lt;p&gt;如果你自己Google过，你可能会发现一个关键字uWSGI，他就是本篇的主角。&lt;/p&gt;
&lt;p&gt;名词解释&lt;/p&gt;
&lt;p&gt;Web服务器网关接口（Python Web Server Gateway Interface，缩写为WSGI。
uwsgi与WSGI一样，是一个通信协议。
uWSGI，一个实现了WSGI，uwsgi，http等协议的服务器，与nginx在一个层次。&lt;/p&gt;
&lt;p&gt;鉴于国内的一些教程都写成翔了，那老高就赶紧记录分享一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>centos6新系统初始化脚本</title>
      <link>https://phpgao.github.io/new_cents_shell.html</link>
      <pubDate>Mon, 27 Apr 2015 03:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/new_cents_shell.html</guid>
      <description>&lt;p&gt;最近装机次数有点多，本来想写到这里的&lt;a href=&#34;https://blog.phpgao.com/centos_optimize.html&#34;&gt;centos6 优化脚本与安全脚本&lt;/a&gt;，结果一想还是新开一个帖子吧。&lt;/p&gt;
&lt;p&gt;centos源设置可以参考&lt;a href=&#34;https://blog.phpgao.com/repo_for_centos.html&#34;&gt;Centos源设置&lt;/a&gt;，老高推荐安装阿里源。&lt;/p&gt;
&lt;p&gt;新机子先运行上面的脚本，再运行这个脚本&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pillow解决encoder-zip-not-available问题</title>
      <link>https://phpgao.github.io/pillow_solve_encoder_zip_not_available.html</link>
      <pubDate>Mon, 27 Apr 2015 03:46:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/pillow_solve_encoder_zip_not_available.html</guid>
      <description>&lt;p&gt;最近写程序用到了这个模块，但是貌似在 &amp;lt;Python2.7 的环境下用总是会出现这个问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>各个系统安装dig工具的教程</title>
      <link>https://phpgao.github.io/how_to_install_dig.html</link>
      <pubDate>Mon, 27 Apr 2015 02:28:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/how_to_install_dig.html</guid>
      <description>&lt;p&gt;dig是一个很不错的工具，它比nslookup好用太多。&lt;/p&gt;
&lt;p&gt;老高主要用dig判断DNS解析故障和DNS解析线路的问题。dig命令虽然好用，但是想要在各个系统中安装使用dig，安装方法还是要记录一下的。&lt;/p&gt;
&lt;p&gt;那么如何安装呢？老高总结了linux服务器，openwrt，Windows等系统的安装dig的方法，希望能够帮助到你。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>shadowsocks一键安装脚本</title>
      <link>https://phpgao.github.io/ss_onekey_installation.html</link>
      <pubDate>Fri, 24 Apr 2015 16:54:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ss_onekey_installation.html</guid>
      <description>&lt;p&gt;摘自&lt;strong&gt;搬瓦工&lt;/strong&gt;后台，脚本简洁明了，请自取。&lt;/p&gt;
&lt;p&gt;一键安装需求：&lt;/p&gt;
&lt;p&gt;centos6 + root用户。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>和老高一起把域名转至namesilo吧</title>
      <link>https://phpgao.github.io/transfer_to_namesilo.html</link>
      <pubDate>Fri, 17 Apr 2015 14:06:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/transfer_to_namesilo.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.namesilo.com/pricing.php?rid=8447580yc&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/2091233691.gif&#34; alt=&#34;namesilo的logo&#34;  /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单的总结一下namesilo的优点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;价格便宜&lt;/li&gt;
&lt;li&gt;免费终生whois隐私保护 godaddy的隐私保护价格为 &lt;strong&gt;9.99美元&lt;/strong&gt; 一年&lt;/li&gt;
&lt;li&gt;域名越多越便宜&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>小米路由器mini折腾之DNS查询失败的排查方法</title>
      <link>https://phpgao.github.io/xiaomi_router_dns_dump.html</link>
      <pubDate>Tue, 14 Apr 2015 15:05:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/xiaomi_router_dns_dump.html</guid>
      <description>&lt;p&gt;想必大家为了科学上网，已经为自己的路由器刷上了openwrt/pandorabox了吧？&lt;/p&gt;
&lt;p&gt;经过老高的统计，目前关于浏览器访问量最高的是这两篇文章&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.phpgao.com/carzy_router.html&#34;&gt;小米路由器mini折腾之自动翻墙篇&lt;/a&gt;
&lt;a href=&#34;https://blog.phpgao.com/xiaomi_router_shadowsocks_libev_spec.html&#34;&gt;小米路由器mini折腾之安装shadowsocks-libev-spec(解决DNS污染)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不知道大家是否能够通过两篇文章的学习研究实现了科学上网呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>搬瓦工购买前必读</title>
      <link>https://phpgao.github.io/pre_buy_faq.html</link>
      <pubDate>Sun, 12 Apr 2015 11:23:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/pre_buy_faq.html</guid>
      <description>&lt;h2 id=&#34;这个vps能做什么&#34;&gt;这个VPS能做什么&lt;/h2&gt;
&lt;p&gt;首先，当你租下这台属于你的服务器后，你有很大的自由去做你想做的事情，但是需要声明的是&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果任何人以任何形式使用从老高的博客购买的VPS去做违法的事(包括违反中美两国的法律)，此行为与老高无关！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个服务器系统基于Linux(Linux是程序猿入门必备基础工具，所以程序员拿来练手非常适合，老高就是用这个入门的)，网速不错，有了它相当于你在国外有个代理，这个代理可以搭建你的博客，做你的DNS服务器，做你的翻墙工具等等。&lt;/p&gt;
&lt;p&gt;最大的&lt;strong&gt;卖点&lt;/strong&gt;就是价格了，其一年的主机价格与国内主机半个月的价格相当。&lt;/p&gt;
&lt;p&gt;再加上Linux的可玩性，有很多&lt;strong&gt;高级玩法&lt;/strong&gt;可以折腾。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>搬瓦工购买后必读</title>
      <link>https://phpgao.github.io/post_buy_faq.html</link>
      <pubDate>Sun, 12 Apr 2015 10:35:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/post_buy_faq.html</guid>
      <description>&lt;p&gt;本文介绍了搬瓦工购买后的常规操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用nginx做反向代理</title>
      <link>https://phpgao.github.io/nginx_reverse_proxy.html</link>
      <pubDate>Sun, 12 Apr 2015 04:21:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_reverse_proxy.html</guid>
      <description>&lt;p&gt;很多同学喜欢用nginx做反向代理访问某些网站，原因大家都懂的，今天老高记录一下如何使用nginx做反向代理以及如何配置和优化nginx的反向代理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小米路由器mini折腾之安装shadowsocks-libev-spec</title>
      <link>https://phpgao.github.io/xiaomi_router_shadowsocks_libev_spec.html</link>
      <pubDate>Sun, 12 Apr 2015 03:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/xiaomi_router_shadowsocks_libev_spec.html</guid>
      <description>&lt;p&gt;DNS污染问题很是让人烦心，小米路由器mini的pandorabox自带了shadowsocks-libev，没有UDP转发功能，在期待下次pandorabox的更新能够自带shadowsocks-libev-spec的时候，我们还可以选择手动安装，下面老高就介绍一下如何安装。&lt;/p&gt;
&lt;p&gt;你也许能通过以下关键字找到本文：&lt;/p&gt;
&lt;p&gt;如何安装shadowsocks-libev-spec
如何配置shadowsocks-libev-spec
openwrt\pandorabox如何转发UDP
如果解决DNS污染&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>编译openwrt</title>
      <link>https://phpgao.github.io/compile_openwrt.html</link>
      <pubDate>Tue, 07 Apr 2015 02:20:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/compile_openwrt.html</guid>
      <description>&lt;p&gt;一些资料&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用U盘安装OSX10.10.2(YOSEMITE)</title>
      <link>https://phpgao.github.io/osx_yosemite_installation.html</link>
      <pubDate>Sun, 05 Apr 2015 12:53:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/osx_yosemite_installation.html</guid>
      <description>&lt;p&gt;转自：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mirrorpirate.com/?load=/torrent/11671739/OS_X_Yosemite_10.10.2_%2814C109%29_bootable_USB_%28DMG_File%29&#34;&gt;http://mirrorpirate.com/?load=/torrent/11671739/OS_X_Yosemite_10.10.2_%2814C109%29_bootable_USB_%28DMG_File%29&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>缓存算法(转载)</title>
      <link>https://phpgao.github.io/algorithm_of_cache.html</link>
      <pubDate>Sat, 28 Mar 2015 05:01:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/algorithm_of_cache.html</guid>
      <description>&lt;p&gt;老高某天吃泡馍的时候在微信里看到此文，而且让我想到了&lt;code&gt;bloom filter&lt;/code&gt;算法，文章很有意思，老高在此推荐给大家！&lt;/p&gt;
&lt;p&gt;以下：&lt;/p&gt;
&lt;p&gt;　　原文：http://www.jtraining.com/component/content/article/35-jtraining-blog/98.html&lt;/p&gt;
&lt;p&gt;　　翻译：http://www.zavakid.com/25&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>推荐两个sourceforge的FTP镜像(直接下载)</title>
      <link>https://phpgao.github.io/sourceforge_ftp.html</link>
      <pubDate>Sat, 28 Mar 2015 03:59:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/sourceforge_ftp.html</guid>
      <description>一个FTP协议，一个http协议，实时更新，方便直接下载！
 ftp://ftp.jaist.ac.jp/pub/sourceforge/ http://www.mirrorservice.org/sites/download.sourceforge.net/pub/sourceforge/  顺便补充几个与路由器翻墙有关的地址
 http://openwrt-dist.sourceforge.net http://openwrt-dist.sourceforge.net/releases/ramips/packages/  </description>
    </item>
    
    <item>
      <title>给程序员推荐几个网站</title>
      <link>https://phpgao.github.io/website_recommend.html</link>
      <pubDate>Fri, 27 Mar 2015 04:21:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/website_recommend.html</guid>
      <description>&lt;p&gt;写写代码，看看人生！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>获取天气预报的方法</title>
      <link>https://phpgao.github.io/php_weather.html</link>
      <pubDate>Wed, 25 Mar 2015 14:14:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_weather.html</guid>
      <description>&lt;p&gt;老高最近在处理天气预报的问题时总结了一下，备用！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>下一步计划</title>
      <link>https://phpgao.github.io/next_step_201503.html</link>
      <pubDate>Wed, 25 Mar 2015 01:36:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/next_step_201503.html</guid>
      <description>博客 目前博客的百度收录不再像以前一样不稳定了(主要针对百度)，基本上今天发的最迟明天就会收录，可能是因为我的插件的原因吧，看来还是有点用的，最近打算为插件做一个面板，主要功能是展示百度的请求（话说百度还真准时）。
职业 目前正在求职中，希望到南方发展，上海或深圳，求推荐啊！
学习 最近在学习ANDROID，准备开发一个APP，和某论坛有关，源码会公开在github上。
发现一个自学网站的合集：一纳米学习，推荐给大家！
还有准备读一些C方面的书。
生活 家里最近有很多烦心事，需要一步步处理。
最近听了几首达达乐队的歌，还有Niykee Heaton的歌。</description>
    </item>
    
    <item>
      <title>小米路由器mini折腾之配置opkg篇</title>
      <link>https://phpgao.github.io/xiaomi_router_opkg.html</link>
      <pubDate>Sun, 22 Mar 2015 15:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/xiaomi_router_opkg.html</guid>
      <description>&lt;h2 id=&#34;动机&#34;&gt;动机&lt;/h2&gt;
&lt;p&gt;opkg是openwrt里的软件包管理器，类似mac下的brew、Ubuntu下的apt-get和centos下的yum。&lt;/p&gt;
&lt;p&gt;但是为什么有很多同学都没办法在openwrt中使用opkg，其主要原因其实嵌入式的硬件繁多，不像我们一般PC只有i386和AMD64之分。&lt;/p&gt;
&lt;p&gt;此方法适用于OpenWRT,Pandorabox,官方系统。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小米路由器mini折腾之DDNS动态域名解析篇</title>
      <link>https://phpgao.github.io/xiaomi_router_ddns.html</link>
      <pubDate>Wed, 18 Mar 2015 01:14:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/xiaomi_router_ddns.html</guid>
      <description>&lt;p&gt;老高家里用的是联通10M宽带，500/年。自从小米路由器mini刷了pandorabox后无法使用官方的APP管理设备，于是想到了使用openwrt自带的DDNS，即动态DNS来远程管理家里的路由器。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>windows环境下快速搭建开发环境</title>
      <link>https://phpgao.github.io/windows_programmer_for_php.html</link>
      <pubDate>Wed, 11 Mar 2015 07:53:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/windows_programmer_for_php.html</guid>
      <description>&lt;p&gt;先留坑，以后慢慢补充&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用supervisor托管shadowsocks</title>
      <link>https://phpgao.github.io/supervisor_shadowsocks.html</link>
      <pubDate>Tue, 10 Mar 2015 06:14:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/supervisor_shadowsocks.html</guid>
      <description>&lt;p&gt;由于shadowsocks在服务器运行可能会不稳定，所以我们将shadowsocks的运行管理任务交给supervisor，这样如果ss挂了，supervisor会帮我们自动将shadowsocks重新启动，保证了ss的稳定性。&lt;/p&gt;
&lt;p&gt;supervisor是什么我就不多介绍了，老高在此只强调一点，他是由python编写的，官网在此
&lt;a href=&#34;http://supervisord.org/&#34;&gt;http://supervisord.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文也可作为supervisor的入门文章使用，欢迎大家交流！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>多说圆形旋转头像</title>
      <link>https://phpgao.github.io/duoshuo_css_custom.html</link>
      <pubDate>Sun, 08 Mar 2015 15:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/duoshuo_css_custom.html</guid>
      <description>&lt;p&gt;其实现使用了css3的一些特性。使用方法很简单！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mac关闭自动生成DS_store</title>
      <link>https://phpgao.github.io/mac_ds_store.html</link>
      <pubDate>Sun, 08 Mar 2015 04:58:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mac_ds_store.html</guid>
      <description>&lt;p&gt;参考了&lt;a href=&#34;http://www.zhihu.com/question/20873070/answer/41405748?group_id=557848511253651456&#34;&gt;长短短d的回答 &amp;ndash; 程序员如何优雅地使用 Mac？&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小米路由器mini折腾之刷不死uboot篇</title>
      <link>https://phpgao.github.io/xiaomi_router_uboot.html</link>
      <pubDate>Sun, 08 Mar 2015 01:48:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/xiaomi_router_uboot.html</guid>
      <description>&lt;p&gt;u-boot是一种普遍用于嵌入式系统中的Bootloader,Bootloader是在操作系统运行之前执行的一小段程序。他可以用来恢复小米路由器的固件，可以说只要刷了uboot，你的路由器基本上刷不死了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以下操作都是在你获取了root信息后才可以实现。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小米路由器mini折腾之去adbyby广告篇</title>
      <link>https://phpgao.github.io/xiaomi_router_noad.html</link>
      <pubDate>Sat, 07 Mar 2015 14:25:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/xiaomi_router_noad.html</guid>
      <description>&lt;p&gt;为了去广告，普通用户可在扩展插件中找到非官方插件-网页广告拦截，安装即可！&lt;/p&gt;
&lt;p&gt;但是这种方法的缺点也很明显，无法自由控制去广告功能，而adbyby官方为我们提供了MT7620A平台的编译版本，我们只需要下载运行即可！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>安装双系统的一些记录</title>
      <link>https://phpgao.github.io/install_multisystem_note.html</link>
      <pubDate>Fri, 06 Mar 2015 06:27:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/install_multisystem_note.html</guid>
      <description>&lt;h2 id=&#34;mbrgrub&#34;&gt;MBR&amp;amp;GRUB&lt;/h2&gt;
&lt;p&gt;MBR（Master boot record）指主引导记录，主要用于硬盘分区。GRUB就是安装在MBR中，起引导系统作用。&lt;/p&gt;
&lt;p&gt;阶段1：POST自检后系统载入目标装置的MBR（Master boot record），即前512字节。MBR一共包含三个部分主引导程序（Boot Loader）、硬盘分区表DPT（Disk Partition table）和硬盘有效标志（55AA）。&lt;/p&gt;
&lt;p&gt;阶段2：主引导程序被载入内存开始执行，他将继续执行加载系统内核的任务。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux下windows的换行符</title>
      <link>https://phpgao.github.io/return_in_linux_windows.html</link>
      <pubDate>Wed, 04 Mar 2015 03:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/return_in_linux_windows.html</guid>
      <description>&lt;p&gt;Unix/MAC和windows下换行总会出现以下问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unix/MAC下打开windows下的文本会多出一个^M，win下打开Unix/MAC文本会变成一行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原因是换行机制不一样，Unix下是&lt;code&gt;\n&lt;/code&gt;(0A)，mac下是&lt;code&gt;\r&lt;/code&gt;(0D)，win下是&lt;code&gt;\r\n&lt;/code&gt;(0D0A)。导致的结果是在程序中会造成一定的混乱。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://ww4.sinaimg.cn/large/6735b7fagw1eptjmcjvynj20je03mwh3.jpg&#34; alt=&#34;十六进制的换行&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git仓库删除敏感信息</title>
      <link>https://phpgao.github.io/git_remove_sensitive_data.html</link>
      <pubDate>Fri, 13 Feb 2015 01:59:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/git_remove_sensitive_data.html</guid>
      <description>如果不小心再某一次commit了一个含有敏感信息的文件，如公共的数据库配置。然后又不小心上传至github或者其他远程仓库中，那么想要彻底把此文件删除确实不是一件简单的事情。
因为如果只是在下一次提交中删除或修改了某文件，在git提交的历史中还是能够找到修改前的版本，这个操作无非是掩耳盗铃。
听说前一阵有人专门写爬虫，专门爬云储存的用户名密码，不少人都被黑了。所以如果不小心在git中可能包含敏感信息，commit前一定要仔细检查。
那么如何用正确的姿势删除git中的敏感信息呢？下面看看官方给出的解决步骤：
git删除敏感信息
Reference:
https://help.github.com/articles/remove-sensitive-data/</description>
    </item>
    
    <item>
      <title>小米路由器mini折腾之远程下载篇</title>
      <link>https://phpgao.github.io/xiaomi_router_mini_remote_download.html</link>
      <pubDate>Thu, 12 Feb 2015 14:15:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/xiaomi_router_mini_remote_download.html</guid>
      <description>&lt;p&gt;小米路由器mini刷了Pandorabox后还是可以使用迅雷的远程下载的，步骤如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小米路由器mini折腾之Python篇</title>
      <link>https://phpgao.github.io/xiaomi_router_python.html</link>
      <pubDate>Tue, 10 Feb 2015 13:43:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/xiaomi_router_python.html</guid>
      <description>&lt;p&gt;上回老高写了翻墙篇，寻思着这openwrt下能不能跑个python，继续折腾！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>终于删除android5.0的感叹号了</title>
      <link>https://phpgao.github.io/remove_exclamation_mark.html</link>
      <pubDate>Tue, 10 Feb 2015 01:52:28 +0000</pubDate>
      
      <guid>https://phpgao.github.io/remove_exclamation_mark.html</guid>
      <description>原理是修改用于验证的网址，使用的工具名字叫Portal Server修改器。</description>
    </item>
    
    <item>
      <title>在windows和linux下合并sql文件</title>
      <link>https://phpgao.github.io/merge_sqlfiles.html</link>
      <pubDate>Mon, 09 Feb 2015 08:34:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/merge_sqlfiles.html</guid>
      <description>合并多个sql文件
win:
copy *.sql merged.sql # \b 指二进制合并，可用于图片等二进制文件 # \a 指ASCII合并 copy \b *.sql merged.sql # 小技巧，可实现文本隐藏 copy 1.jpg/b + 2.txt/a 3.jpg linux:
# 合并所有扩展名为.sql的文件 cat *.sql&amp;gt;&amp;gt;merged.sql </description>
    </item>
    
    <item>
      <title>python的飞信发送类</title>
      <link>https://phpgao.github.io/pyfetion.html</link>
      <pubDate>Sat, 31 Jan 2015 14:38:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/pyfetion.html</guid>
      <description>pyfetionpyfetionpyfetion参照着php版的接口写的
目前测试使用没问题，预留了保存cookie和token的功能，可以减少几次请求，以后慢慢加吧！
目前给自己发通知还是妥妥的。</description>
    </item>
    
    <item>
      <title>centos-awstats简单安装教程</title>
      <link>https://phpgao.github.io/centos_awstats.html</link>
      <pubDate>Fri, 30 Jan 2015 08:08:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/centos_awstats.html</guid>
      <description>&lt;p&gt;本文关键字:awstats linux centos nginx&lt;/p&gt;
&lt;p&gt;Awstats官网：&lt;a href=&#34;http://www.awstats.org/&#34;&gt;http://www.awstats.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;发行协议：GNU GPL&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Awstats is short for Advanced Web statistic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Awstats的功能老高就不多介绍了，总之老高觉得比百度站长好用太多，不过在安装此软件过程中老高也遇到了不少坑，网上的安装教程看的人眼花缭乱，针对centos的教程更是无法直视，于是造成了此篇文章诞生，看完你也许会觉得安装Awstats确实不难。&lt;/p&gt;
&lt;p&gt;再介绍之前，为了给大家一个宏观的概念，我给大家梳理了以下安装过程。一共有两条主线任务：配置日志；配置Nginx服务器。前者为后者的展示提供数据，后者负责通知前者计算数据。&lt;/p&gt;
&lt;p&gt;注意：以下内容以配置老高的域名为例。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SVN命令行操作</title>
      <link>https://phpgao.github.io/svn_cli.html</link>
      <pubDate>Thu, 29 Jan 2015 06:34:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/svn_cli.html</guid>
      <description>&lt;p&gt;svn命令和git很像啊！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>常用User-Agent整理</title>
      <link>https://phpgao.github.io/user_agent_collection.html</link>
      <pubDate>Thu, 29 Jan 2015 03:36:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/user_agent_collection.html</guid>
      <description>&lt;p&gt;采集什么的喜欢这个了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mac下vim的美化配置</title>
      <link>https://phpgao.github.io/mac_vim_configure.html</link>
      <pubDate>Wed, 28 Jan 2015 13:51:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mac_vim_configure.html</guid>
      <description>&lt;p&gt;osx系统有些配置文件地方和Linux系统不太一样真是让人捉急&lt;/p&gt;
&lt;p&gt;以VIM为例&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux下常用解压命令</title>
      <link>https://phpgao.github.io/linux_unzip_command.html</link>
      <pubDate>Wed, 28 Jan 2015 13:46:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/linux_unzip_command.html</guid>
      <description>&lt;p&gt;大家一定会用到的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git的一些特殊操作</title>
      <link>https://phpgao.github.io/git_useful_command.html</link>
      <pubDate>Mon, 26 Jan 2015 02:54:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/git_useful_command.html</guid>
      <description>删除本地提交并推至origin # 第一步 ## 删除本地提交(HEAD为最近一次提交,HEAD^上上次) git reset --hard commit-id # 第二步 ## 强制推送 git push origin +master ## 或 git push origin HEAD --force RESET 根据–soft –mixed –hard，会对working tree和index和HEAD进行重置:
 git reset –mixed：此为默认方式，不带任何参数的git reset，即时这种方式，它回退到某个版本，只保留源码，回退commit和index信息 git reset –soft：回退到某个版本，只回退了commit的信息，不会恢复到index file一级。如果还要提交，直接commit即可 git reset –hard：彻底回退到某个版本，本地的源码也会变为上一个版本的内容
 关闭ISSUE 在提交的message中添加如下内容会自动与issue #id关联。是不是很方便啊！
 fixes #xxx fixed #xxx fix #xxx closes #xxx close #xxx closed #xxx  Reference：
http://www.cnblogs.com/shure/archive/2012/11/07/2758663.html http://blog.csdn.net/hshl1214/article/details/8084423</description>
    </item>
    
    <item>
      <title>git的tag操作</title>
      <link>https://phpgao.github.io/git_tag.html</link>
      <pubDate>Sun, 25 Jan 2015 12:38:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/git_tag.html</guid>
      <description>&lt;h2 id=&#34;什么是tag&#34;&gt;什么是tag&lt;/h2&gt;
&lt;p&gt;很简单，tag的字面意思是标签。在git中tag的功能就是把开发阶段做一个总结，打上标签，方便以后的查看与管理，通常用于版本发布。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>百度sitemap提交插件-for-Typecho</title>
      <link>https://phpgao.github.io/typecho_plugin_baidusubmit.html</link>
      <pubDate>Sun, 25 Jan 2015 03:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_plugin_baidusubmit.html</guid>
      <description>&lt;p&gt;几经开发，这款工具终于可以进入测试阶段。&lt;/p&gt;
&lt;p&gt;其主要内容是向百度提交sitemap，参考了站长工具里wp的插件制作。&lt;/p&gt;
&lt;p&gt;老高目测对SEO还是有一些用处的。&lt;/p&gt;
&lt;p&gt;目前没有做分页sitemap，如果大家有这个需求，老高会考虑加上。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决MAC远程总是Broken-pipe</title>
      <link>https://phpgao.github.io/mac_broken_pipe.html</link>
      <pubDate>Sun, 25 Jan 2015 03:12:56 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mac_broken_pipe.html</guid>
      <description>与ServerAliveInterval的设置有关
vim ~/.ssh/config # add ServerAliveInterval 60 </description>
    </item>
    
    <item>
      <title>Youtube开启或禁用HTML5播放器</title>
      <link>https://phpgao.github.io/youtube_html5_player.html</link>
      <pubDate>Sat, 24 Jan 2015 04:50:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/youtube_html5_player.html</guid>
      <description>&lt;p&gt;用过MAC的TX都知道，如果没有FLASH想要播放YouTube的视频很麻烦。虽然用Chrome内置的FLASH很不错，但是动辄70+℃的CPU实在伤不起啊。H5播放器就没有这个弊端了，从此妈妈再也不用担心我的MAC了。&lt;/p&gt;
&lt;p&gt;YouTube其实早就推出了H5的播放器，只是在PC端默认没有被开启而已。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>编码漫谈</title>
      <link>https://phpgao.github.io/char_encode.html</link>
      <pubDate>Fri, 23 Jan 2015 02:21:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/char_encode.html</guid>
      <description>&lt;p&gt;编码一定是程序员永远的痛，不知道老高能不能救到你。&lt;/p&gt;
&lt;p&gt;以下命令的操作环境：centos6 + python2.6&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>微信公众号内容接口</title>
      <link>https://phpgao.github.io/wechat_public_user_api.html</link>
      <pubDate>Thu, 22 Jan 2015 08:39:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/wechat_public_user_api.html</guid>
      <description>今天在V2EX上发现了一个上搜索微信内容的好网站
http://weixin.sogou.com/
练习爬虫的同学有福了，没事儿干可以试试。
接口地址：
http://weixin.sogou.com/gzhjs
获取方式:
GET
参数:
  cb 必须 固定值 sogou.weixin.gzhcb
  openid 必须 公众号的唯一ID，可以通过搜索结果页面获得
  page 可选 页码 默认第一页 每页最多十条记录
  t 可选 请求发送的时间，目测没啥大用
  最近貌似对openid加密了，等高人破解吧。
dmsYotdg%2F1V4oas03wIdducg7w5SL9M%2BYAL3GsHdR%2Fw9aG9Qzsh6XnA%2FUqKuQ66p8tRkK oIWsFt4Dl6kREBsD_KrMA84ThiIA wDssoe6gmmM8o%2FDMnpcWKuHwEPHxqeOZXzd%2FXytWShm4vQlImQmVes2pA7cYWfc%2FwudCK oIWsFt5sM7wz7isNXkl01is9M834 IAsHogvgG8dho2KKG6sO2uI3QooM18Hx%2BZF7o7%2BjinhzOVx5t3EcYmhn93gQQgsYira4N oIWsFt0fiD095kHlyHMIXEM7PrZc M8sGoC2gu6ZRohqri5nKnuau%2FD8g0jkqKyfAW8cjgPLn1e3wwAZSEM%2FMsVhWFQqp7%2Bz%2B9 oIWsFtwFWRis8pbm2-hOgllnpZfw 6Ss7od5gsiLBoala%2BGkVduU4PRslLs6USIzFeWxJXDR4oyMBZNvWwNovVPSmZJ6GVI7PG oIWsFt4UdPREjjItJo-JsJhoTjSU Qqsoo2gg7EDuovYnPkpxGu22Hv1%2FLF9MkC4AtaAGVcP%2B49dhr5tmnOpMZFpMtNQfp%2BnRv oIWsFt-abnxH6yhUGXNtgwhtsvS4 </description>
    </item>
    
    <item>
      <title>python格式化输出dict等集合对象</title>
      <link>https://phpgao.github.io/python_print_formatted.html</link>
      <pubDate>Thu, 22 Jan 2015 02:36:04 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python_print_formatted.html</guid>
      <description>调试程序的时候，如果需要打印出变量的信息，在python中很容易，一句print即可，他几乎可以打印任何类型的对象，不像PHP中，有一堆echo(),print(),print_r(),var_dump()，让人头疼！
但是PHP的打印函数有个好处，就是打印格式良好，而Python的打印信息就不是很友好了，如
# 模拟一个很大的键值对 dic = {} for i in xrange(201): dic[i] = &amp;#34;value for %d&amp;#34; % i print dic 其结果我就不打印了，总之很难看！
如何让python那冗长而且没有格式的打印变得更直观，方法有两种。
自定义dump 此方法来自stackoverflow
# 以后需要有格式的打印一个集合对象，直接使用dump(xxx)即可！ # 不要忘了import sys import sys def dump(obj, nested_level=0, output=sys.stdout): spacing = &amp;#39; &amp;#39; if type(obj) == dict: print &amp;gt;&amp;gt; output, &amp;#39;%s{&amp;#39; % ((nested_level) * spacing) for k, v in obj.items(): if hasattr(v, &amp;#39;__iter__&amp;#39;): print &amp;gt;&amp;gt; output, &amp;#39;%s%s:&amp;#39; % ((nested_level + 1) * spacing, k) dump(v, nested_level + 1, output) else: print &amp;gt;&amp;gt; output, &amp;#39;%s%s: %s&amp;#39; % ((nested_level + 1) * spacing, k, v) print &amp;gt;&amp;gt; output, &amp;#39;%s}&amp;#39; % (nested_level * spacing) elif type(obj) == list: print &amp;gt;&amp;gt; output, &amp;#39;%s[&amp;#39; % ((nested_level) * spacing) for v in obj: if hasattr(v, &amp;#39;__iter__&amp;#39;): dump(v, nested_level + 1, output) else: print &amp;gt;&amp;gt; output, &amp;#39;%s%s&amp;#39; % ((nested_level + 1) * spacing, v) print &amp;gt;&amp;gt; output, &amp;#39;%s]&amp;#39; % ((nested_level) * spacing) else: print &amp;gt;&amp;gt; output, &amp;#39;%s%s&amp;#39; % (nested_level * spacing, obj) pprint 此方法来自官方，可以自定义缩进，宽度等信息。</description>
    </item>
    
    <item>
      <title>mysql中localhost和127.0.0.1的区别</title>
      <link>https://phpgao.github.io/mysql_hostname_issue.html</link>
      <pubDate>Mon, 19 Jan 2015 05:18:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mysql_hostname_issue.html</guid>
      <description>mysql的默认的root用户会有很多行，自习观察后你就会发现每行的用户名或密码可能相同，但是host一定不同，host是登陆用户的主机名，也就是说，&amp;lsquo;localhost&amp;rsquo;,&amp;lsquo;127.0.0.1&amp;rsquo;,&amp;lsquo;phpgao.local&amp;rsquo;,&#39;%&amp;lsquo;都算不同的用户！
理解了这一点后，那么我的问题就附上水面了！
有些TX经常会遇到这个问题：
 使用PHP连接mysql数据库，使用localhost作为主机名总是连接失败，但是使用&#39;127.0.0.1&amp;rsquo;就可以顺利连接，这到底是为什么？
  mysql中HOST为localhost和127.0.0.1到底有什么区别？
 经过一番搜索，老高总结如下：
使用到的命令
mysql&amp;gt;status; mysql&amp;gt;show grants;   类Unix系统下，如果不使用-h指定主机名或者使用了localhost，那么会使用unix domain socket与mysql服务器沟通，比TCP/IP快一些！所以你想使用TCP/IP协议，请将host指定为&#39;127.0.0.1&amp;rsquo;。
  PHP连接mysql如果使用&amp;rsquo;localhost&amp;rsquo;发生问题，首先可以明确的是PHP会试着使用unix domain socket与服务器连接，所以请检查php.ini中mysql.default_socket = /var/mysql/mysql.sock是否配置正确。
  如果想要明确连接方式，可以再配置文件中显式声明
  protocol=tcp 在mysql的官方文档中解释道:如果mysql在win上跑，如果系统开启了&amp;ndash;enable-named-pipe，然后访问服务器的时候没有指定hostname，那么mysql客户端会以pipe为优先连接，如果连接失败，那么再会去尝试使用TCP/IP去连接。你可以指定hostname为.在win下强制使用pipes。   If the MySQL server is running on Windows, you can connect using TCP/IP. If the server is started with the &amp;ndash;enable-named-pipe option, you can also connect with named pipes if you run the client on the host where the server is running.</description>
    </item>
    
    <item>
      <title>在路由器下载文件</title>
      <link>https://phpgao.github.io/download_on_router.html</link>
      <pubDate>Thu, 15 Jan 2015 15:06:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/download_on_router.html</guid>
      <description>昨天晚上用wget命令下载了WOW客户端，要是搁到往常，还必须开机电脑下载，现在只需要再路由器的ssh里执行以下即可！
离线下载BT和ED2K还在研究中
wget http://wow.zip 2&amp;gt;&amp;amp;1 &amp;gt;/dev/null &amp;amp; </description>
    </item>
    
    <item>
      <title>将你的git协议由https变为ssh</title>
      <link>https://phpgao.github.io/github_https_to_ssh.html</link>
      <pubDate>Thu, 15 Jan 2015 12:34:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/github_https_to_ssh.html</guid>
      <description>你是不是已经厌倦了每次git push的时候每次都要输入用户名密码，使用下面的方法可以让你使用ssh协议通过密钥验证的方式让你得到解脱。
有两种修改方法
不过再实施前，请先准备好自己的密钥
ssh-keygen -t rsa -C &amp;#34;your_name&amp;#34; 然后登录https://github.com/settings/ssh，添加当前计算机的~/.ssh/id_rsa.pub公钥内容到github。
之后我们使用ssh git@github.com验证是否添加成功，如果返回以下内容，即代表添加成功！
 Hi phpgao! You&amp;rsquo;ve successfully authenticated, but GitHub does not provide shell access.
 下一步就是让我们的git使用公钥验证。
clone 保存你的最后一次修改并提交。
删除项目
使用下面的命令clone项目
# 采用ssh的方式克隆项目 # someaccount/someproject.git 中 some account为github用户名/someproject为仓库名 git clone git@github.com:phpgao/BaiduSubmit.git 修改https git remote set-url origin git@github.com:someaccount/someproject.git 顺便提一下，老高的git push总是报warning: push.default is unset错误，今天终于知道为啥了。原来是版本兼容性的原因，低版本的git push如果不指定分支名，就会全部推送，而新版只会推送当前分支。
解决的办法也很简单，我们只需要明确指定应该推送方式即可，至于选择哪种方式，It&amp;rsquo;s up to you.
# 全部推送 git config --global push.default matching # 部分推送 git config --global push.default simple 完</description>
    </item>
    
    <item>
      <title>kangle的安装和使用</title>
      <link>https://phpgao.github.io/kangle_note.html</link>
      <pubDate>Wed, 14 Jan 2015 08:56:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/kangle_note.html</guid>
      <description>kangle是一款国人产的服务器软件，老高经常使用它搭建测试环境。
安装 kangle的安装主要分两大块：kangle+easypanel。
# centos下一键安装命令 yum -y install wget;wget http://download.kanglesoft.com/easypanel/ep.sh -O ep.sh;sh ep.sh 使用 安装完成后，使用方法: 管理面板网址: http://服务器ip:3312/admin/ 独立网站管理: http://服务器ip:3312/vhost/
Reference:
http://www.kanglesoft.com/thread-5891-1-1.html</description>
    </item>
    
    <item>
      <title>M&#43;字体安装</title>
      <link>https://phpgao.github.io/m_plus_font_on_mac.html</link>
      <pubDate>Tue, 06 Jan 2015 14:51:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/m_plus_font_on_mac.html</guid>
      <description>&lt;p&gt;今天微信推了一篇文章，是讲一个叫M＋的开源字体，貌似MBPR上表现还不错。&lt;/p&gt;
&lt;p&gt;那么如何安装M+字体呢？&lt;/p&gt;
&lt;p&gt;正好老高还没有在OSX下安装过字体，结果发现，原来安装个字体和在win下是一样一样的。。。&lt;/p&gt;
&lt;h2 id=&#34;项目地址&#34;&gt;项目地址&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://sourceforge.jp/projects/mplus-fonts/&#34;&gt;http://sourceforge.jp/projects/mplus-fonts/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>模拟登录联通10010.com查询宽带余额</title>
      <link>https://phpgao.github.io/china_unicom_broadband_balance.html</link>
      <pubDate>Tue, 06 Jan 2015 06:46:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/china_unicom_broadband_balance.html</guid>
      <description>家里的宽带是包年按天扣费，时间长了就忘了改什么时候续费了。
抽时间写了个模拟登录10010.com的脚本，自动查询余额。
每天中午12点查一次，省得下次又欠费了。
模拟登录的过程很简单，获取查询的cookie需要两步请求，拿到cookie后可以随意查询。
有TX想看源码么？
已贴源码
#!/usr/bin/env python # encoding: utf-8 &amp;#34;&amp;#34;&amp;#34; @version: 0.2 @author: phpergao @license: Apache Licence @contact: endoffight@gmail.com @site: http://www.phpgao.com @software: PyCharm @file: 10010.py @time: 15-1-3 下午6:06 一键查询联通宽带余额 &amp;#34;&amp;#34;&amp;#34; import urllib2 import cookielib import json class Crawl(): def __init__(self, username, passwd, debug=False): (self.username, self.passwd) = (username, passwd) self.cookie = cookielib.CookieJar() cookieHandler = urllib2.HTTPCookieProcessor(self.cookie) self.is_debug = debug if self.is_debug: httpHandler = urllib2.HTTPHandler(debuglevel=1) httpsHandler = urllib2.HTTPSHandler(debuglevel=1) opener = urllib2.build_opener(cookieHandler, httpHandler, httpsHandler) else: opener = urllib2.</description>
    </item>
    
    <item>
      <title>使用net_speeder加速你的VPS</title>
      <link>https://phpgao.github.io/vps_net_speeder.html</link>
      <pubDate>Mon, 05 Jan 2015 09:56:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vps_net_speeder.html</guid>
      <description>&lt;p&gt;转自:http://www.im1987.com/post/853.html&lt;/p&gt;
&lt;p&gt;老高安装了以后480P是不卡了，720P还是有点力不从心啊~&lt;/p&gt;
&lt;p&gt;另外推荐一下锐速，应该还是会有一点效果的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python接受命令选项-h</title>
      <link>https://phpgao.github.io/python_cli_options.html</link>
      <pubDate>Mon, 05 Jan 2015 05:44:54 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python_cli_options.html</guid>
      <description>python在用命令行的时候能够接受很多参数，到底是如何接受那些参数和选项呢？
import sys, getopt opts, args = getopt.getopt(sys.argv[1:], &amp;#34;hi:o:&amp;#34;) input_file=&amp;#34;&amp;#34; output_file=&amp;#34;&amp;#34; for op, value in opts: if op == &amp;#34;-i&amp;#34;: input_file = value elif op == &amp;#34;-o&amp;#34;: output_file = value elif op == &amp;#34;-h&amp;#34;: usage() sys.exit() </description>
    </item>
    
    <item>
      <title>小米路由器mini折腾之自动翻墙篇</title>
      <link>https://phpgao.github.io/carzy_router.html</link>
      <pubDate>Sun, 04 Jan 2015 14:47:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/carzy_router.html</guid>
      <description>&lt;p&gt;趁着节假日，终于搞定了路由器的自动翻墙，终于有自己的翻墙路由器了，之后一发而不可收，记录了一些折腾的文章，索引在此&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.phpgao.com/xiaomi_router.html&#34;&gt;openwrt路由器折腾教程索引&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;附赠 &lt;a href=&#34;https://blog.phpgao.com/slip_across_gfw.html&#34;&gt;翻越功夫网教程索引&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;自从发现Pandorabox在&lt;code&gt;r355版&lt;/code&gt;在固件中整合了ss，redsocks2和ChinaDNS-C，省下了不少事儿。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有同学反应r355-20150114被移除，刚好老高有存货，文中有百度网盘下载&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本教程同样适用于其他openwrt系统&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;推荐查看&lt;strong&gt;更好的方案&lt;/strong&gt;一节！&lt;/p&gt;
&lt;p&gt;你可能根据一下关键词找到此文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pandorabox openwrt 安装redsocks2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;翻墙路由器&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;路由器翻墙教程&lt;/li&gt;
&lt;li&gt;pandorabox openwrt 路由器翻墙&lt;/li&gt;
&lt;li&gt;小米路由器翻墙 教程&lt;/li&gt;
&lt;li&gt;打造自动翻墙的路由器&lt;/li&gt;
&lt;li&gt;设置路由器翻墙&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>VPS安全之防火墙设置</title>
      <link>https://phpgao.github.io/vps_iptables.html</link>
      <pubDate>Mon, 29 Dec 2014 03:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vps_iptables.html</guid>
      <description>&lt;p&gt;iptables是基于内核的防火墙，功能非常强大，iptables内置了filter，nat和mangle三张表。&lt;/p&gt;
&lt;p&gt;filter负责过滤数据包，包括的规则链有，input，output和forward；&lt;/p&gt;
&lt;p&gt;nat则涉及到网络地址转换，包括的规则链有，prerouting，postrouting和output；&lt;/p&gt;
&lt;p&gt;mangle表则主要应用在修改数据包内容上，用来做流量整形的，默认的规则链有：INPUT，OUTPUT，NAT，POSTROUTING，PREROUTING；&lt;/p&gt;
&lt;p&gt;input匹配目的IP是本机的数据包；
forward匹配流经本机的数据包；
prerouting用来修改目的地址用来做DNAT；
postrouting用来修改源地址用来做SNAT。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VPS安全之SSH设置</title>
      <link>https://phpgao.github.io/vps_ssh.html</link>
      <pubDate>Mon, 29 Dec 2014 02:58:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vps_ssh.html</guid>
      <description>&lt;p&gt;SSH是管理VPS的重要途径，所以SSH经常会受到攻击，所以我们需要将SSH&lt;strong&gt;武装&lt;/strong&gt;起来，保护我们VPS的安全。&lt;/p&gt;
&lt;p&gt;SSH服务的配置文件位于&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;，我们的安全设置都是围绕此文件展开，所以修改前最好先备份一次，以免出现无法登陆的情况。&lt;/p&gt;
&lt;p&gt;修改完不要忘了执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;service sshd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>搬瓦工(bandwagonhost)后台管理VPS&amp;amp;安全设置</title>
      <link>https://phpgao.github.io/bandwagonhost_vps_panel.html</link>
      <pubDate>Sun, 28 Dec 2014 14:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/bandwagonhost_vps_panel.html</guid>
      <description>&lt;p&gt;购买了搬瓦工(bandwagonhost)的VPS，如何使用呢？&lt;/p&gt;
&lt;p&gt;在此，老高以FAQ的形式给出介绍。&lt;/p&gt;
&lt;p&gt;首先插几句使用建议，老高认为十分重要，为什么呢？搬瓦工如果监控到有大量的垃圾信息从我们的主机上发出，就会立即冻结VPS，冻结后的VPS相当于关机，我们可以进入panel后手动解冻即可恢复正常，但是解冻的次数每年只有三次，所以大家一定要注意自己VPS的安全。在此老高也给大家分享一些必要的操作，请务必参考。部分建议需要一定的linux基础，不会的TX请参考老高的&lt;a href=&#34;https://blog.phpgao.com/shadowsocks_on_linux.html&#34;&gt;翻墙教程&lt;/a&gt;后再google之。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在Finder当前目录打开终端</title>
      <link>https://phpgao.github.io/open_terminal_in_finder.html</link>
      <pubDate>Sat, 27 Dec 2014 11:38:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/open_terminal_in_finder.html</guid>
      <description>&lt;p&gt;在终端里打开Finder很简单，使用&lt;code&gt;open .&lt;/code&gt;即可&lt;/p&gt;
&lt;h2 id=&#34;系统设置&#34;&gt;系统设置&lt;/h2&gt;
&lt;p&gt;在Finder打开terminal这个功能其实是有的，但是系统默认没有打开，我们可以通过如下方法将其打开&lt;/p&gt;
&lt;p&gt;进入系统偏好设置-&amp;gt;键盘-&amp;gt;快捷键-&amp;gt;服务。&lt;/p&gt;
&lt;p&gt;在右边&lt;code&gt;新建位于文件夹位置的终端窗口&lt;/code&gt;上打勾。&lt;/p&gt;
&lt;p&gt;如此设置后，在Finder中右击某文件，在出现的菜单中找到服务，然后点击&lt;code&gt;新建位于文件夹位置的终端窗口&lt;/code&gt;即可！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>centos实时网速监控工具nload</title>
      <link>https://phpgao.github.io/nload_centos.html</link>
      <pubDate>Sat, 27 Dec 2014 04:06:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nload_centos.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.roland-riegel.de/nload/&#34;&gt;nload&lt;/a&gt;是一个很小巧的工具，用来监控当前系统的网速&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于一些开源许可和名词</title>
      <link>https://phpgao.github.io/opensrouce_license.html</link>
      <pubDate>Fri, 26 Dec 2014 02:17:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/opensrouce_license.html</guid>
      <description>以下内容转自：http://my.oschina.net/crooner/blog/101456
在翻译你应该选择什么开源软件许可证 Which Open Source Software License Should I Use?
关于一些开源许可和名词
(1)New BSD License(Modified BSD License):
1)可以用于任何作为版权声明和保证许可的免责声明的目的，可以通过无限长的再分发来得以维持。 2)如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议。 3)特殊限制条款，不可以用开源代码的作者/机构名字和原来产品的名字做市场推广。
(2)Simplified BSD License(FreeBSD License): 1)与New BSD License(Modified BSD License)一致，但是少了第3条的特殊限制条款。
(3) MIT License MIT是和BSD一样宽松的许可协议,作者只想保留版权,而无任何其他了限制.也就是说,你必须在你的发行版里包含原许可协议的声明,无论你是以二 进制发布的还是以源代码发布的。 1)复制和修改软件。 2)免费使用软件或出售。 3)唯一的限制是，它是必须附有MIT授权协议。
(4)Apache Licence Apache Licence是著名的非盈利开源组织Apache采用的协议。Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售。该协议和BSD类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布(作为开源或商业软件)。需要满足的条件： 1)需要给代码的用户一份Apache License。 2)如果你修改了代码，需要在被修改的文件中说明。 3)在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。 4)如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache License。你可以在Notice中增加自己的许可，但不可以表现为对Apache License构成更改。
(5)Microsoft Permissive License 详见( http://msdn.microsoft.com/zh-cn/aa721778)说明。
(6)著佐权(copyleft)
Copyleft是一由自由软件运动所发展的概念，是一种利用现有著作权体制来挑战该体制的授权方式，在自由软件许可证方式中增加copyleft条款之后，该自由软件除了允许用户自由使用、散布、改作之外，copyleft条款更要求用户改作后的派生作品必须要以同等的授权方式发布以回馈社区。 有人将其译为“著佐权”1，以彰显Copyleft是补足著作权（Copyright，版权）不足的意义。另有译为“反版权”、“版权属左”、“脱离版权”、“版权所无”、“版权左派”、“公共版权”或“版责”，但这些译名的其中几个在意义上有所偏差。Copyleft授权方式虽然与常见的著作权授权模式不同：选择copyleft授权方式并不代表作者放弃著作权，反而是贯彻始终，强制被授权者使用同样授权发布派生作品，copyleft许可协议不反对著作权的基本体制，却是通过利用著作权法来进一步地促进创作自由。 Copyleft是将一个程序变为自由软件的通用方法，同时也使得这个程序的修改和扩充版本成为自由软件。提出并使用Copyleft观念的是GNU计划，具体的发布条款包含在GNU通用公共许可协议、GNU宽通用公共许可证和GNU自由文档许可协议里。
详见(http://zh.wikipedia.org/wiki/%E8%91%97%E4%BD%90%E6%AC%8A)说明
最后盗一张来自阮一峰博客的图：
((1),(2),(3),(4)源于 http://zoomquiet.org/res/scrapbook/ZqFLOSS/data/20101030104700/的整理)</description>
    </item>
    
    <item>
      <title>VPS重做系统都需要做什么</title>
      <link>https://phpgao.github.io/vps_renew.html</link>
      <pubDate>Thu, 25 Dec 2014 10:22:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vps_renew.html</guid>
      <description>&lt;p&gt;重做系统都快成日常了，看来还是需要整理一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pycharm创建文件模板</title>
      <link>https://phpgao.github.io/pycharm_template.html</link>
      <pubDate>Tue, 23 Dec 2014 09:34:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/pycharm_template.html</guid>
      <description>进入File-&amp;gt;settings-&amp;gt;Editor-&amp;gt;File and Code Templates-&amp;gt;Python Script
添加以下内容：
#!/usr/bin/env python # encoding: utf-8 #set( $SITE = &amp;#34;http://www.phpgao.com&amp;#34; ) &amp;#34;&amp;#34;&amp;#34; @version: ?? @author: phpergao @license: Apache Licence @contact: endoffight@gmail.com @site: ${SITE} @software: ${PRODUCT_NAME} @file: ${NAME}.py @time: ${DATE} ${TIME} &amp;#34;&amp;#34;&amp;#34; def func(): pass class Main(): def __init__(self): pass if __name__ == &amp;#39;__main__&amp;#39;: pass 脚本中还可以添加自定义变量！
参考链接：
http://wiki.woodpecker.org.cn/moin/CodeCommentingRule http://www.cnblogs.com/ziyouchutuwenwu/archive/2013/12/18/3480035.html https://github.com/phpgao/PyCharm-Python-Templates https://www.jetbrains.com/pycharm/webhelp/creating-and-editing-file-templates.html http://peter-hoffmann.com/2010/python-live-templates-for-pycharm.html</description>
    </item>
    
    <item>
      <title>真•BUG检查方法</title>
      <link>https://phpgao.github.io/way_to_find_bugs.html</link>
      <pubDate>Tue, 23 Dec 2014 07:44:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/way_to_find_bugs.html</guid>
      <description>以下是老高总结的BUG发现点，每一点都可以神展开
欢迎大家补充
 文件路径是否不一致 操作系统的不一致 数据源是否不一致(数据库配置) 单词是否拼错(很常见) 检查hosts文件 网络是否联通(网线插了没?) 防火墙设置问题 硬盘空间是否已满(df -h) 端口设置是否不一致 域名是否解析正确 编码是否错误 关键字是否被屏蔽(发短信如果带&amp;rsquo;测试&amp;rsquo;二字很可能被短信运营商屏蔽) PHP的BOM(幽灵bug，一般与二进制文件有关，比如输出图片) 服务器配置是否不一致 硬件是否出现错误 数据库索引是否出错(有幸遇见过一次,数据存在，where就是查不出，重建索引解决)  以上
附一些有趣的BUG：
http://www.zhihu.com/question/21747929
http://www.zhihu.com/question/21991014
http://www.zhihu.com/question/19955793
http://www.zhihu.com/question/20212145</description>
    </item>
    
    <item>
      <title>putty中文乱码</title>
      <link>https://phpgao.github.io/putty_chinese.html</link>
      <pubDate>Mon, 22 Dec 2014 03:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/putty_chinese.html</guid>
      <description>每次重装centos总会碰到关于乱码的种种问题
一般中文乱码有以下两个原因
1.中文未安装
一句话安装
yum groupinstall &amp;#34;chinese support&amp;#34; # 重启 reboot 2.设置问题
如果安装了中文支持还不行，那么就要考虑配置是否合适了。
linux的语言配置文件位于/etc/sysconfig/i18n，使用vim打开
cp /etc/sysconfig/i18n /etc/sysconfig/i18n.bak vim /etc/sysconfig/i18n 替换原来的内容为
中文UTF-8（推荐）:
LANG=&amp;#34;zh_CN.UTF-8&amp;#34; LANGUAGE=&amp;#34;zh_CN.UTF-8:zh_CN&amp;#34; SUPPORTED=&amp;#34;zh_CN.UTF-8:zh_CN:zh:en_US.UTF-8:en_US:en&amp;#34; SYSFONT=&amp;#34;latarcyrheb-sun16&amp;#34; 或者
中文GBK:
LANG=&amp;#34;zh_CN.GB18030&amp;#34; LANGUAGE=&amp;#34;zh_CN.GB18030:zh_CN.GB2312:zh_CN&amp;#34; SUPPORTED=&amp;#34;zh_CN.GB18030:zh_CN:zh:en_US.UTF-8:en_US:en&amp;#34; SYSFONT=&amp;#34;lat0-sun16&amp;#34; 然后在putty等软件中设置对应字符集即可
vim乱码请参考老高的另一篇博文 vim中文乱码的解决办法</description>
    </item>
    
    <item>
      <title>安装编译nginx</title>
      <link>https://phpgao.github.io/nginx_installation.html</link>
      <pubDate>Sun, 21 Dec 2014 13:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_installation.html</guid>
      <description>今天老高更新了一下nginx，顺便把nginx的安装编译过程记录一下，分享给大家！
一并送上之前老高的博文：
将nginx配置为服务
nginx配置详解
下载 官网下载地址：http://nginx.org/en/download.html
准备 安装nginx时必须先安装相应的编译工具
yum -y install gcc gcc-c++ autoconf automake yum -y install zlib zlib-devel openssl openssl-devel pcre-devel centos没有安装make编译器
yum -y install gcc automake autoconf libtool make 建立nginx 组
groupadd -r nginx useradd -s /sbin/nologin -g nginx -r nginx 注释：
zlib:nginx提供gzip模块，需要zlib库支持 openssl:nginx提供ssl功能 pcre:支持地址重写rewrite功能
修改版本号 再编译之前修改默认的版本号是个不错的习惯
vim src/core/nginx.h #define NGINX_VERSION &amp;#34;0.0.0&amp;#34; #define NGINX_VER &amp;#34;phpergao&amp;#34; NGINX_VERSION 编译 高大上的编译参数
./configure \ --prefix=/usr \ --sbin-path=/usr/sbin/nginx \ --conf-path=/etc/nginx/nginx.conf \ --error-log-path=/var/log/nginx/error.log \ --pid-path=/var/run/nginx/nginx.</description>
    </item>
    
    <item>
      <title>安装Selenum的Chromedriver</title>
      <link>https://phpgao.github.io/selenium_chrome.html</link>
      <pubDate>Sun, 21 Dec 2014 05:37:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/selenium_chrome.html</guid>
      <description>首先我们需要下载Chromedriver：
http://chromedriver.storage.googleapis.com/index.html
截图如下：
下载最新版本（目前2.13）
将下载下来的文件移至/usr/bin目录下
完成！
参考链接： http://damien.co/resources/how-to-install-chromedriver-mac-os-x-selenium-python-7406</description>
    </item>
    
    <item>
      <title>windows下cmd的替换工具cmder</title>
      <link>https://phpgao.github.io/cmder.html</link>
      <pubDate>Wed, 17 Dec 2014 05:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/cmder.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2014/12/465248068.png&#34; alt=&#34;cmder界面&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git-fetch和pull的区别</title>
      <link>https://phpgao.github.io/git_fetch_pull.html</link>
      <pubDate>Thu, 11 Dec 2014 01:38:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/git_fetch_pull.html</guid>
      <description>转自 http://blog.csdn.net/hudashi/article/details/7664457
Git中从远程的分支获取最新的版本到本地有这样2个命令：
1.git fetch：相当于是从远程获取最新版本到本地，不会自动merge
git fetch origin master git log -p master..origin/master git merge origin/master 以上命令的含义：
 首先从远程的origin的master主分支下载最新的版本到origin/master分支上 然后比较本地的master分支和origin/master分支的差别 最后进行合并
 上述过程其实可以用以下更清晰的方式来进行：
git fetch origin master : tmp git diff tmp git merge tmp 从远程获取最新的版本到本地的test分支上 之后再进行比较合并
2.git pull：相当于是从远程获取最新版本并merge到本地
git pull origin master 述命令其实相当于git fetch 和 git merge 在实际使用中，git fetch更安全一些 因为在merge前，我们可以查看更新情况，然后再决定是否合并</description>
    </item>
    
    <item>
      <title>linux无界面(headless)使用selenium抓取数据</title>
      <link>https://phpgao.github.io/headless_selenium.html</link>
      <pubDate>Tue, 09 Dec 2014 09:47:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/headless_selenium.html</guid>
      <description>问题 老高最近遇到一个需求，linux\centos下，使用selenium技术抓取数据。本来很简单的问题，但是由于内存限制，安装X window不现实，所以一个BT的想法诞生了，是否可以在centos命令行界面运行一个虚拟的桌面，然后使用selenium控制Firefox浏览器完成一些操作，Firefox运行在虚拟的桌面中，一切操作都在命令行中完成。
Google之，发现了Xvfb，他可以新建一个虚拟的X窗口，再配合python的pyvirtualdisplay，简直就是神器！
安装 centos下：
# 安装Xvfb和pyvirtualdisplay yum install xorg-x11-server-Xvfb pip install pyvirtualdisplay 安装firefox和selenium
yum install firefox pip install selenium 代码 from pyvirtualdisplay import Display from selenium import webdriver display = Display(visible=0, size=(800, 600)) display.start() browser = webdriver.Firefox() browser.get(&amp;#39;http://www.google.com&amp;#39;) print browser.title browser.quit() display.stop() 参考网站：
http://selenium-python.readthedocs.org/en/latest/getting-started.html http://nullege.com/codes/search/selenium.webdriver.Remote.find_elements_by_class_name http://www.opsview.com/forum/opsview-core/how-do-i/how-do-i-install-selenium-centos-server https://gist.github.com/textarcana/5855427 http://scraping.pro/use-headless-firefox-scraping-linux/ http://serverfault.com/questions/363827/how-can-i-run-firefox-on-centos-with-no-display https://realpython.com/blog/python/headless-selenium-testing-with-python-and-phantomjs/ https://pypi.python.org/pypi/selenium
http://selenium.googlecode.com/git/docs/api/py/selenium/selenium.selenium.html#module-selenium.selenium
http://www.ibm.com/developerworks/cn/opensource/os-php-designptrns/ http://www.cnblogs.com/fnng/p/3230768.html http://www.cnblogs.com/fnng/p/3157639.html http://www.cnblogs.com/fnng/p/3157639.html</description>
    </item>
    
    <item>
      <title>mysql开发常用SQL</title>
      <link>https://phpgao.github.io/mysql_sql.html</link>
      <pubDate>Tue, 09 Dec 2014 02:10:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mysql_sql.html</guid>
      <description>主键 -- 为当前表添加主键 ALTER TABLE `tablename` ADD COLUMN id TINYINT UNSIGNED NOT NULL AUTO_INCREMENT, ADD PRIMARY KEY (id); -- 删除主键  ALTER TABLE `tablename` DROP PRIMARY KEY; 创建数据库 # utf8mb4_unicode_ci更准 CREATE DATABASE IF NOT EXISTS typecho DEFAULT CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci; # utf8mb4_general_ci更快 CREATE DATABASE IF NOT EXISTS typecho DEFAULT CHARSET utf8mb4 COLLATE utf8mb4_general_ci; CREATE DATABASE typecho DEFAULT CHARACTER SET gbk COLLATE gbk_chinese_ci; 创建用户并提供相应权限 # 只是创建用户 CREATE USER phpergao@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;yourpasswd&amp;#39;; # 赋予权限 GRANT select,update on phpergao.</description>
    </item>
    
    <item>
      <title>使用pip升级所有安装的package</title>
      <link>https://phpgao.github.io/pip_update_package.html</link>
      <pubDate>Sat, 06 Dec 2014 14:29:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/pip_update_package.html</guid>
      <description>升级的时候注意权限
import pip from subprocess import call for dist in pip.get_installed_distributions(): call(&amp;#34;pip install --upgrade -i https://pypi.douban.com/simple/ &amp;#34; + dist.project_name, shell=True) </description>
    </item>
    
    <item>
      <title>su超时退出-sudo超时需要输密码的解决方法</title>
      <link>https://phpgao.github.io/su_timeout.html</link>
      <pubDate>Fri, 05 Dec 2014 08:43:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/su_timeout.html</guid>
      <description>服务器为了安全设置，使用普通用户登陆，再su至root。
而su以后超过一定时间会超时退出到普通用户，带来了一定的麻烦。
解决办法：
OS:CENTOS 6
vi /etc/profile # 注释 #TMOUT=300 sudo执行的第一次需要验证密码，之后一段时间不需要输入就可以执行命令，控制超时的方法：
sudo visudo # 翻到60-70行，类似 Defaults env_reset #改为，30000指的是超时时间是30000min，请合理设置 Defaults env_reset,timestamp_timeout=30000 </description>
    </item>
    
    <item>
      <title>MySQL主从复制操作步骤</title>
      <link>https://phpgao.github.io/mysql_master_slave.html</link>
      <pubDate>Thu, 04 Dec 2014 01:56:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mysql_master_slave.html</guid>
      <description>主服务器（master）IP：192.168.0.1 从服务器（slave）IP：192.168.0.2 首先确保主从服务器上的Mysql版本相同
主服务器上操作 创建用户名为repl的一个账户
GRANT REPLICATION SLAVE ON *.* TO &amp;#39;repl&amp;#39;@&amp;#39;192.168.0.2&amp;#39; IDENTIFIED BY &amp;#39;xxxxxxxxx&amp;#39;; 修改主数据库的配置文件my.cnf,开启BINLOG，并设置server-id的值，修改之后必须重启Mysql服务，如果不需要修改可不用重启。
server-id=1 log_bin = /usr/llocal/mysql/log/mysql-bin.log 之后可以得到主服务器当前二进制日志名和偏移量，这个操作的目的是为了在从数据库启动后，从这个点开始进行数据的恢复
flush tables with read lock; 这是session级，退出就隐式 unlock tables; show master status; 生成主数据库的备份 如果mysqldump 无法识别，则在/home/mysql/.bash_profile 添加环境变量 export PATH=$PATH:/usr/local/mysql/bin mysqldump -p3306 -uroot –pxxxxxxxx test &amp;gt; test.sql unlock tables; 将备份出来的数据复制到从数据库
Scp test.sql 192.168.0.2: 从服务器上操作 将备份数据导入数据库
Mysql –uroot –pxxxxxxxx test &amp;lt; test.sql 修改从数据库的my.cnf,增加server-id参数，如有更改需要重启
server-id=2 # 注：一定不能跟主数据库一样 指定复制使用的用户,主数据库服务器的ip,端口以及开始执行复制日志的文件和位置
CHANGE MASTER TO MASTER_HOST=&amp;#39;192.168.1.130&amp;#39;, MASTER_USER=&amp;#39;repl&amp;#39;, MASTER_PASSWORD=&amp;#39;456123&amp;#39;, MASTER_LOG_FILE=&amp;#39;mysql-bin.</description>
    </item>
    
    <item>
      <title>File-already-exists--filesystem-解决办法</title>
      <link>https://phpgao.github.io/svn_file_already_exists.html</link>
      <pubDate>Wed, 03 Dec 2014 05:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/svn_file_already_exists.html</guid>
      <description>今天用svn命令行提交版本的时候，碰到了这个比较麻烦的问题
svn: File already exists: filesystem &amp;#39;xxx/svn/xxx/db&amp;#39; 搜了一下解决办法，都是需要两次commit，太麻烦。
直接在提交根目录执行以下命令
svn update path/ --accept=mine-full 一句话解决！</description>
    </item>
    
    <item>
      <title>SVN预提交(Pre-Commit)钩子的利用</title>
      <link>https://phpgao.github.io/svn_pre_commit.html</link>
      <pubDate>Tue, 02 Dec 2014 03:33:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/svn_pre_commit.html</guid>
      <description>转自：http://java.dzone.com/articles/useful-subversion-pre-commit
 Checks whether the commit message is not empty Checks whether the commit message consists of at least 5 characters Checks if the committed files are UTF-8 compliant Checks whether the svn:eol-style property is set to LF on newly added files Checks if the committed files have no TAB characters  The UTF-8 and TAB checks are performed on the following file suffixes
 *.java *.js *.xhtml *.css *.xml *.</description>
    </item>
    
    <item>
      <title>python获取操作系统平台、版本及架构</title>
      <link>https://phpgao.github.io/python_system_version_arch.html</link>
      <pubDate>Wed, 19 Nov 2014 02:14:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python_system_version_arch.html</guid>
      <description>转自: http://openwares.net/linux/python_os_version_platform.html
platform模块提供了底层系统平台的相关信息
系统架构 32位还是64位
&amp;gt;&amp;gt;&amp;gt; import platform &amp;gt;&amp;gt;&amp;gt; platform.architecture() (&amp;#39;64bit&amp;#39;, &amp;#39;ELF&amp;#39;) # python 3.3.2+ 64 bits on debian jessie 64 bits (&amp;#39;32bit&amp;#39;, &amp;#39;WindowsPE&amp;#39;) # python 3.3.2 32 bits on windows 8.1 64 bits (&amp;#39;64bit&amp;#39;, &amp;#39;WindowsPE&amp;#39;) # python 3.3.2 64 bits on wndows 8.1 64 bits (&amp;#39;64bit&amp;#39;, &amp;#39;&amp;#39;) # python 3.4.1 64 bits on mac os x 10.9.4 ELF和WindowsPE是可执行文件格式 操作系统 linux,mac还是windows
&amp;gt;&amp;gt;&amp;gt; platform.system() &amp;#39;Linux&amp;#39; # python 3.3.2+ 64 bits on debian jessie 64 bits &amp;#39;Windows&amp;#39; # python 3.</description>
    </item>
    
    <item>
      <title>python中浅拷贝和深拷贝</title>
      <link>https://phpgao.github.io/python_copy.html</link>
      <pubDate>Mon, 10 Nov 2014 09:33:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python_copy.html</guid>
      <description>python中浅拷贝和深拷贝 今天写python脚本，遇到了一个问题。先贴代码：
#coding=utf-8 new_list = [] # 声明一个list tmp = {&amp;#39;a&amp;#39;:123,&amp;#39;b&amp;#39;:&amp;#39;ccc&amp;#39;} # 新建一个dict new_list.append(tmp) # 追加 print tmp print new_list tmp[&amp;#39;a&amp;#39;] = 456 # 修改tmp tmp[&amp;#39;b&amp;#39;] = &amp;#39;ddd&amp;#39; new_list.append(tmp) # 追加 print tmp print new_list # 执行结果： {&amp;#39;a&amp;#39;: 123, &amp;#39;b&amp;#39;: &amp;#39;ccc&amp;#39;} [{&amp;#39;a&amp;#39;: 123, &amp;#39;b&amp;#39;: &amp;#39;ccc&amp;#39;}] # 当改变了tmp，list中的值也会变化 {&amp;#39;a&amp;#39;: 456, &amp;#39;b&amp;#39;: &amp;#39;ddd&amp;#39;} [{&amp;#39;a&amp;#39;: 456, &amp;#39;b&amp;#39;: &amp;#39;ddd&amp;#39;}, {&amp;#39;a&amp;#39;: 456, &amp;#39;b&amp;#39;: &amp;#39;ddd&amp;#39;}] 如果是PHP会发生什么？
$b = array(); $a = array(&amp;#39;b&amp;#39;=&amp;gt;123); array_push($b , $a); $a = array(&amp;#39;b&amp;#39;=&amp;gt;456); array_push($b , $a); var_dump($b); $a = new ArrayObject(array(&amp;#39;b&amp;#39;=&amp;gt;123)); $arr = new ArrayObject(); $arr-&amp;gt;append($a); $a[&amp;#39;b&amp;#39;] = 456; $arr-&amp;gt;append($a); var_dump($arr); # 执行结果  array(2) { [0]=&amp;gt; array(1) { [&amp;#34;b&amp;#34;]=&amp;gt; int(123) } [1]=&amp;gt; array(1) { [&amp;#34;b&amp;#34;]=&amp;gt; int(456) } } object(ArrayObject)#2 (1) {  [&amp;#34;storage&amp;#34;:&amp;#34;ArrayObject&amp;#34;:private]=&amp;gt; array(2) { [0]=&amp;gt; object(ArrayObject)#1 (1) {  [&amp;#34;storage&amp;#34;:&amp;#34;ArrayObject&amp;#34;:private]=&amp;gt; array(1) { [&amp;#34;b&amp;#34;]=&amp;gt; int(456) } } [1]=&amp;gt; object(ArrayObject)#1 (1) {  [&amp;#34;storage&amp;#34;:&amp;#34;ArrayObject&amp;#34;:private]=&amp;gt; array(1) { [&amp;#34;b&amp;#34;]=&amp;gt; int(456) } } } } 由结果看，PHP中array_push方法和array_object的结果也不同。</description>
    </item>
    
    <item>
      <title>PHPCMS登陆流程</title>
      <link>https://phpgao.github.io/phpcms_login.html</link>
      <pubDate>Wed, 05 Nov 2014 06:38:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/phpcms_login.html</guid>
      <description>  调用phpcms/modules/member/index.php中login。
  读取caches/configs/system.php中phpsso的配置。
  调用phpcms/modules/member/classes/client.class.php的_ps_post()发送登录信息。
  该请求被发送到phpsso_server/phpcms/modules/phpsso/index.php的login方法。
  phpsso读取数据库配置phpsso_server/caches/configs/database.php，连接数据库，执行登陆逻辑
  返回登录结果
  </description>
    </item>
    
    <item>
      <title>git使用笔记</title>
      <link>https://phpgao.github.io/note_for_git.html</link>
      <pubDate>Sun, 02 Nov 2014 13:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/note_for_git.html</guid>
      <description>GIT虽然概念比较难理解，但不得不说他是一款开发利器。
老高总结出了一些GIT中很常见的操作命令，分享给大家。但由于GIT命令繁多，所以我将分为基础和进阶两部分。
基础篇： 帮助 git help # 获取帮助，内容如下 usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path] [-p|--paginate|--no-pager] [--no-replace-objects] [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE] [--help] COMMAND [ARGS] The most commonly used git commands are: add Add file contents to the index bisect Find by binary search the change that introduced a bug branch List, create, or delete branches checkout Checkout a branch or paths to the working tree clone Clone a repository into a new directory commit Record changes to the repository diff Show changes between commits, commit and working tree, etc fetch Download objects and refs from another repository grep Print lines matching a pattern init Create an empty git repository or reinitialize an existing one log Show commit logs merge Join two or more development histories together mv Move or rename a file, a directory, or a symlink pull Fetch from and merge with another repository or a local branch push Update remote refs along with associated objects rebase Forward-port local commits to the updated upstream head reset Reset current HEAD to the specified state rm Remove files from the working tree and from the index show Show various types of objects status Show the working tree status tag Create, list, delete or verify a tag object signed with GPG 配置git # 查看配置 git config -l/--list # 以下是可能出现的配置 core.</description>
    </item>
    
    <item>
      <title>PHP文档收藏夹</title>
      <link>https://phpgao.github.io/php_manual_fav.html</link>
      <pubDate>Fri, 31 Oct 2014 10:03:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_manual_fav.html</guid>
      <description>&lt;p&gt;主要记录一些值得研究的PHP文档页面&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Android-Studio可能会遇到的问题</title>
      <link>https://phpgao.github.io/android_studio_faq.html</link>
      <pubDate>Sun, 26 Oct 2014 13:23:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/android_studio_faq.html</guid>
      <description>Error:Execution failed for task &amp;lsquo;:app:processDebugManifest&amp;rsquo;. &amp;gt; Manifest merger failed : uses-sdk:minSdkVersion 8 cannot be smaller than version L declared in library com.android.support:support-v4:21.0.0-rc1
 解决方式： 1、Change compile &amp;lsquo;com.android.support:support-v4:+&amp;rsquo; to compile &amp;lsquo;com.android.support:support-v4:20.+&amp;rsquo; in build.gradle. This will prevent gradle from using v4:21.0.0 that requires version L. 2、Remove/Comment 21.0.0-rc1 in your file /extras/android/m2repository/com/android/support-v4/maven-metadata.xml
 Failed to import Gradle project: Could not fetch model of type &amp;lsquo;IdeaProject&amp;rsquo; using Gradle distribution &amp;lsquo;http://services.gradle.org/distributions/gradle-1.6-bin.zip&#39;.
 解决方法：先从网页上将其下载下来，然后将其解压到任何位置，在环境变量path下配置路径（到gradle的bin目录），可通过cmd命令 gradle -v验证是否成功。</description>
    </item>
    
    <item>
      <title>PYCHARM快捷键</title>
      <link>https://phpgao.github.io/pycharm_hotkey.html</link>
      <pubDate>Fri, 24 Oct 2014 14:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/pycharm_hotkey.html</guid>
      <description>提示 CTRL Q: 在参数列表位置，显示可以输入的所有参数。 CTRL Q: 查看选中方法的文档字符串
阅读 CTRL -: 折叠当前代码 CTRL +: 展开当前代码 CTRL SHIFT -: 折叠所有代码 CTRL SHIFT +: 展开所有代码 CTRL SHIFT F7: 将当前单词在整个文件中高亮，F3移动到下一个，ESC取消高亮。 CTRL F11 | F11: 设置书签. SHIFT F11: 显示所有书签。 CTRL F12: 当一个文件中方法太多，要快速跳到某个方法时，可以用此快捷键打开LIST, 除了用上下箭选择外，还可以输入字母。
移动 ALT UP: 移到上一个方法 ALT DOWN: 移到下一个方法 CTRL B | CTRL 单击： 转到方法定义处 CTRL SHIFT UP: 将当前行上移一行 CTRL SHIFT UP: 将当前行下移一行
SHIFT ENTER: 在行中间执行时，智能跳到下一行。
注释 CTRL /: 注释、取消注释行
选择 ALT 左键： 列模式选择 CTRL W: 选中当前单词，继续按，选中它所属的行/IF/方法.</description>
    </item>
    
    <item>
      <title>PHPSTORM快捷键</title>
      <link>https://phpgao.github.io/phpstorm_hotkey.html</link>
      <pubDate>Thu, 23 Oct 2014 06:46:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/phpstorm_hotkey.html</guid>
      <description>点击菜单：File&amp;gt;Settings&amp;gt;(IDE Settings) Keymap 修改工具栏的字体File-&amp;gt;Setting-&amp;gt;Appearance 如何设置代码自动换行 File-&amp;gt;Setting-&amp;gt;editor-&amp;gt;use soft wrap in editor选项 显示行号 File-&amp;gt;Setting-&amp;gt;editor-&amp;gt;Appearance-&amp;gt; show line numbers选项 phpStorm设置大括号和方法名在同一行显示 ; 大括号和方法名在同一行警告 File -&amp;gt; Settings -&amp;gt; code style -&amp;gt; PHP -&amp;gt; Wrapping and Braces -&amp;gt; Braces placement -&amp;gt;End of line. 在settings-&amp;gt;Plugins里，Browse repositories按钮，搜索vim就会找到 IdeaVim插件该插件是控制phpstorm的keymap(也就是快捷键)的 phpstorm Settings-&amp;gt;Editor-&amp;gt;Highlight全部勾选 Editor tabs -&amp;gt; tab limit 16 Settings-&amp;gt;Editor-&amp;gt;colors&amp;amp;fonts -&amp;gt;font 设置字体大小 navigate/bookmark F11, 设置书签直接切换next bookmark
ctrl+j 插入活动代码提示 ctrl+alt+t 当前位置插入环绕代码 alt+insert 生成代码菜单 Shift + Enter 新一行 ctrl+q 查看代码注释 ctrl+d 复制当前行 ctrl+y 删除当前行 ctrl+alt+y 刷新项目缓存Synchronize 或文件夹右键Synchronize shift+F6 重命名 ctrl+shift+u 字母大小写转换 ctrl+f 查找 ctrl+r 替换 ctrl+shift+I 查看变量或方法定义源 ctrl+g 跳转行 ctrl+alt+F12 跳转至当前文件在磁盘上的位置 alt+down 查看下一个方法 alt+up 查看上一个方法 ctrl+alt+l 重新格式化代码 ctrl+shift+down statement向下移动 ctrl+shift+up statement向上移动 alt+shift+down line向下移动 alt+shift+up line向上移动 ctrl+/ 行注释 ctrl+shift+/ 块注释 Ctrl + Shift + Z redo Ctrl + Shift + F 区域查找 ctrl+shift+n 打开工程中的文件 ctrl+b 跳到变量申明处 ctrl+[] 匹配 {}[] ctrl+shift+]/[ 选中块代码 ctrl+x 剪切行 ctrl+shift+v 复制多个文本 alt+left/right 标签切换 ctrl+p 显示默认参数 ctrl + -/+ 可以折叠项目中的任何代码块</description>
    </item>
    
    <item>
      <title>WIN下phpstorm不能检出svn的问题</title>
      <link>https://phpgao.github.io/phpstorm_svn_authorize.html</link>
      <pubDate>Tue, 21 Oct 2014 03:09:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/phpstorm_svn_authorize.html</guid>
      <description>今天使用win上的phpstrom发现不能检出svn服务器上的文件，折腾了一番才发现原来是svn设置问题。
解决办法：
进入settings
按照下图设置：
这里我们指定了svn的命令行路径，CollabNet\Subversion Client是CollabNet出的svn客户端命令行工具，换成其他的也可以，只要路径指定正确就行。
附下载地址：
支持各种系统的svn
推荐visualsvn</description>
    </item>
    
    <item>
      <title>使用DDoS-Deflate</title>
      <link>https://phpgao.github.io/dos_deflate.html</link>
      <pubDate>Thu, 16 Oct 2014 02:39:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/dos_deflate.html</guid>
      <description>昨天老高的博客受攻击了，本想着没啥流量就不用太在意，哎，防人之心不可无啊！
先装个DoS-Deflate试试看效果吧！
下载 wget http://www.inetbase.com/scripts/ddos/install.shsh install.sh 配置 vi /usr/local/ddos/ddos.conf# show##### Paths of the script and other filesPROGDIR=&amp;quot;/usr/local/ddos&amp;quot;PROG=&amp;quot;/usr/local/ddos/ddos.sh&amp;quot;IGNORE_IP_LIST=&amp;quot;/usr/local/ddos/ignore.ip.list&amp;quot;CRON=&amp;quot;/etc/cron.d/ddos.cron&amp;quot;APF=&amp;quot;/etc/apf/apf&amp;quot;IPT=&amp;quot;/sbin/iptables&amp;quot;##### frequency in minutes for running the script##### Caution: Every time this setting is changed, run the script with --cron##### option so that the new frequency takes effectFREQ=1##### How many connections define a bad IP? Indicate that below.NO_OF_CONNECTIONS=150##### APF_BAN=1 (Make sure your APF version is atleast 0.</description>
    </item>
    
    <item>
      <title>xdebug编译安装和开启远程调试</title>
      <link>https://phpgao.github.io/phpstorm_using_xdebug.html</link>
      <pubDate>Wed, 15 Oct 2014 13:49:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/phpstorm_using_xdebug.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/2802292499.png&#34; alt=&#34;xdebug logo&#34;  /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>typecho源代码解析4---业务逻辑</title>
      <link>https://phpgao.github.io/typecho_source_code_business_logic.html</link>
      <pubDate>Tue, 14 Oct 2014 13:54:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_source_code_business_logic.html</guid>
      <description>上一节
这篇我们就讲讲首页的业务逻辑，首先我们看看路由。
[index] =&amp;gt; Array ( [url] =&amp;gt; / [widget] =&amp;gt; Widget_Archive [action] =&amp;gt; render [regx] =&amp;gt; |^[/]?$| [format] =&amp;gt; / [params] =&amp;gt; Array ( ) ) 由路由表中的正则表达式我们能看出首页的URL为https://blog.phpgao.com/或http://www.phpgao.com，并且不接受任何参数。
下面我们找到了Widget_Archive类，让我们先看看这个类的继承关系（其中Typecho_Widget和Widget_Abstract为抽象类）：
由上一节我们可以得到结论，当路由表匹配到/，会实例化Widget_Archive类，他位于var/Widget/Archive.php，其方法为render。
下面我们一步步跟进，看看到底发生了些什么？
再深入之前，我们需要有一些基本的概念，在此需要讲清楚，便于理解typecho的设计模式：
 基类Typecho_Widget  该类位于var/Typecho/Widget.php，是var/Widget文件夹下所有类的基类，也就是说，几乎所有与业务有关的功能，就是继承此类。
纵观此类，方法不是很多，老高在此挑几个重要的讲解：
/** * 获取对象插件句柄 * 此方法为插件的实现提供了快捷的语法 */ public function pluginHandle($handle = NULL) { return Typecho_Plugin::factory(empty($handle) ? get_class($this) : $handle); } /** * 将类本身赋值 * 模板中很常见，将自己复制给某一个变量，在调用next()方法循环输出 */ public function to(&amp;amp;$variable) { return $variable = $this; } /** * 将每一行的值压入堆栈 * 把数据放到自己的&amp;#39;肚子&amp;#39;里 */ public function push(array $value) { //将行数据按顺序置位  $this-&amp;gt;row = $value; $this-&amp;gt;length ++; $this-&amp;gt;stack[] = $value; return $value; } /** * 返回堆栈每一行的值 * 有点像从数据库中循环读取结果集 * 与push相对应，值得大家参考 */ public function next() { if ($this-&amp;gt;stack) { $this-&amp;gt;row = @$this-&amp;gt;stack[key($this-&amp;gt;stack)]; next($this-&amp;gt;stack); $this-&amp;gt;sequence ++; } if (!</description>
    </item>
    
    <item>
      <title>typecho源代码解析2---插件机制</title>
      <link>https://phpgao.github.io/typecho_source_code_plugin.html</link>
      <pubDate>Sun, 12 Oct 2014 01:24:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_source_code_plugin.html</guid>
      <description>上一节
上次我们讲到了系统完成了初始化，这一篇我们会更加深入typecho，同时会介绍typecho的插件机制。
插件点 热心的读者肯定会问，什么是插件点？当然你会不知道，因为这个名词是老高想出来的ಠ౪ಠ，本次要讲的插件机制的基础知识可以参考我的另一片博文thinkphp钩子的实现。钩子这个词比较粗俗，其实高大上的叫法就是插件，而老高自创的插件点就是事件的意思。
index.php中Typecho_Plugin::factory(&#39;index.php&#39;)-&amp;gt;begin()，其实就是通知挂载到&amp;rsquo;index.php&amp;rsquo;这个事件的插件可以执行了。
具体流程如下：
Typecho_Plugin::factory(&amp;lsquo;index.php&amp;rsquo;)返回了Typecho_Plugin的实例，构造函数中确定了唯一的句柄，即&amp;rsquo;index.php&#39;，紧接着执行了该实例的begin()方法，由于该方法不存在，所以调用了魔术方法__call，最后由__call方法执行所有在这个插件点挂载的插件。
__call方法源代码：
public function __call($component, $args) { $component = $this-&amp;gt;_handle . &amp;#39;:&amp;#39; . $component; $last = count($args); $args[$last] = $last &amp;gt; 0 ? $args[0] : false; if (isset(self::$_plugins[&amp;#39;handles&amp;#39;][$component])) { $args[$last] = NULL; $this-&amp;gt;_signal = true; foreach (self::$_plugins[&amp;#39;handles&amp;#39;][$component] as $callback) { $args[$last] = call_user_func_array($callback, $args); } } return $args[$last]; } 关键点：
 __call是可以带参数的 $callback是二位数组，一个类名，一个方法名 在该类init方法中，activated和handles是分开保存的，因为activated以插件名做键名，而handles以插件点为键，目的不同 插件的关联信息保存在数据库中typecho_options表中的plugins 需要禁用再启用才能使修改后的插件生效  当完成了第一个插件点的挂载后，程序开始路由分发。
下一节
码字不易，转载请注明出处。</description>
    </item>
    
    <item>
      <title>typecho源代码解析3---路由分发</title>
      <link>https://phpgao.github.io/typecho_source_code_dispatch.html</link>
      <pubDate>Sun, 12 Oct 2014 01:24:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_source_code_dispatch.html</guid>
      <description>上一节
时光匆匆，我们终于来到路由工作的地方。几乎每个MVC框架都不会缺少路由功能，因为他实在太重要了。
路由的功能简单的说就是根据请求找到对应业务代码，请求来自外部，业务由系统提供，路由器为二者建立了可靠的链接。
typecho和thinkphp都有路由模块，虽然实现方式不同，但用法却惊人的相似！
thinkphp：
Dispatcher::dispatch(); typecho：
Typecho_Router::dispatch(); typecho的路由实现是保存在数据库中的路由表，使用正则匹配路径，这一点和Django框架有点像，thinkphp则是基于自己设定的一套规则，详见官方文档。
typecho的路由表如下数组组成，路由器类会使用子数组中的regx正则式逐个匹配pathinfo中的路径，如果匹配成功，立即初始化并执行该类对应的action。
以index为例，如果使用正则表达式匹配成功，系统就会新建Widget_Archive类并执行其render方法，看他的名字就知道执行的是渲染页面的方法，也就是之前说的业务。
Array([index] =&amp;gt; Array([url] =&amp;gt; /[widget] =&amp;gt; Widget_Archive[action] =&amp;gt; render[regx] =&amp;gt; |^[/]?$|[format] =&amp;gt; /[params] =&amp;gt; Array())[archive] =&amp;gt; Array([url] =&amp;gt; /blog/[widget] =&amp;gt; Widget_Archive[action] =&amp;gt; render[regx] =&amp;gt; |^/blog[/]?$|[format] =&amp;gt; /blog/[params] =&amp;gt; Array())# .... 有的同学可能会说，typecho的路由表写在数据库里，不够灵活。其实作者也考虑到了，大家可以自由扩展路由表。有兴趣的同学可以去看看Helper类中addRoute和removeRoute的用法。举个例子，如果你需要自定义一个URL,比如www.phpgao.com/robots.txt，就可以在路由表加入如下路由：
[robots] =&amp;gt; Array([url] =&amp;gt; /robots.</description>
    </item>
    
    <item>
      <title>mac快速移动窗口至另一个桌面</title>
      <link>https://phpgao.github.io/mac_move_window_to_other_desktop.html</link>
      <pubDate>Sat, 11 Oct 2014 12:28:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mac_move_window_to_other_desktop.html</guid>
      <description>Mac系统有一大优势，就是在一台电脑上面，可以设定出很多桌面空间使用，这样我们的桌面就不会很凌乱，像MacGG一般都会用到4个桌面空间。在使用桌面空间的时候，大家可能都会用到一个功能，就是我要移动一个窗口到另一个桌面空间，都会把窗口拖到屏幕右边停留几秒，就回自动的切换到下一个桌面空间。今天MacGG给大家介绍一个方法，可以秒切哈。
什么是秒切，就是你拖动窗口到屏幕边缘，无需停留，就自动切到下一桌面空间。
首先打开“终端”（Finder-&amp;gt;应用程序-&amp;gt;实用工具-&amp;gt;终端），并且输入以下命令：
 defaults write com.apple.dock workspaces-edge-delay -float 0;killall Dock 现在大家试一下秒切吧。哈哈。。很爽不。是不是太快了，如果觉得太快，我们还可以在改改设定，我就设定在屏幕边缘停留半秒切换吧。 再次打开“终端”（Finder-&amp;gt;应用程序-&amp;gt;实用工具-&amp;gt;终端），并且输入以下命令：
defaults write com.apple.dock workspaces-edge-delay -float 0.15;killall Dock 如果你想还原成原样，也很简单，再次打开“终端”（Finder-&amp;gt;应用程序-&amp;gt;实用工具-&amp;gt;终端），并且输入以下命令：
defaults delete com.apple.dock workspaces-edge-delay;killall Dock 转自：http://www.macgg.com/archives/6429.html</description>
    </item>
    
    <item>
      <title>typecho源代码解析1---系统初始化</title>
      <link>https://phpgao.github.io/typecho_source_code_init.html</link>
      <pubDate>Sat, 11 Oct 2014 12:20:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_source_code_init.html</guid>
      <description>首先恭喜typecho v1.0的上线！
其次，这篇文章同thinkphp的源代码解析一样都是老高谋划了很久的文章，国庆节由于单位加班没有时间写，今天终于等来了轮休，果断放开了写。希望大家多多支持！
最后老高想说的是，如果大家有兴趣研究源码，那么问题来了，如何高效的学习研究源代码？
老高的建议是：
 一定要熟悉MVC模式(针对WEB开发) 先看看文档再动手 分辨什么是好的坏的代码，不要搞盲目崇拜 做笔记  以下：
文档 如果有什么不明白的，文档里也许会找到答案。
typecho开发文档
版本 再研究源代码前，如果知道自己使用的typecho的版本呢？
答案写在var/Typecho/Common.php里，Typecho_Common类中的常量VERSION。
例子：
class Typecho_Common{/** 程序版本 */const VERSION = &#39;1.0/14.10.9&#39;;...} 开启DEBUG模式 有些同学可能已经发现，typecho默认对外隐藏了PHP的错误信息，如果我们想要看到真正的报错信息，需要开启typecho的DEBUG模式，也可以叫做开发模式。当我们开启了这个模式后，在开发插件或者了解系统原理的时候就能够得到可视化的错误信息了。
开启方法：
# 修改/config.inc.php # 在代码的第一行加入 /**开启debug模式*/ define(&amp;#39;__TYPECHO_DEBUG__&amp;#39;,1); ps.调试的时候如果你的服务器没有安装xdebug，那么你的var_dump()信息会没有格式。
在此老高推荐使用TP框架内的方法dump()，以后我们就可以使用dump()打印变量信息了。
# 修改/config.inc.php # 在debug后加入  /** * 浏览器友好的变量输出 * @param mixed $var 变量 * @param boolean $echo 是否输出 默认为True 如果为false 则返回输出字符串 * @param string $label 标签 默认为空 * @param boolean $strict 是否严谨 默认为true * @return void|string */ function dump($var, $echo=true, $label=null, $strict=true) { $label = ($label === null) ?</description>
    </item>
    
    <item>
      <title>PHP的框架常用函数</title>
      <link>https://phpgao.github.io/php_framework_frequently_used.html</link>
      <pubDate>Sat, 11 Oct 2014 07:58:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_framework_frequently_used.html</guid>
      <description>spl_autoload_register、set_exception_handler和set_error_handler、get_include_path等。
spl_autoload_register 与__autoload函数一样，但是更灵活。他的功能是当程序找不到当前正在使用的类时，在报错前，会调用此函数，如果找到了，就继续工作。
set_exception_handler 接管了原本的异常处理，可以隐藏或者美化输出，可以用throw new Exception触发。
set_error_handler 同上，接管了错误处理。可以用trigger_error触发。</description>
    </item>
    
    <item>
      <title>新装虚拟机记录一下</title>
      <link>https://phpgao.github.io/virtual_machine_record.html</link>
      <pubDate>Sat, 11 Oct 2014 04:50:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/virtual_machine_record.html</guid>
      <description>镜像下载 centos官方 Aliyun Open Source Mirror Site 网易开源镜像站
虚拟化工具 免费的virtualbox，下载地址 KVM Xen
安装 记一次centos最小安装 centos7.0 的最小化安装
优化 分享一个centos6.*优化脚本 CentOS精简命令
后续 关闭防火墙和SELinux # 关闭防火墙service iptables stop chkconfig iptables offchkconfig ip6tables off# SELinuxvi /etc/selinux/config# changeSELINUX=disabled#网卡------vi /etc/sysconfig/network-scripts/ifcfg-eth0TYPE=Ethernet# changeONBOOT=yesNM_CONTROLLED=yes# changeBOOTPROTO=dhcporBOOTPROTO=static# 加上# 静态IPIPADDR=192.168.1.107# 设置子网NETMASK=255.255.255.0# 设置网关GATEWAY=192.168.1.1# 设置DNSDNS1=114.114.114.114IPV6INIT=noUSERCTL=no------service network restartchkconfig network on------# 全局关闭IPv6vi /etc/sysctl.</description>
    </item>
    
    <item>
      <title>我们为什么使用框架</title>
      <link>https://phpgao.github.io/framework_faq.html</link>
      <pubDate>Fri, 10 Oct 2014 13:34:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/framework_faq.html</guid>
      <description>&lt;p&gt;这篇文章于昨日早在215路早读时看到，写的很不错！可以作为学习框架或者写自己的框架之前的读物。&lt;/p&gt;
&lt;p&gt;ps.文章中提到了一个名词——&lt;strong&gt;控制反转&lt;/strong&gt;。这个词可能经常会考倒刚入门程序员。控制反转其实其实是一种外包的思想，将总做交给各个领域的&amp;rsquo;专家&amp;rsquo;去做，而你只负责如何调度他们的工作。明确的分工会给系统带来很多维护上的便利。这个概念常常和&lt;strong&gt;依赖注入&lt;/strong&gt;同时出现，而什么是依赖注入呢？其实他是控制反转的一个实现方式。&lt;/p&gt;
&lt;p&gt;如果你对框架这个概念还不是很理解，那么还可以参考一下老高的系列文章&lt;a href=&#34;https://blog.phpgao.com/thinkphp_init.html&#34;&gt;THINKPHP框架解析&lt;/a&gt;，老高带你深入框架内部，去看看框架到底做了什么，和为什么这么做。希望这篇转帖和老高的文章能够帮助你深入理解框架的作用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>将nginx配置为服务</title>
      <link>https://phpgao.github.io/run_nginx_as_service.html</link>
      <pubDate>Thu, 09 Oct 2014 14:15:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/run_nginx_as_service.html</guid>
      <description>编译安装nginx后，没有将nginx配置为服务，则无法使用诸如service nginx restart的命令，下面我们看看如何将其配置为服务。
编写脚本 vi /etc/init.d/nginx 写入以下内容，并修改nginx路径
#!/bin/sh # # nginx - this script starts and stops the nginx daemon # # chkconfig: - 85 15 # description: Nginx is an HTTP(S) server, HTTP(S) reverse # proxy and IMAP/POP3 proxy server # processname: nginx # chkconfig: 2345 90 91 # description: nginx web server # processname: nginx # config: /opt/nginx/conf/nginx.conf # pidfile: /opt/nginx/nginx.pid # Source function library. . /etc/init.d/functions # Source networking configuration.</description>
    </item>
    
    <item>
      <title>mac下ssh总是失去响应</title>
      <link>https://phpgao.github.io/ssh_on_mac.html</link>
      <pubDate>Thu, 09 Oct 2014 14:02:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ssh_on_mac.html</guid>
      <description>自从使用mac以后，ssh连接总是超时成了老高的一个心病啊，只要一小会儿不动电脑，远程就失去相应，或者干脆直接提示broken pipe，然后断掉。现在终于有了算是能接受的解决办法。
方法一：直截了当砍掉法 ~.，是的，你没有看错！这个组合命令就是主动断开ssh的命令，不行自己问问man。
方法二：修改配置文件 服务器和客户端每隔一定的时间会发一个KeepAlive请求，避免因为路由器或线路的限制而断线，例子中的60s可以因具体的环境改变。
针对服务器端 修改/etc/ssh/sshd_config，修改ServerAliveInterval一项，而ServerAliveCountMax表示如果失败重试的次数
ServerAliveInterval 60ServerAliveCountMax 3 针对客户端 vi /etc/ssh_configClientAliveInterval 60ClientAliveCountMax 3 完</description>
    </item>
    
    <item>
      <title>scp命令指定端口号</title>
      <link>https://phpgao.github.io/scp_port.html</link>
      <pubDate>Thu, 09 Oct 2014 13:18:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/scp_port.html</guid>
      <description>scp命令经常用在主机之间拷贝文件用，但是如果目标机器的sshd的端口不是默认的22，怎么办呢？
scp -P 1111 root@192.168.1.101:/home/xxx 这样就可以配合ssh-keygen -t rsa命令将生成的pub重命名为authorized_keys，并拷贝至目标机器的~/.ssh/文件夹下，这样以后就可以无密码登录ssh了。
完</description>
    </item>
    
    <item>
      <title>git在公司内部的使用实践</title>
      <link>https://phpgao.github.io/using_git.html</link>
      <pubDate>Wed, 08 Oct 2014 09:52:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/using_git.html</guid>
      <description>&lt;p&gt;搜索git使用方法是发现这篇文章，几经搜索终于找到原作者的博客，找到了原文，现在分享给大家，希望能够普及git的使用。&lt;/p&gt;
&lt;p&gt;以下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用vsftp需要用到的东西</title>
      <link>https://phpgao.github.io/vsftp_conf.html</link>
      <pubDate>Wed, 08 Oct 2014 08:32:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vsftp_conf.html</guid>
      <description>安装 yum install -y vsftpd 安全配置 vi /etc/vsftpd/vsftpd.conf#addlisten_port= XXXXanonymous_enable=NOlocal_enable=NOchroot_local_user=YESchroot_list_enable=NO 日志配置 xferlog_enable=YESxferlog_std_format=YES xferlog_file=/var/log/xferlog dual_log_enable=YES vsftpd_log_file=/var/log/vsftpd.log  添加虚拟用户 vi /etc/vsftpd/user_list.txt#addroooooooterrandom_passwd#生成认证文件db_load -T -t hash -f /etc/vsftpd/user_list.txt /etc/vsftpd/user.db#删除明文rm -f vi /etc/vsftpd/user_list.txt#编辑vsftpd的PAM认证文件#删除其他行，加入下面两行#pam_userdb.so 为认证库文件 db即上文user.dbvi /etc/pam.d/vsftpdauth required pam_userdb.so db=/etc/vsftpd/useraccount required pam_userdb.so db=/etc/vsftpd/user#设定FTP用户映射(注意权限)useradd –d /home/xxx –s /sbin/nologin xxxchmod 700 /home/xxx#开启虚拟用户vi /etc/vsftpd/vsftpd.</description>
    </item>
    
    <item>
      <title>Of-Monsters-And-Men---Dirty-Paws</title>
      <link>https://phpgao.github.io/Dirty_Paws.html</link>
      <pubDate>Tue, 07 Oct 2014 02:55:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/Dirty_Paws.html</guid>
      <description>我的歌单：http://music.163.com/#/user/home?id=17531384 试听地址：Of Monsters And Men - Dirty Paws
这首歌是白日梦想家的一段插曲，MV也很出色。这个乐队的歌曾经被APPLE作为广告曲。
歌词讲了一个有趣的故事，让人脑洞大开啊，真想和他们最后一起LALALA。
Jumping up and down the floor, my head is an animal. And once there was an animal, it had a son that mowed the lawn. The son was an ok guy, he had a pet dragonfly The dragonfly it ran away but it came back with a story to say. Her dirty paws and furry coat, she ran down the forest slope.</description>
    </item>
    
    <item>
      <title>Olivia-Broadfield---Say</title>
      <link>https://phpgao.github.io/Olivia_Broadfield__Say.html</link>
      <pubDate>Tue, 07 Oct 2014 02:16:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/Olivia_Broadfield__Say.html</guid>
      <description>我的歌单：http://music.163.com/#/user/home?id=17531384 试听地址：http://music.163.com/#/share/17531384/24934611
有些时候不想说话，比如这会儿。
歌词：
There is something I should say There is something I should tell you There is nothing in my way But I have to get it out of me Can we stay here just a little bit longer please Can you say things just to offer me some release No one ever sees the highs No one ever gets the best of me No one sees me through your eyes They are always second guessing me Can we stay here just a little bit longer please Can you say things just to offer me some release Can we stay here just a little bit longer please Can you say things just to offer me some release</description>
    </item>
    
    <item>
      <title>Linux目录和文件的权限设置</title>
      <link>https://phpgao.github.io/linux_privilege.html</link>
      <pubDate>Sat, 04 Oct 2014 15:49:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/linux_privilege.html</guid>
      <description>要求就是：
 将当前目录中的所有“子目录”的权限设置为755； 将当前目录中的所有“文件”的权限设置为644。  解决方法：
chmod 644 -R *chmod 755 `find -type d` 也可以用find彻底些：
find /path -type f -exec chmod 644 {} /;find /path -type d -exec chmod 755 {} /; 转自：
http://blog.csdn.net/study16/article/details/5896390</description>
    </item>
    
    <item>
      <title>Call-to-undefined-function-imagettftext()解决方法</title>
      <link>https://phpgao.github.io/undefined_imagettftext.html</link>
      <pubDate>Fri, 03 Oct 2014 06:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/undefined_imagettftext.html</guid>
      <description>老高在一个新环境中装DEDECMS的时候发现后台验证码无法显示。直接搜索一下这个错误，有人说session错误，有的说权限错误等等，这不胡扯么！只能看源代码了，定位到文件/include/vdimgck.php。出错的函数是imagettftext()，由于织梦使用了@将错误隐去，导致这次莫名的错误。将@去掉，错误立马出现：
 Fatal error: Call to undefined function imagettftext()
 现在我们就明确了，出现错误的原因是PHP编译时没有加上FreeType。
解决办法：
首先编译安装FreeType，以2.4.0为例：
wget http://download.savannah.gnu.org/releases/freetype/freetype-2.4.0.tar.bz2tar -jxf freetype-2.4.0.tar.bz2cd reetype-2.4.0# 安装到/usr/local/freetype./configure --prefix=/usr/local/freetypemake &amp;amp;&amp;amp; make install 下面我们重新编译PHP，加上参数--with-freetype-dir=/usr/local/freetype
./configure \... \... \--with-freetype-dir=/usr/local/freetype 编译完成重启php
kill -USR2 `cat /usr/local/php/var/run/php-fpm.pid` 再GD库中找到FreeType Support说明安装成功！
需要注意的是，如果服务器freetype的版本是1.*，那么你可能需要改变编译参数为--with-ttf[=DIR]，以下转自ChinaUnix论坛：
 字库 配置开关 FreeType 1.x 要激活 FreeType 1.x 的支持，加上 &amp;ndash;with-ttf[=DIR]。
FreeType 2 要激活 FreeType 2 的支持，加上 &amp;ndash;with-freetype-dir=DIR。
T1lib 要激活 T1lib（Type 1 字体），加上 &amp;ndash;with-t1lib[=DIR]。</description>
    </item>
    
    <item>
      <title>thinkphp钩子的实现</title>
      <link>https://phpgao.github.io/thinkphp_hook.html</link>
      <pubDate>Mon, 29 Sep 2014 02:22:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/thinkphp_hook.html</guid>
      <description>&lt;p&gt;钩子概念对初学者来说可能比较抽象难懂，但是只要掌握了他的工作方式，那么自己动手写一个钩子机制也不难。&lt;/p&gt;
&lt;p&gt;Hook这个词很有意思，以下引用自某网络词典：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hook用作名词时意思是“钩”,转化为动词时可表示把某物弯成钩形,也可表示用弯曲的东西把某物体钩住,引申可表示为“吊”“挂”等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为一个程序猿，老高对钩子的解释是，他就是一个触发机制，把你的软件功能想象成一个陷阱，放到##系统流程##可能经过的路上，如果陷阱被系统踩到，就会执行你的程序，当你挂载的钩子执行完后，系统会根据你的程序的结果继续运行。&lt;/p&gt;
&lt;p&gt;老高最早接触Hook的编程思想是源于windows，当时打dota很入迷，突然想研究一下改键的原理，于是发现了系统钩子这一说法。&lt;/p&gt;
&lt;p&gt;改键的原理，简单地说来就是拦截系统按下键盘时的默认动作，如果需要把小键盘的7映射到Q上，就在拦截时做一个判断，如果的键码是小键盘7，就改为Q的键码，最后发送给系统修改后的键码，即完成了改键操作。&lt;/p&gt;
&lt;p&gt;钩子机制的使用在很多系统上都有体现，如windows、wordpress、thinkphp等，由钩子实现的功能在wordpress中叫做插件，在TP中叫做行为。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>thinkphp框架解析1----只是一个开始</title>
      <link>https://phpgao.github.io/thinkphp_beginning.html</link>
      <pubDate>Mon, 29 Sep 2014 01:07:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/thinkphp_beginning.html</guid>
      <description>&lt;p&gt;接上一篇&lt;a href=&#34;https://blog.phpgao.com/thinkphp_init.html&#34;&gt;起源&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;ThinkPHP/Library/Think/&lt;/code&gt;下找到App.class.php，他就是应用程序类，他会见证整个应用从创建到消亡的整个过程。&lt;/p&gt;
&lt;p&gt;上次我们分析到系统执行&lt;code&gt;App::run()&lt;/code&gt;，下面开始分析此方法：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>thinkphp框架解析0----起源</title>
      <link>https://phpgao.github.io/thinkphp_init.html</link>
      <pubDate>Thu, 25 Sep 2014 14:13:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/thinkphp_init.html</guid>
      <description>&lt;p&gt;THINKPHP是国人开发的PHP框架，如今终于深入内部打探了一番，下面给大家分享老高的心得。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP一些不为人知的使用方法</title>
      <link>https://phpgao.github.io/php_barely_used.html</link>
      <pubDate>Wed, 24 Sep 2014 08:13:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_barely_used.html</guid>
      <description>&lt;p&gt;今天为大家介绍一些比较抽象，但十分有用的关于PHP的用法。老高在通读了THINKPHP源代码后才发现了这一篇天地。合理的使用这些方法或者常量能帮助你更快速的开发或者DEBUG。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP导出项目的数据字典</title>
      <link>https://phpgao.github.io/data_dictionary_exported_by_php.html</link>
      <pubDate>Tue, 23 Sep 2014 03:55:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/data_dictionary_exported_by_php.html</guid>
      <description>突然想到这个方法，果然已经有人实现了。
有这个脚本也能看出来，数据表的很多信息都保存在INFORMATION_SCHEMA.TABLES表里，还有数据表注释的重要性！
&amp;lt;?php/*** 生成mysql数据字典* @author niming&amp;lt;287384795@qq.com&amp;gt;*///配置数据库$dbserver = &amp;quot;localhost&amp;quot;;$dbusername = &amp;quot;root&amp;quot;;$dbpassword = &amp;quot;root&amp;quot;;$database = &#39;mydb&#39;;//其他配置$title = &#39;系统数据字典&#39;;$mysql_conn = @mysql_connect(&amp;quot;$dbserver&amp;quot;, &amp;quot;$dbusername&amp;quot;, &amp;quot;$dbpassword&amp;quot;) or die(&amp;quot;Mysql connect is error.&amp;quot;);mysql_select_db($database, $mysql_conn);mysql_query(&#39;SET NAMES utf8&#39;, $mysql_conn);$table_result = mysql_query(&#39;show tables&#39;, $mysql_conn);//取得所有的表名while ($row = mysql_fetch_array($table_result)) {$tables[][&#39;TABLE_NAME&#39;] = $row[0];}//循环取得所有表的备注foreach ($tables AS $k=&amp;gt;$v) {$sql = &#39;SELECT * FROM &#39;;$sql .</description>
    </item>
    
    <item>
      <title>CentOS精简命令</title>
      <link>https://phpgao.github.io/centos_lite.html</link>
      <pubDate>Fri, 19 Sep 2014 05:22:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/centos_lite.html</guid>
      <description>删除自带web、数据库、php
yum remove httpd* php* mysql-server mysql* php-mysql -y 删除不需要的程序
yum remove Deployment_Guide-en-US finger cups-libs cups ypbind bluez-libs desktop-file-utils ppp rp-pppoe wireless-tools irda-utils sendmail* samba* talk-server finger-server bind* xinetd nfs-utils nfs-utils-lib rdate fetchmail eject ksh mkbootdisk mtools syslinux tcsh startup-notification talk apmd rmt dump setserial portmap yp-tools -yyum groupremove &amp;quot;Mail Server&amp;quot; &amp;quot;Games and Entertainment&amp;quot; &amp;quot;X Window System&amp;quot; &amp;quot;X Software Development&amp;quot; &amp;quot;Development Libraries&amp;quot; &amp;quot;Dialup Networking Support&amp;quot; &amp;quot;Games and Entertainment&amp;quot; &amp;quot;Sound and Video&amp;quot; &amp;quot;Graphics&amp;quot; &amp;quot;Editors&amp;quot; &amp;quot;Text-based Internet&amp;quot; &amp;quot;GNOME Desktop Environment&amp;quot; &amp;quot;GNOME Software Development&amp;quot; -yyum -y groupremove &amp;quot;FTP Server&amp;quot; &amp;quot;PostgreSQL Database client&amp;quot; &amp;quot;PostgreSQL Database server&amp;quot; &amp;quot;MySQL Database server&amp;quot; &amp;quot;MySQL Database client&amp;quot; &amp;quot;Web Server&amp;quot; &amp;quot;Office Suite and Productivity&amp;quot; &amp;quot;E-mail server&amp;quot; &amp;quot;Ruby Support&amp;quot; &amp;quot;Printing client&amp;quot; 关闭selinux</description>
    </item>
    
    <item>
      <title>推荐几个chrome必装插件</title>
      <link>https://phpgao.github.io/chrome-extentions.html</link>
      <pubDate>Fri, 19 Sep 2014 03:58:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/chrome-extentions.html</guid>
      <description>普通用户篇 Adblock大家族 URL：
Adblock Plus
AdBlock
Adblock Pro
这几个货名气太大，赶紧安装，远离广告
强制雅黑字体 URL：强制雅黑字体
win7下还是用雅黑吧。。。。其他系统随意
OneTab URL：OneTab
标签神器，我就用这个导出当前所有标签的URL
Proxy SwitchySharp URL：Proxy SwitchySharp
这个就不多说了，翻{防屏蔽}墙神器
Tampermonkey URL：Tampermonkey
油猴脚本，允许你在网页中执行任何js
微博是个好图床 URL：微博是个好图床
图片外链神器么，趁着Sina还没有封，抓紧用吧
微博急简 URL：微博急简
新浪微博的官网实在恶心，要学会做减法
慧慧购物助手 URL：慧慧购物助手
购物必备，海淘也给力！
妈妈再也不用担心我的macbook发烫了计划2.0Beta URL：妈妈再也不用担心我的macbook发烫了计划2.0Beta
我承认这个插件在气势上已经赢了，优酷土豆去广告
开发者篇 POSTMAN URL：POSTMAN
chrome下测试接口神器
User-Agent Switcher URL：User-Agent Switcher
修改浏览器代理，调试app或者mobile页，还可以去广告。
NoFollow URL：NoFollow
seo专用，给网页中no follow的链接高亮出来
SEO in China URL：SEO in China
快捷查询网站的SEO信息</description>
    </item>
    
    <item>
      <title>在Liunx上彻底删除kangle服务器</title>
      <link>https://phpgao.github.io/del_kangle.html</link>
      <pubDate>Fri, 19 Sep 2014 03:21:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/del_kangle.html</guid>
      <description>之前单位用的kangle服务器，便于快速搭建网站。
但是现在不想用了，如何删除呢？
其实很简单：
停止服务 service kangle stop 删除服务启动项 chkconfig kangle off 删除服务 chkconfig --del kangle 删除残留文件 rm -rf /vhsrm -f /etc/init.d/kangle 现在重启看看，是不是已经删除的很干净了！
##ps.这个删除流程也可以针对其他服务使用！##
顺便提一下
删除Apache可以用rpm -qa|grep apache|xargs rpm -e，一次删除所有与Apache有关的包</description>
    </item>
    
    <item>
      <title>在Linux上使用sysstat的iostat监控系统IO</title>
      <link>https://phpgao.github.io/sysstat.html</link>
      <pubDate>Thu, 18 Sep 2014 07:55:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/sysstat.html</guid>
      <description>在Linux上使用sysstat 搜索iostat命令后才发现如此强大的系统监控工具！
安装 centos
yum install sysstat -y Ubuntu
apt-get install sysstat 使用  iostat 工具提供CPU使用率及硬盘吞吐效率的数据； mpstat 工具提供单个处理器或多个处理器相关数据； sar 工具负责收集、报告并存储系统活跃的信息； sa1 工具负责收集并存储每天系统动态信息到一个二进制的文件中。它是通过计划任务工具cron来运行，是为sadc所设计的程序前端程序； sa2 工具负责把每天的系统活跃性息写入总结性的报告中。它是为sar所设计的前端 ，要通过cron来调用 sadc 是系统动态数据收集工具，收集的数据被写一个二进制的文件中，它被用作sar工具的后端； sadf 显示被sar通过多种格式收集的数据；  iostat ➜ /bin iostat &amp;ndash;help 用法: iostat [ 选项 ] [ &amp;lt;时间间隔&amp;gt; [ &amp;lt;次数&amp;gt; ] ] Options are: [ -c ] [ -d ] [ -N ] [ -n ] [ -h ] [ -k | -m ] [ -t ] [ -V ] [ -x ] [ -y ] [ -z ] [ -j { ID | LABEL | PATH | UUID | &amp;hellip; } [ [&amp;hellip;] | ALL ] ] [ [&amp;hellip;] | ALL ] [ -p [ [,&amp;hellip;] | ALL ] ]</description>
    </item>
    
    <item>
      <title>编译PHP5.6</title>
      <link>https://phpgao.github.io/compile_php.html</link>
      <pubDate>Thu, 18 Sep 2014 06:26:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/compile_php.html</guid>
      <description>准备 PHP的安装最头疼的就是因为某些类库没有安装而报错，所以编译前请确保以下包已安装
yum groupinstall &amp;#34;development tools&amp;#34; yum install -y gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libpng libpng-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses curl curl-devel openssl-devel gdbm-devel db4-devel libXpm-devel libX11-devel gd-devel gmp-devel readline-devel libxslt-devel expat-devel xmlrpc-c xmlrpc-c-devel 编译 高大上的编译选项
./configure \ --prefix=/usr/local/php \ --enable-fpm \ --with-curl \ --with-openssl \ --enable-mbregex \ --with-mysql \ --with-mysqli \ --with-mysql-sock \ --enable-pdo \ --with-pdo-mysql \ --with-pdo-pgsql \ --with-pdo-sqlite \ --enable-mysqlnd \ --with-gd \ --enable-gd-native-ttf \ --enable-exif \ --with-jpeg-dir=/usr/local/jpeg \ --with-png-dir=/usr/local/png \ --with-freetype-dir=/usr/local/freetype \ --enable-gd-jis-conv \ --with-gettext \ --with-zlib \ --enable-zip \ --with-bz2 \ --disable-fileinfo \ --enable-xmlreader \ --enable-xmlwriter \ --with-xmlrpc \ --enable-mbstring \ --enable-inline-optimization \ 20150524更新 5.</description>
    </item>
    
    <item>
      <title>修改Linux系统语言</title>
      <link>https://phpgao.github.io/change_system_lang.html</link>
      <pubDate>Thu, 18 Sep 2014 05:42:38 +0000</pubDate>
      
      <guid>https://phpgao.github.io/change_system_lang.html</guid>
      <description>中文总是能引出很多麻烦，所以推荐安装系统的时候不要选择任何与中文有关的选项。
但是如果很不幸你选了中文作为系统语言，还是有补救的办法的。
很简单，请看下面的代码：
编辑i18n：
vi /etc/sysconfig/i18n 将LANG=&amp;quot;zh_CN.UTF-8&amp;quot;改为LANG=&amp;quot;en_US.UTF-8&amp;quot;即可！</description>
    </item>
    
    <item>
      <title>nginx配置详解</title>
      <link>https://phpgao.github.io/nginx_conf.html</link>
      <pubDate>Wed, 17 Sep 2014 03:28:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nginx_conf.html</guid>
      <description>#nginx配置详解
用了nginx这么久，很多配置还是记不牢，还是总结一下吧！
基本命令：
service nginx reload service nginx start service nginx stop #检测配置文件是否通过，需要比较高的权限，否则可能会报 Permission denied /usr/sbin/nginx -t #平滑重启 nginx -s reload 当编译安装好nginx后，其配置文件nginx.conf可以在/etc/nginx/下找到！
此文件就是主配置文件了。
##高层的配置
#运行用户 user www; #启动进程,一般等于cpu的总核数 worker_processes auto; #更改worker进程的最大打开文件数限制 worker_rlimit_nofile 100000; #全局错误日志及PID文件 error_log /var/log/nginx/error.log; pid /var/run/nginx.pid; #工作模式及连接数上限 events { #每个工作进程允许最大的同时连接数  worker_connections 65535; #epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能  #如果你使用*BSD，你应该使用kqueue  use epoll; #单个后台worker process进程的最大并发链接数  worker_connections 1024; #设置是否允许，Nginx在已经得到一个新连接的通知时，接收尽可能更多的连接  # multi_accept on; } HTTP 模块 HTTP模块控制着nginx http处理的所有核心特性。
#设定http服务器，利用它的反向代理功能提供负载均衡支持 http { #并不会让nginx执行的速度更快，但它可以关闭在错误页面中的nginx版本数字，这样对于安全性是有好处的  server_tokens off; #设定mime类型,类型由mime.</description>
    </item>
    
    <item>
      <title>为你的网站开启ssl支持</title>
      <link>https://phpgao.github.io/https_support.html</link>
      <pubDate>Sat, 13 Sep 2014 00:47:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/https_support.html</guid>
      <description>&lt;p&gt;前几天再Startssl已经为我的博客申请的证书通过，今天早上学习了RSA加密原理，趁着热乎劲还没过，下午就把本站全部升级为https啦！&lt;/p&gt;
&lt;p&gt;看到这个https，瞬间觉得高大上了许多。大家可能认为为自己的网站开启ssl功能很麻烦，其实不然。下面老高就简单的介绍一下开启的步骤，自己也做个记录。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不同的服务器配置ssl的方法大题思路相同，本文以nginx为例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然你还可以试试&lt;a href=&#34;https://blog.phpgao.com/let-us_encrypt.html&#34;&gt;使用Let&amp;rsquo;s Encrypt &amp;ndash; 免费的https证书&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>修复typecho删除分类后统计文章数的错误</title>
      <link>https://phpgao.github.io/typecho_delete_category_mistake.html</link>
      <pubDate>Thu, 11 Sep 2014 15:28:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_delete_category_mistake.html</guid>
      <description>博客的文章渐渐多了起来，之前随意的分类就需要好好想整理一下。
为了图方便，直接在数据库里做了替换查询，不料typecho和WP一样，都会在metas表里存着分类和tag的统计信息，统计了这个分类下有多少篇文章，这个统计信息显示在分类和TAG管理页面。
也就是说，如果正常再文章编辑里修改分类并保存，统计信息会走一加一减这个过程，而暴力数据库修改不会触发。
而这种混乱导致老高的瞬间变身不搞不舒服斯基，下面我们一步一步来修复这个统计信息。
首先，找到所有分类（标签同理）
SELECT mid FROM typecho_metas AS m WHERE m.type = &#39;category&#39;; 然后，找到分类关系表，统计文章数
SELECT r.mid,count(cid)FROM typecho_relationships as rWHERE r.mid IN(SELECT midFROM typecho_metas AS mWHERE m.type=&#39;category&#39;)GROUP BY r.mid; 再次，我们提取出分类名称
SELECT r.mid,m.name,count(cid)FROM typecho_relationships as rLEFT JOIN typecho_metas as m ON m.mid=r.midWHERE r.mid IN(SELECT midFROM typecho_metas AS mWHERE m.type=&#39;category&#39;)GROUP BY r.mid; 最后，以上一个查询为基础修改原始表metas</description>
    </item>
    
    <item>
      <title>也谈代码风格</title>
      <link>https://phpgao.github.io/coding_rules.html</link>
      <pubDate>Wed, 10 Sep 2014 03:05:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/coding_rules.html</guid>
      <description>先讲个笑话
 我们程序员分两种，一种是:
if( #condition ){//codes} 另一种是：
if( #condition ){//codes} 你是哪一种呢?
 这个笑话比较冷，但是也说明了一个问题 —— 代码风格难以统一。
一个好的代码风格会使程序更容易阅读，提高团队合作的效率不说，自己看着也会赏心悦目，好像自己淫的一手好湿。
而混乱的代码轻则增加团队沟通成本，重则影响团队和谐。所以我认为不论是作为一个团队还是所谓一名开发者，必须坚持自己的程序编写风格。老高偶尔也会因为考虑到一致性而使用我不喜欢的代码风格，事实上这个行为是很不可取的。
所以今后老高今后要改正这个不良习惯，保持自己的代码风格，之前写的都不算 XD 。
我的风格 下面老高精(HU)心(LUAN)整理了一些PHP编码的习惯，不知道有没有和我一样的TX？
编码 编码推荐UTF-8，所以在处理文字长度的时候请使用mb_*系列函数。
换行 由于UNIX/Linux、Mac与Windows在换行格式上的差别，请搞清楚运行环境， 再搞清楚CR(carriage return, 符号’r’表示, 十进制ASCII代码是13, 十六进制代码为0x0D), LF(line feed,使用’n’符号表示, ASCII代码是10, 十六制为0x0A), CR/LF的概念，然后在编辑器中把换行格式改为对应的格式即可。
   系统 换行编码 正则     UNIX/Linux 换行 \r   Mac 回车 \n   Windows 回车+换行 \r\n    换行回车的历史，来自豆瓣</description>
    </item>
    
    <item>
      <title>PHP时间函数总结</title>
      <link>https://phpgao.github.io/php_time.html</link>
      <pubDate>Mon, 08 Sep 2014 16:13:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_time.html</guid>
      <description>&lt;p&gt;PHP关于时间的函数可以参考&lt;a href=&#34;http://cn2.php.net/manual/zh/ref.datetime.php&#34;&gt;这里&lt;/a&gt;，可以看到PHP已经提供了很多函数以供我们使用，熟练掌握这些函数可以让你摆脱冗长复杂的计算，希望本文能够让你事半功倍！&lt;/p&gt;
&lt;p&gt;ps.关于时间戳与日期的转换工具，博主推荐这个&lt;a href=&#34;http://shijianchuo.911cha.com&#34;&gt;时间戳转换工具&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在mac上使用adb与fastboot</title>
      <link>https://phpgao.github.io/adb_fastboot_on_mac_osx.html</link>
      <pubDate>Mon, 08 Sep 2014 00:48:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/adb_fastboot_on_mac_osx.html</guid>
      <description>今天给老娘的Mi2S刷机，研究了一下在mac上刷机的方法，在此记录一下。
PS.本方法适用于所有Android机器
Android File Transfer 安装Android File Transfer
brew cask install android-file-transfer 要在OSX上管理Android手机上的文件，需要下载安装这个官方工具http://www.android.com/filetransfer/
由于某些特殊原因网站打不开不要紧，不会翻墙的TX可以到我的网盘下载到目前最新的Android File Transfer。
下载安装完成后运行，就可以轻松管理手机文件了，这个时候把下载好的ROM拷贝到手机目录下，再进入recovery刷机了。
命令行刷机 安装adb工具
brew cask install android-platform-tools 接下来再terminal中运行adb和fastboot即可开始刷机
**小提示：**刷机用到的命令可以参考博主的这篇文章adb,fastboot常用命令及刷机技巧
部分参考来自：
http://www.technobuzz.net/install-adb-fastboot-mac-linux-chrome-os-nexus-tool-script/?utm_source=tuicool</description>
    </item>
    
    <item>
      <title>PHP编译错误的解决办法</title>
      <link>https://phpgao.github.io/php_configuration_error.html</link>
      <pubDate>Sun, 07 Sep 2014 12:02:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_configuration_error.html</guid>
      <description>This article is post on https://coderwall.com/p/ggmpfa
 configure: error: xslt-config not found. Please reinstall the libxslt &amp;gt;= 1.1.0 distribution
 yum -y install libxslt-devel  configure: error: Could not find net-snmp-config binary. Please check your net-snmp installation.
 yum -y install net-snmp-devel  configure: error: Please reinstall readline - I cannot find readline.h
 yum -y install readline-devel  configure: error: Cannot find pspell
 yum -y install aspell-devel  checking for unixODBC support&amp;hellip; configure: error: ODBC header file &amp;lsquo;/usr/include/sqlext.</description>
    </item>
    
    <item>
      <title>centos7.0-的最小化安装</title>
      <link>https://phpgao.github.io/centos7.html</link>
      <pubDate>Sun, 07 Sep 2014 09:47:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/centos7.html</guid>
      <description>&lt;p&gt;放假闲来无事，研究了一下centos 7.0，发现变化真大。。。。。。&lt;code&gt;ifconfig&lt;/code&gt;竟然都被废了，以后看IP就要用&lt;code&gt;ip addr&lt;/code&gt;了。&lt;/p&gt;
&lt;p&gt;下面记录一下需要注意的地方。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>把python脚本编译成exe</title>
      <link>https://phpgao.github.io/py2exe.html</link>
      <pubDate>Mon, 18 Aug 2014 04:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/py2exe.html</guid>
      <description>&lt;p&gt;目前有三种方法&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>web开发者在发布你的作品前需要考虑的技术细节</title>
      <link>https://phpgao.github.io/technical_details.html</link>
      <pubDate>Sun, 17 Aug 2014 15:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/technical_details.html</guid>
      <description>这篇文章个人觉得很受用，故仔细翻译了一下，有些地方可能翻译的不好，请见谅！
翻译后发现貌似已经有人翻译过，但是翻译的水平就有点。。。。。那篇文章中不仅忽略了知识点，并且出现了明显的语义和语法错误，有一定的误导作用，所以请务必重新阅读老高的翻译。文章中容易出错的地方老高已经注释（在文章中以【】标出）。
如需转载，请注明出处！
web开发者在发布你的作品前需要考虑的技术细节 What technical details should a programmer of a web application consider before making the site public!
原文地址： 来自stackexchange.com quora的回答
界面和用户体验  要意识到浏览器的实现标准不一，请确保你的网站在主流浏览器中的正常展现。至少要针对一个最新的Gecko引擎（火狐）的浏览器、一个基于Webkit引擎（Safari或者其他移动端）的浏览器、Chrome、你想要支持的IE浏览器（可以借助IE应用程序兼容性VPC镜像）和Opera浏览器。同时需要考虑到在不同的操作系统下浏览器是如何渲染你的网站。 需要考虑来自其他浏览器的用户如何使用你的网站：智能手机、屏幕朗读器和搜索引擎，举个例子。&amp;ndash;一些易用性信息：网页易读性倡议（WAI）和网站508规范（Section508），移动站开发：移动互联网开发者论坛（MobiForge）。 构架：如果在不影响用户的情况下部署升级。有一个或者多个用来更改架构、代码或者内容更新的可用测试或运行环境，确保他们部署的可控性，以防止造成破坏。有一个自动化部署方案，用来提交更改到生产环境。最优的解决方案是结合使用一个版本控制系统（CVS, Subversion等【译者注：为啥没GIT】）或一个自动构造机制（Ant，NAnt等）。 不要直接给用户展现不友好的错误信息。 不要用纯文本的形式呈现用户的Email，否则他们会被垃圾邮件骚扰。 给用户生成的链接加上rel=&amp;quot;nofollow&amp;quot;属性，以避免SEO作弊。 为你的站点建立合理的限制机制，这一条同时属于安全细则。 理解什么是渐进增强（progressive enhancement）【译者注：与之相对的是优雅降级（graceful degradation）】。 如果一个请求提交成功，请重定向至其他地方，防止用户的重复提交。 不要忘了考虑无障碍阅读，这对网站的优化来讲是一个好主意，而且有些情况下他是法律强制必须有的。 无障碍网页应用（WAI-ARIA）和Web内容无障碍指南2（WCAG 2）在这方面可以帮到你！ 不要让用户思考该如何操作  安全  OWASP开发入门可能会让你花一些时间掌握，但是他涵盖了网站开发安全的方方面面。 了解注入，尤其是SQL注入，并知道如何防御注入。 永远不要相信用户的输入，还有请求中的所有信息（包括cookie和隐藏域）。 给你的密码加点盐后在使用哈希，并针对不同行使用不同的盐以防止彩虹攻击。使用慢速【短？】散列算法，如bcrypt（经过时间考验）或者scrypt(更强、比较新)(1, 2) ，针对如何保存密码请参考（如何保存你的密码）。美国国家标准与技术研究院表示支持使用PBKDF2 算法来加密，联邦信息处理标准在dotnet开发中也支持PBKDF2(更多信息)。避免直接使用MD5和SHA族算法来保存密码。 不要尝试使用自创的自以为NB的认证系统。因为你很容易在细节和无法测试的地方犯错误，也许被黑了以后你才会后知后觉。 了解信用卡的处理规则。（详见这个问题） 为登陆页面和任何需要输入敏感信息的页面使用SSL/HTTPS（如信用卡信息）。 避免跨站脚本攻击(XSS)。 避免跨站请求伪造(CSRF)。 避免点击劫持。 使你的系统更新到最新的补丁。 确保你的数据库连接信息是安全的。 时刻注意最新的攻击技术和影响你的平台的漏洞。 阅读谷歌浏览器安全手册。 阅读网络产品黑客手册。 考虑权限最小化原则。试着让你的应用服务器以非ROOT权限运行（以tomcat为例）。  性能  必要时使用缓存，理解并使用HTTP缓存技术和HTML5的Manifest技术。 图片优化 - 不要使用一个20KB大小的的图片最为重复背景。 学习如何使用gzip压缩内容。 合并/链接多个样式表或多个脚本文件以减少浏览器的请求数，并且使用gzip压缩文件中重复的内容。 看一看雅虎高性能站点，有很多不错的点子，包括提高前端性能和他们的YSlow工具（需求使用Firefox、Safira、Chrome、或Opera浏览器）。同时，Google page speed（使用浏览器插件）也是一个不错的性能调校工具，他同时也会优化你的图片。 针对小并且相关的图片使用CSS image sprite技术。 访问量大的站点需要考虑将不用内容分至不同的域名下。 静态内容（如图片、css、js脚本还有不需要cookie的普通内容）应该被分配到一个不使用cookie的域名下，因为一个域名下的所有cookie和子域下的cookie将会被包含在所有对应的域名下。一个好的主意是使用CND加速，但是考虑到CND可能会挂，到时候本地的拷贝也会提供服务。 最小化一个浏览器需要渲染一个页面所需要的请求数。 利用工具Google Closure Compiler最小化你的js文件，还有其他的最小化工具。 确保有一个favicon.</description>
    </item>
    
    <item>
      <title>centos下安装python-MySQLdb</title>
      <link>https://phpgao.github.io/python_mysqldb.html</link>
      <pubDate>Fri, 15 Aug 2014 04:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python_mysqldb.html</guid>
      <description>源码安装： 点击这里下载源码
解压前线装一下必要的包
yum install python-devel mysql-devel zlib-devel openssl-devel 解压
tar xf MySQL-python-1.2.3.tar.gz cd MySQL-python-1.2.3 修改mysite.cfg，指定mysql-config的路径
使用whereis mysql-config找路径
vi mysite.cfg #找到mysql_config = XXX 改为你的路径 继续安装
python setup.py build python setup.py install 工具安装： sudo easy_install mysql-pythonsudo pip install mysql-python 出现错误的解决办法 --- ```bash vi ~/.bash_profile # add export DYLD_LIBRARY_PATH=&amp;#39;/usr/local/mysql/lib&amp;#39;; PATH=&amp;#34;$PATH:/usr/local/mysql/bin&amp;#34; enjoy~
Win下请直接下载编译好的安装包：
请输入链接描述</description>
    </item>
    
    <item>
      <title>php不使用中间变量交换两个变量的值</title>
      <link>https://phpgao.github.io/php_substitution_of_variables.html</link>
      <pubDate>Wed, 13 Aug 2014 08:35:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_substitution_of_variables.html</guid>
      <description>方法一：
$a = $a^$b;$b = $b^$a;$a = $a^$b; 这就是位运算带给我们的奇妙之处！（这种方法只适合于int型和string型，而且位数不能超过8位）
方法二：
list($var1, $var2) = array($var2, $var1); </description>
    </item>
    
    <item>
      <title>centos国内源总结</title>
      <link>https://phpgao.github.io/centos_repo.html</link>
      <pubDate>Mon, 11 Aug 2014 03:34:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/centos_repo.html</guid>
      <description>有时候centos使用yum命令的时候软件下载速度会很慢，还好国内有很多镜像站供大家选择，在此博主为大家总结了一些centos国内镜像站，如果你需要下载centos的iso文件或者相关软件，可以到以下网站下载，速度相当快！
当然，如果你想直接替换掉centos系统内置的yum源地址，可以参考这篇文章Centos源设置，将你的源设为比较快的地址！
   地区 HTTP     Alibaba Cloud Computing http://mirrors.aliyun.com/centos/   Beijing Institute of Technology http://mirror.bit.edu.cn/centos/   Beijing Teletron Telecom Engineering http://mirrors.btte.net/centos/   BitComm Ltd. http://mirrors.pubyun.com/centos/   CDS China http://mirrors.yun-idc.com/centos/   China University of Geosciences http://mirrors.cug.edu.cn/centos/   Dalian Neusoft University of Information http://mirrors.neusoft.edu.cn/centos/   Grand Cloud http://mirrors.grandcloud.cn/centos/   Huazhong University of Science and Technology http://mirrors.hust.edu.cn/centos/   NetEase http://mirrors.</description>
    </item>
    
    <item>
      <title>软件版本总结</title>
      <link>https://phpgao.github.io/software_verson.html</link>
      <pubDate>Thu, 31 Jul 2014 08:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/software_verson.html</guid>
      <description>&lt;h1 id=&#34;软件版本总结&#34;&gt;软件版本总结&lt;/h1&gt;
&lt;h2 id=&#34;版本号&#34;&gt;版本号&lt;/h2&gt;
&lt;p&gt;V（Version）：即版本，通常用数字表示版本号。(如:EVEREST Ultimate v4.20.1188 Beta )
Build：用数字或日期标示版本号的一种方式。(如:VeryCD eMule v0.48a Build 071112)
SP：Service Pack，升级包。(如:Windows XP SP 2/Vista SP 1)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vim入门</title>
      <link>https://phpgao.github.io/vim_ABC.html</link>
      <pubDate>Thu, 31 Jul 2014 07:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vim_ABC.html</guid>
      <description>vim常用命令 VIM虽说不长用，然是还是很需要掌握的，VIM功能强大的没话说，就是命令太多不好记！
老高就来慢慢总结一下VIM的常用命令和技巧吧！
 命令 选择，删除，复制，粘贴    快捷键 作用     v 从光标当前行开始，光标经过的行都会被选中，再按一下v结束   V 从光标当前行开始，光标经过的行都会被选中，再按一下V结束   Ctrl + v 从光标当前位置开始，选中光标起点和终点所构成的矩形区域，再按一下Ctrl + v结束。   gg``VG 选中全部的文本，其中gg为跳到行首，V选中整行，G末尾   y 复制 （默认是复制到&amp;quot;寄存器   p 粘贴 （默认从&amp;quot;寄存器取出内容粘贴）   &amp;quot;+y 复制到系统剪贴板(也就是vim的+寄存器）   删除 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓   d 删除   x 删除字符   dd 删除一行   J 删除换行符，两行合并为一行   重做 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓   u 撤销   CTRL + R 反转撤消   U 一次撤消对一行的全部操作 第二次使用该命令则会撤消前一个U的操作   追加 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓   i 在当前光标之前插入文本。   a 在当前光标之后插入文本。   o 在当前行的下面另起一行，并使当前模式转为Insert模式。   O 将在当前行的上面另起一行。   使用命令计数 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓   kkkkkkkkk 或 9k 要向上移动9行   a!</description>
    </item>
    
    <item>
      <title>安装Scarpy踩过的坑</title>
      <link>https://phpgao.github.io/scarpy_error.html</link>
      <pubDate>Thu, 31 Jul 2014 04:50:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/scarpy_error.html</guid>
      <description>#安装Scarpy踩过的坑
Scrapy是python下一个著名的爬虫，目前最新版为0.24。
这是他的帮助文档-&amp;gt;Scrapy 0.24 文档
其中**选择器篇**需要好好研究！
帮助文档里的安装指南写得很宽泛，所以安装出错是在正常不过的事了。(再者说，安装出错确实不是Scrapy的错嘛)
So here is the doc to help you with installing Scrapy.
First of all, before installing, please make sure U have already installed these libs or apps below:
 python version &amp;gt;= 2.7 python-devel package libs:  xml2-dev xslt-dev ffi-dev openssl-dev    If not, commands below may help:
on Redhat/Centos:
yum install python-devel libxml2-devel libxslt-devel libffi-devel openssl-devel bzip2-devel  on Debian/Ubuntu:</description>
    </item>
    
    <item>
      <title>升级python2.7和安装pip,easy_install和setuptool</title>
      <link>https://phpgao.github.io/pip-easy_install-setuptool.html</link>
      <pubDate>Wed, 30 Jul 2014 08:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/pip-easy_install-setuptool.html</guid>
      <description>&lt;h1 id=&#34;升级python和安装pipeasy_install和setuptool&#34;&gt;升级python和安装pip,easy_install和setuptool&lt;/h1&gt;
&lt;p&gt;新机子装环境什么的最麻烦了，在此记录一下python的升级和包(模块)管理软件&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用dropbox同步备份网站和数据库</title>
      <link>https://phpgao.github.io/dropbox_sync_cli.html</link>
      <pubDate>Tue, 29 Jul 2014 08:24:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/dropbox_sync_cli.html</guid>
      <description>&lt;p&gt;自从用了Shadowsocks，整个人都精神多了！&lt;/p&gt;
&lt;p&gt;今天开整Dropbox，话说这货也被Q了。&lt;/p&gt;
&lt;p&gt;废话不多说&lt;/p&gt;
&lt;p&gt;以下内容需要翻{防屏蔽}墙使用，如果没有，可以参考&lt;a href=&#34;https://blog.phpgao.com/shadowsocks_on_linux.html&#34;&gt;老高的这篇文章&lt;/a&gt;搭建一个稳定又极速的翻{防屏蔽}墙环境&lt;/p&gt;
&lt;h2 id=&#34;下载&#34;&gt;下载&lt;/h2&gt;
&lt;p&gt;在&lt;a href=&#34;https://www.dropbox.com/install?os=lnx&#34;&gt;官网&lt;/a&gt;找到linux专用脚本，执行一下对应系统的脚本&lt;/p&gt;
&lt;h3 id=&#34;32位系统&#34;&gt;32位系统&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cd ~ &amp;amp;&amp;amp; wget -O - &amp;#34;https://www.dropbox.com/download?plat=lnx.x86&amp;#34; | tar xzf -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;64位系统&#34;&gt;64位系统&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cd ~ &amp;amp;&amp;amp; wget -O - &amp;#34;https://www.dropbox.com/download?plat=lnx.x86_64&amp;#34; | tar xzf -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>python交互模式下方向键乱码的正确解决方法</title>
      <link>https://phpgao.github.io/python_arrow_key_messup.html</link>
      <pubDate>Tue, 29 Jul 2014 03:10:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python_arrow_key_messup.html</guid>
      <description>&lt;h1 id=&#34;python交互模式下方向键乱码的正确解决方法&#34;&gt;python交互模式下方向键乱码的正确解决方法&lt;/h1&gt;
&lt;p&gt;今天升级了python后，发现在交互模式中上下左右变成了乱码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;^[[A ^[[D ^[[B ^[[C ^[[D ^[[D ^[[D ^[[D ^[[D ^[[D ^[[D ^[[D 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;搜索了一下，普遍的解决方法是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为方向键被转义了
原因主要是由于缺少readline Module问题导致的。而CentOS默认只有readline模块而没有readline-devel模块。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;解决方法
yum -y install readline-devl
然后重新编译安装python就ok了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再仔细一看，这些问题都是N年前了，yum中的包名早都换了。。。怪不得总是报错，说找不到&lt;code&gt;readline-devl&lt;/code&gt;，貌似现在开发版后面都变成&lt;code&gt;devel&lt;/code&gt;了&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bad-interpreter-没有那个文件或目录</title>
      <link>https://phpgao.github.io/bad_interpreter.html</link>
      <pubDate>Tue, 29 Jul 2014 01:56:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/bad_interpreter.html</guid>
      <description>bad interpreter: 没有那个文件或目录
起因 今天在linux上运行一个python脚本，总是报错bad interpreter，开始我以为是解释器的路径问题，可是whereis python告诉我路径没有错！
google之，问题解决：
在windows上编辑的脚本，到linux上执行，会提示上面的错误
解决办法 dos2unix myfilename
报错的话执行一下yum install dos2unix -y
原因 在windows下编辑的脚本，是dos格式的，即每一行的行尾以\r\n来标识, 其ASCII码分别是0x0D, 0x0A。
以后再windows上的写脚本一定要三思！</description>
    </item>
    
    <item>
      <title>#!-usr-bin-env与#!-usr-bin-python的区别</title>
      <link>https://phpgao.github.io/usr_bin_python.html</link>
      <pubDate>Tue, 29 Jul 2014 01:54:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/usr_bin_python.html</guid>
      <description>今天写了个采集脚本，使用了BeautifulSoup，所以在代码中有下面的import语句
from BeautifulSoup import BeautifulSoup as BS 在win下执行，没问题，但是在linux下执行，就报这个错误
 ImportError: No module named BeautifulSoup
 google之
转自快乐&amp;amp;&amp;amp;平凡
脚本语言的第一行，目的就是指出，你想要你的这个文件中的代码用什么可执行程序去运行它，就这么简单
#!/usr/bin/python是告诉操作系统执行这个脚本的时候，调用/usr/bin下的python解释器;#!/usr/bin/env python这种用法是为了防止操作系统用户没有将python装在默认的/usr/bin路径里。当系统看到这一行的时候，首先会到env设置里查找python的安装路径，再调用对应路径下的解释器程序完成操作。#!/usr/bin/python相当于写死了python路径;#!/usr/bin/env python会去环境设置寻找python目录,推荐这种写法。 而我的/usr/bin/python是2.6版本，但是安装BeautifulSoup的是2.7。。。
#mv /usr/bin/python /usr/bin/python2.6.6#ln -s /usr/local/bin/python2.7 /usr/bin/python 成功解决!</description>
    </item>
    
    <item>
      <title>30元一年，打造自己的翻墙VPS</title>
      <link>https://phpgao.github.io/vps.html</link>
      <pubDate>Mon, 28 Jul 2014 09:26:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vps.html</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2015/06/2425396346.png&#34; alt=&#34;SS&#34;  /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从此告别龟速的goagent，节省下来的时间会让你觉得很值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么要自己搭梯子？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;答：请看此试验 &amp;mdash;-&amp;gt; &lt;a href=&#34;http://www.hekaiyu.cn/hacker/1527.html&#34;&gt;评测告诉你：那些免费代理悄悄做的龌蹉事儿&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所以：&lt;strong&gt;免费的东西是最贵的！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;更多性价比VPS请移步 &lt;strong&gt;&lt;a href=&#34;https://blog.phpgao.com/vpses.html&#34;&gt;老高推荐的VPS&lt;/a&gt;&lt;/strong&gt;，希望大家在这里能够找到适合自己的VPS&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>记一次bypy的使用</title>
      <link>https://phpgao.github.io/bypy.html</link>
      <pubDate>Mon, 28 Jul 2014 07:21:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/bypy.html</guid>
      <description>&lt;p&gt;无意间发现了&lt;a href=&#34;https://github.com/houtianze/bypy&#34;&gt;bypy&lt;/a&gt;一个python写得&lt;strong&gt;百度网盘&lt;/strong&gt;的linux客户端&lt;/p&gt;
&lt;p&gt;工具实在难得，记录一下，说不定以后能用上！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vim中文乱码的解决办法</title>
      <link>https://phpgao.github.io/vim_garbled.html</link>
      <pubDate>Mon, 28 Jul 2014 06:24:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vim_garbled.html</guid>
      <description>以centos为例，执行yum install -y vim后，打开php、py等文件，发现中文乱码了。。。
google之
解决办法：
vim /etc/.vimrc 将以下内容写入
set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936set termencoding=utf-8set encoding=utf-8 再次打开，中文已正常显示。</description>
    </item>
    
    <item>
      <title>在python的urllib2中使用socks代理</title>
      <link>https://phpgao.github.io/python_socks_proxy.html</link>
      <pubDate>Sun, 27 Jul 2014 10:08:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python_socks_proxy.html</guid>
      <description>转自潘魏增的博客！
python2.5中的urllib2支持http代理，不支持socks代理。假如代码库或者编码时使用了urllib2，同时又要使用socks，就需要第三方的库来实现。幸运的是，已经有人造好了轮子。
SocksiPy是一个socks module。它提供了一个类socket的接口，支持socks4、socks5和http proxy。下载后在代码中引用socks.py即可，也可以写个setup.py文件安装到python的site-packages目录中。 使用时，将下面的代码放在调用urllib2的代码之前即可：
import socksimport socketsocks.setdefaultproxy(socks.PROXY_TYPE_SOCKS5, &amp;quot;127.0.0.1&amp;quot;, 8080)socket.socket = socks.socksocketimport urllib2print urllib2.urlopen(&#39;http://baidu.com&#39;).read() 如果是自己写的程序，也可以尝试使用pycurl这个库。ubuntu使用sudo apt-get install python-pycurl python-pycurl-dbg安装。 示例代码
import pycurlc = pycurl.Curl()c.setopt(pycurl.URL, &#39;http://baidu.com&#39;)c.setopt(pycurl.PROXY, &#39;127.0.0.1&#39;)c.setopt(pycurl.PROXYPORT, 8080)c.setopt(pycurl.PROXYTYPE, pycurl.PROXYTYPE_SOCKS5)c.perform() 如果在程序外部使用socks，推荐使用tsocks。ubuntu中直接使用sudo apt-get install tsocks安装。安装完毕以后需要修改/etc/tsocks.conf。配置样例如下
# 默认代理服务器server = 127.0.0.1 # 代理服务器类型 server_type = 5 # 代理服务器端口server_port = 8080 使用时，在命令行输入tsocks 程序名即可。例如ubuntu下的epiphany浏览器没有代理设置，如果想使用socks代理，输入tsocks epiphany-browser即可（注意先关闭其他的epiphany实例）。</description>
    </item>
    
    <item>
      <title>使用shadowsocks轻松搭建翻墙环境教程</title>
      <link>https://phpgao.github.io/shadowsocks_on_linux.html</link>
      <pubDate>Sun, 27 Jul 2014 03:22:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/shadowsocks_on_linux.html</guid>
      <description>&lt;p&gt;之前大家翻墙可能都会用到免费的goagent代理，但是他速度慢，链接也不稳定，看油管更是无望，更好的解决方案是shadowsocks。&lt;/p&gt;
&lt;p&gt;shadowsocks是一个著名的轻量级socket代理，基于python编写。&lt;/p&gt;
&lt;p&gt;如果你有国外的VPS，那么使用shadowsocks搭建一个翻{防屏蔽}墙服务器是一件很轻松的事情！&lt;/p&gt;
&lt;p&gt;先看看&lt;a href=&#34;http://shadowsocks.org/en/download/clients.html&#34;&gt;shadowsocks覆盖的客户端覆盖了多少系统&lt;/a&gt;，连OpenWRT都支持！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://blog.phpgao.com/usr/uploads/2016/05/3138848860.jpg&#34; alt=&#34;shadowsocks客户端&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;老高之前买的$4.99一年的VPS，128MB，用起来妥妥的!现在已经升级至$9.99，512MB内存，运行速度更快，翻{防屏蔽}墙速度更是没话说，如果你感兴趣，可以看看&lt;a href=&#34;https://blog.phpgao.com/vps.html&#34;&gt;VPS购买攻略&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;看完本文，你就能够轻松打造独享的翻{防屏蔽}墙环境！&lt;a href=&#34;https://blog.phpgao.com/carzy_router.html&#34;&gt;甚至能够将shadowsocks安装到你的路由器中，子网设备自动翻墙&lt;/a&gt;！再也不需要在网上购买shadowsocks的账号了，也不需要在忍受速度巨慢的免费shadowsocks账号了。&lt;/p&gt;
&lt;p&gt;如果你的VPS是搬瓦工，那么恭喜你！你可以直接在后台一键安装shadowsocks，具体如何操作请参考&lt;a href=&#34;https://blog.phpgao.com/bandwagonhost_vps_panel.html&#34;&gt;使用搬瓦工(bandwagonhost)后台管理VPS&amp;amp;安全设置&lt;/a&gt;中如何一键安装shadowsocks一节，配置完毕后ss就会运行在后台，重启后也会自动运行。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;友情提示：有些打包好的ss程序很难保证是否会记录你的服务器信息，所以一定要经常更新服务器端的密码或端口！或者，自己编译一个。。。。。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>在linux下安装ctorrent下载种子文件</title>
      <link>https://phpgao.github.io/ctorrent.html</link>
      <pubDate>Sun, 27 Jul 2014 02:53:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ctorrent.html</guid>
      <description>&lt;p&gt;VPS大家手里多多少少都会有那么一两个（win请绕道），如果能让他们在空闲的时候帮我们下载一些很大，但是又下载很慢的种子，岂不是一举两得！&lt;/p&gt;
&lt;p&gt;linux命令行下的torrent下载软件真的很少([rc]Torrent和Transmission的命令行版本)，而且实在不太好用（当然是和迅雷不能比）。&lt;/p&gt;
&lt;p&gt;但是如果你看完此篇，也许会发现原来在命令行里下载种子其实不是那么难！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VPS安全设置</title>
      <link>https://phpgao.github.io/vps_safty.html</link>
      <pubDate>Sun, 27 Jul 2014 02:23:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/vps_safty.html</guid>
      <description>&lt;p&gt;内容转自 &lt;a href=&#34;http://www.linode.im/1642.html&#34;&gt;做好VPS的基础安全防护工作&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用linode VPS也有好长一段时间了，爱好linux也有很久好久了，自从2004年自己买了笔记本后就尝试安装各种linux发行版，包括FreeBSD这样的unix鼻祖，不过当时仅仅把爱好停留在装系统上面，并没有对linux网络服务器做深入的研究。&lt;/p&gt;
&lt;p&gt;很多朋友认为买了vps把系统安装上去，环境搭建好就万事大吉了，实际上并非如此，网络一直是不安全的，我们只能尽我们最大的努力做好基础的安全防护工作，尽可能的减少被攻击的可能，尽量减少非人为因素宕机的可能。&lt;/p&gt;
&lt;p&gt;直到自己真正的使用linux服务器后，才系统的对linux进行了学习，我的知识来源主要是鸟哥的linux私房菜基础版第三版以及鸟哥的linux私房菜服务器第三版。以下是我平时维护自己vps以及帮个别朋友维护linux服务器的一点心得，如何做好VPS的基础安全防护？&lt;/p&gt;
&lt;p&gt;在linode新手起步教程里，我们学习了如何安装liunx操作系统，重启linode vps，执行一些基本的系统管理任务。现在我们来进一步做好VPS的安全工作，以防非法入侵。您会学习到如何启动防火墙（iptables），设置SSH安全访问密钥，自动ban某些非法ip（Fail2ban）。当然这都是非常基础的安全防护工作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在github写博客</title>
      <link>https://phpgao.github.io/github_blog.html</link>
      <pubDate>Sat, 26 Jul 2014 04:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/github_blog.html</guid>
      <description>&lt;p&gt;没想到jekyll这么火啊！&lt;/p&gt;
&lt;p&gt;今天闲来无事，也想试试把博客搬到github玩玩。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP正则表达式的模式修正符</title>
      <link>https://phpgao.github.io/pattern_modifiers.html</link>
      <pubDate>Fri, 25 Jul 2014 09:30:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/pattern_modifiers.html</guid>
      <description>PHP在处理正则表达式的时候，在最后面可以加上诸如/i, /is, /s, /isU的选项，他们都代表什么含义呢？
其实他们是PHP正则表达式的模式修正符，用于对正则表达式的补充。
[TOC]
优先级概念 正则符号的优先级：
()圆括号因为是内存处理所以第1 * ? + { } 重复匹配内容第2 ^ $ \b 边界处理第3 | 条件处理第4 最后按照运算顺序计算匹配
常用的修正符 i (PCRE_CASELESS)正则内容在匹配时候不区分大小写（默认是区分的）。
如preg_match(&#39;/\[TOC\]/i&#39;,$str) 这句话中的小写字母i，他跟在正则表达式后面，起的作用是匹配时忽略大小写 所以，上述正则表达式可以匹配诸如 [toc]、[ToC]、或者[TOC]。
m (PCRE_MULTILINE) 在匹配首内容或者尾内容时候采用多行识别匹配。默认情况下，PCRE 将目标字符串作为单一的一“行”字符所组成的（甚至其中包含有换行符也是如此）。“行起始”元字符（^）仅仅匹配字符串的起始，“行结束”元字符（$）仅仅匹配字符串的结束，或者最后一个字符是换行符时其前面（除非设定了 D 修正符）。这和 Perl 是一样的。 当设定了此修正符，“行起始”和“行结束”除了匹配整个字符串开头和结束外，还分别匹配其中的换行符的之后和之前。这和 Perl 的 /m 修正符是等效的。如果目标字符串中没有“/n”字符或者模式中没有 ^ 或 $，则设定此修正符没有任何效果。
S (PCRE_DOTALL) 如果没有使用这个模式修正符号，元字符中的&amp;quot;.&amp;ldquo;默认不能表示换行符号,将字符串视为单行。如果设定了此修正符，模式中的圆点元字符（.）匹配所有的字符，包括换行符。没有此设定的话，则不包括换行符。这和 Perl 的 /s 修正符是等效的。排除字符类例如 [^a] 总是匹配换行符的，无论是否设定了此修正符。
x (PCRE_EXTENDED) 忽略正则中的空白。如果设定了此修正符，模式中的空白字符除了被转义的或在字符类中的以外完全被忽略，在未转义的字符类之外的 # 以及下一个换行符之间的所有字符，包括两头，也都被忽略。
A (PCRE_ANCHORED) 强制从头开始匹配。如果设定了此修正符，模式被强制为“anchored”，即强制仅从目标字符串的开头开始匹配即自动在模式开头加上^。此效果也可以通过适当的模式本身来实现（在 Perl 中实现的唯一方法）。
D (PCRE_DOLLAR_ENDONLY) 强制$匹配尾部无任何内容。如果设定了此修正符，模式中的美元元字符仅匹配目标字符串的结尾。没有此选项时，如果最后一个字符是换行符的话，美元符号也会匹配此字符之前（但不会匹配任何其它换行符之前）。如果设定了 m 修正符则忽略此选项。Perl 中没有与其等价的修正符。 S 当一个模式将被使用若干次时，为加速匹配起见值得先对其进行分析。如果设定了此修正符则会进行额外的分析。目前，分析一个模式仅对没有单一固定起始字符的 non-anchored 模式有用。</description>
    </item>
    
    <item>
      <title>typecho的优化设置</title>
      <link>https://phpgao.github.io/typecho.html</link>
      <pubDate>Fri, 25 Jul 2014 07:48:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho.html</guid>
      <description>[TOC]
typecho的出现让我终结了使用多年的WP，小巧的体积，不错的速度
markdown支持 如果你还不懂markdown语法，请参考markdown语法
由于typecho使用了md语法，那么强烈推荐这篇文章，为你的博客加入目录功能
伪静态 如果想让你的博文地址变成这个样子www.phpgao.com/typecho.html，那就需要开启地址重写功能，俗称伪静态。
这样需要在新链接形式和旧链接形式间做一些转换，而转换的规则就定义在.htaccess或httpd.ini文件里！
linux的下的.htaccess可以直接参考WP的配置，而windows下的IIS请参考如下配置，将下面的代码拷贝至httpd.ini文件，放置到web根目录下
[ISAPI_Rewrite]# 3600 = 1 hourCacheClockRate 3600RepeatLimit 32RewriteRule ^/(admin|usr)/(.*) /$1/$2 [L]RewriteRule ^/(.*).html$ /index.php/$1.html [L]RewriteRule ^/archives/(.*) /index.php/archives/$1 [L]RewriteRule ^/category/(.*) /index.php/category/$1 [L]RewriteRule ^/author/(.*) /index.php/author/$1 [L]RewriteRule ^/([0-9]+)/([0-9]+)/$ /index.php/$1/$2/ [L]RewriteRule ^/tag/(.*)/$ /index.php/tag/$1 [L]RewriteRule ^/search/(.*)/$ /index.php/search/$1 [L]RewriteRule ^/(.*)page/(.*) /index.php/$1page/$2 [L]RewriteRule ^/(feed.*) /index.php/$1 [L]RewriteRule ^/action/(.*) /index.php/action/$1 [L]RewriteRule ^/(.*)comment /index.php/$1/comment [L]RewriteRule ^/sitemap /index.php/sitemap [L]RewriteRule ^/go/(.</description>
    </item>
    
    <item>
      <title>php将image转换为base64编码</title>
      <link>https://phpgao.github.io/base64_pic.html</link>
      <pubDate>Fri, 25 Jul 2014 03:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/base64_pic.html</guid>
      <description>&lt;p&gt;引用PHP手册里的一评论&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This will greatly reduce your page load time as the browser will only
need to send one server request for the entire page, rather than
multiple requests for the HTML and the images. Requests need to be
uploaded and 99% of the world are limited on their upload speed to the
server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;翻译一下就是&lt;/p&gt;
&lt;p&gt;这种方式能够大大减少页面载入时间，因为整个页面只需要一个请求，多个针对html文档和图片的请求。请求需要被提(上)交(传)，但是99%的上传速度是被限制的。&lt;/p&gt;
&lt;p&gt;所以减少请求也是一个明确的选择！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>让typecho支持table-of-contents</title>
      <link>https://phpgao.github.io/typecho_toc.html</link>
      <pubDate>Thu, 24 Jul 2014 08:28:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/typecho_toc.html</guid>
      <description>什么是toc? [toc]
 table of contents 即文章目录
 toc有什么用  废话，你说目录有啥用，方便查找呗
 使用typecho的TX，一定会一点markdown吧，在文章中如果出现##this&#39;s h2 tag##，会被程序转换为
&amp;lt;h2&amp;gt;this&#39;s h2 tag&amp;lt;/h2&amp;gt; 一个h标签就好比一本书的各个章节，如果我们能把他们清点一下，组成一个目录输出，岂不是妙哉！
TOC如何使用 简单到不能再简单，在你想插入目录的地方放一个[toc]或[TOC]即可(推荐大写)！
 [TOC]必须处于顶格
 typecho中的markdown typecho的源代码中已经使用了激进的MarkdownExtraExtended类来转化md文件，为什么说他很激进呢？因为他扩展了标准的markdown，添加了很多个性化的语法，如直接给元素添加id或者class，还有脚注、缩写词等，用起来确实很爽！但需要注意的是：太多的非标准语法可能会带来移植性差的问题
具体的语法参考请看这里php Markdown Extra
如何使typecho支持toc 要使typecho支持toc需要替换位于源程序中的/wwwroot/var/文件夹下的MarkdownExtraExtended.php 为 MarkdownExtraExtended.php
原理 这个文件的作用就是为typecho提供md2html的作用，我修改了MarkdownExtraExtended类的__construct方法，为block_gamut数组添加了 doToc 处理模块，并把优先级降到最低。
转换细节位于doToc与_doToc_callback中，在此不作赘述。
不完美的地方  要是能加入一个锚点之间平滑滚动的效果就更完美了，改天写个插件弄一弄 在首页也能看到目录，改天看看源代码研究一下，看能不能解决 希望后台加一个选项，自动生成目录，这个比较麻烦，以后看情况解决  </description>
    </item>
    
    <item>
      <title>单引号和双引号的区别及用法</title>
      <link>https://phpgao.github.io/php_quotation_marks.html</link>
      <pubDate>Tue, 22 Jul 2014 08:07:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_quotation_marks.html</guid>
      <description>&lt;p&gt;双引号，单引号问题自古以来一直处在混沌状态，不懂的人觉得没啥区别，懂的人貌似也说不出来啥区别，其实区别还是有很多，转给大家看看，自己也留一份参考&lt;/p&gt;
&lt;p&gt;转自&lt;a href=&#34;http://blog.sina.com.cn/s/blog_706476980100xapp.html&#34;&gt;http://blog.sina.com.cn/s/blog_706476980100xapp.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1.单引号和双引号都可以作为字符串的开始符和关闭符，并且只能‍同一种单或者双引号来定义开始和结束；单引号之间的字符都被认为是字符，即使是转义符\和变量符$,例外的是\’标识单引号。
2.双引号之间的字符是需要php解析的，包括$,\，{都保留了php赋予的特殊含义。
3.&amp;quot; &amp;ldquo;双引号里面的字段会经过编译器解释，然后再当作HTML代码输出；而&#39; &amp;lsquo;单引号里面的不进行解释，直接输出。
例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$abc=&#39;my name is tome&#39;;
echo $abc //结果是:my name is tom
echo &#39;$abc&#39; //结果是:$abc
echo &amp;quot;$abc&amp;quot; //结果是:my name is tom
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;特别在使用MYSQL语句的时候，双引号和单引号的用法让新手不知所措，在这里，举个例子，来进行说明。
假设查询条件中使用的是常量，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;select    *    from    abc_table where user_name=&#39;abc&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;SQL语句可以写成:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SQLstr = &amp;quot;select    *    from abc_table where user _name= &#39;abc&#39;&amp;quot; ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;假设查询条件中使用的是变量，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$user_name = $_REQUEST[&#39;user_name&#39;]; //字符串变量
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$user=array (&amp;quot;name&amp;quot;=&amp;gt; $_REQUEST[&#39;user_name‘,&amp;quot;age&amp;quot;=&amp;gt;$_REQUEST[&#39;age&#39;];//数组变量
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;SQL语句就可以写成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SQLstr = &amp;quot;select    *    from abc_table where user_name = &#39; &amp;quot; . $user_name . &amp;quot; &#39; &amp;quot;;
SQLstr = &amp;quot;select * from abc_table where user_name = &#39; &amp;quot; . $user[&amp;quot;name&amp;quot;] . &amp;quot; &#39; &amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对比一下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SQLstr=&amp;quot;select * from abc_table where user_name = &#39; abc &#39; &amp;quot; ;
SQLstr=&amp;quot;select * from abc_table where user_name =&#39; &amp;quot; . $user _name . &amp;quot; &#39; &amp;quot;;
SQLstr=&amp;quot;select * from abc_table where user_name =&#39; &amp;quot; . $user[&amp;quot;name&amp;quot;] . &amp;quot; &#39; &amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;SQLstr可以分解为以下3个部分:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1：&amp;quot;select * from table where user_name = &#39; &amp;quot; //固定SQL语句 
2：$user //变量 
3：&amp;quot; &#39; &amp;quot;
1,2,3部分字符串之间用&amp;quot;.&amp;quot; 来连接
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>正则表达式教程</title>
      <link>https://phpgao.github.io/regex_abc.html</link>
      <pubDate>Tue, 22 Jul 2014 07:51:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/regex_abc.html</guid>
      <description>&lt;h1 id=&#34;正则表达式入门&#34;&gt;正则表达式入门&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;概念&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;字符是计算机软件处理文字时最基本的单位，可能是字母，数字，标点符号，空格，换行符，汉字等等。字符串是0个或更多个字符的序列。文本也就是文字，字符串。
正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;支持&#34;&gt;支持&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;在最近的六十年中，正则表达式逐渐从模糊而深奥的数学概念，发展成为在计算机各类工具和软件包应用中的主要功能。不仅仅众多UNIX工具支持正则表达式，近二十年来，在WINDOWS的阵营下，正则表达式的思想和应用在大部分 Windows 开发者工具包中得到支持和嵌入应用！从正则式在Microsoft Visual Basic 6 或 Microsoft VBScript到.NET Framework中的探索和发展，WINDOWS系列产品对正则表达式的支持发展到无与伦比的高度，几乎所有 Microsoft 开发者和所有.NET语言都可以使用正则表达式。如果你是一位接触计算机语言的工作者，那么你会在主流操作系统（*nix[Linux, Unix等]、Windows、HP、BeOS等）、主流的开发语言（PHP、C#、Java、C++、VB、Javascript、Ruby以及python等）、数以亿万计的各种应用软件中，都可以看到正则表达式优美的舞姿。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上内容引自百度百科&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>Python程序监控脚本</title>
      <link>https://phpgao.github.io/check_running_python.html</link>
      <pubDate>Tue, 22 Jul 2014 06:00:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/check_running_python.html</guid>
      <description>有些软件虽然卖的很贵，但是稳定性还是让人很无语，经常莫名其妙的崩溃，生产服务器怎么能允许这种事情发生！
一个监控程序运行的就这样诞生了，程序Python 2.7
思路很简单，先写一个监控的函数，判断是否在运行，然后循环调用N次，直到运行成功，实在不行，就发个通知或者记录下来
难点在于如何判断进程在运行。
思路也很简单，主要用到了这两个方法
 os.popen os.system  他们两个都可以直接运行cmd或者shell中的命令，但是前者会返回输出的内容，可以做进一步的处理
而后者只是执行，并把结果打印出来。
下面是程序，注释已经很清晰了
#coding=utf-8 &amp;#34;&amp;#34;&amp;#34; To check program if it is running @author PHPergao @time 2014-7-22 &amp;#34;&amp;#34;&amp;#34; import re import os import time import urllib2 import urllib flag = 1 #check function def checkhct(): #tasklist也可换成linux下打印所有进程的命令 ps aux for line in os.popen(&amp;#39;tasklist&amp;#39;).readlines(): #判断用正则更准确，也可以使用find或者index判断 pattern = re.compile(r&amp;#39;qq.*&amp;#39;, re.I) match = pattern.match(line) if(match): return True return False #repeat 3 times for x in xrange(0,3): if(checkhct() == False): print &amp;#39;error&amp;#39; #程序路径 os.</description>
    </item>
    
    <item>
      <title>西安的羽毛球馆汇总</title>
      <link>https://phpgao.github.io/xian_badminton_court.html</link>
      <pubDate>Sat, 19 Jul 2014 15:09:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/xian_badminton_court.html</guid>
      <description>&lt;p&gt;西安市羽毛球场馆目录&lt;/p&gt;
&lt;p&gt;从百度贴吧转来的，有些信息不全，希望知道的TX做个补充&lt;/p&gt;
&lt;p&gt;老高一般在西稍门江虹打球，欢迎交流！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;石羊农庄羽羽毛球馆
球馆地址：雁翔路石羊农庄内（理工大学新校区南）
球馆概况：塑胶地面 12片场地
联系电话：85507505&lt;/li&gt;
&lt;li&gt;老江虹羽羽毛球馆
球馆地址：西稍门外十字西100米
球馆概况：龙骨木地板 12片场地
联系电话：84260099&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>IOScydia源推荐</title>
      <link>https://phpgao.github.io/ioscydia.html</link>
      <pubDate>Sat, 19 Jul 2014 13:32:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ioscydia.html</guid>
      <description>转自手机中国论坛
apt.178.com&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;178第一中文源 我个人是推荐大家用这个的。。功能很多很强大
cydia.51ipa.com&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-很著名的51国产源。
cydia.xsellize.com&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;必备的源~
www.sinfuliphonerepo.com&amp;mdash;-大量PJ软件源。
cydia.clezz.com&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-大量PJ软件源。
cy.sosiphone.com&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-PJ软件源。
kuaidial.googlecode.com/svn/deb&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-软件kuaidial的官方源。
cydia.myrepospace.com/wi-inputmethod&amp;mdash;&amp;mdash;&amp;mdash;-WI输入法官方源
cydia.myrepospace.com/wiim&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;WI输入法官方源
i.danstaface.net/deb&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-下载vWallpaper官方源
iphonedelivery.advinux.fr/cydia&amp;mdash;&amp;mdash;&amp;ndash;下载iphonedelivery短信回执官方源
cydia.sogou.com&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;搜狗输入法官方源
mi.baidu.com&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;百度输入法官方源
DownLoad.voicecloud.cn/Cydia/&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;讯飞语音输入法官方源
beta.notifiedapp.com&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;下载Notified Pro 官方源
cydia.myrepospace.com/pw5a29ip4&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;Temperaturization 官方源
apt.25pp.com&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- pp助手官方源</description>
    </item>
    
    <item>
      <title>netbeans开启xdebug</title>
      <link>https://phpgao.github.io/netbeans_xdebug.html</link>
      <pubDate>Fri, 18 Jul 2014 04:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/netbeans_xdebug.html</guid>
      <description>一直在用everedit做开发，今天开始高大上，用一下netbeans
安装   在netbeans下载页面找到PHP版的netbeans，下载下来并安装，表忘了JRE也要装的
  在xdebug下载页面下载对应PHP版本的xdebug，然后解压至php目录下的ext目录下，同时新建d:\xdebug文件夹
  配置 PHP.INI 在phpinfo()页面中找到INI文件，在文件最后加入以下代码
;注意：我们的版本号可能不同zend_extension=&amp;quot;ext\php_xdebug-2.2.5-5.4-vc9.dll&amp;quot; [Xdebug];是否开启自动跟踪xdebug.auto_trace= On;是否开启异常跟踪xdebug.show_exception_trace= On;是否开启远程调试自动启动xdebug.remote_autostart= On;是否开启远程调试xdebug.remote_enable= On;允许调试的客户端IP;xdebug.remote_host= 192.168.1.1;远程调试的端口（默认9000）xdebug.remote_port=9000;调试插件dbgpxdebug.remote_handler=dbgp;是否收集变量xdebug.collect_vars= On;是否收集返回值xdebug.collect_return= On;是否收集参数xdebug.collect_params= On;跟踪输出路径xdebug.trace_output_dir=&amp;quot;d:\xdebug&amp;quot;;是否开启调试内容xdebug.profiler_enable=On;调试输出路径xdebug.profiler_output_dir=&amp;quot;d:\xdebug&amp;quot;;调试的域名xdebug.remote_host=localhost 修改以后重启服务器，看看有没有出现xdebug，如果出现了，那就成功了一大半
netbeans 设置的地方在tool-&amp;gt;option里找到debug标签，在这里可以修改PHP.EXE的路径，还有调试的工具和端口号等。
注意  如果你用的远程调试，务必打开xdebug.remote_enable 如果你用的域名调试，那么请修改xdebug.remote_host为你的域名，不要忘了加引号，不用带http:// 如果总是显示等待xdebug，那么就换一个web浏览器试试，在tool-&amp;gt;option-&amp;gt;general里可以找到 如果还不行，请留言，老高和你一起搞！  调试 哈哈，这还用讲吗？上个图</description>
    </item>
    
    <item>
      <title>php-bbcode过滤</title>
      <link>https://phpgao.github.io/bbcode-filter.html</link>
      <pubDate>Wed, 16 Jul 2014 06:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/bbcode-filter.html</guid>
      <description>BBCODE，即BB代码，属于轻量级标记语言（Lightweight Markup Language）的一种，如字面上所显示的，它主要是使用在BBS、论坛、Blog等网络应用上。BBCode最初由Ultimate Bulletin Board讨论区系统发展出来，因此常见UBB代码的称呼。BBCode的语法通常为[标记]这种形式，即语法左右用两个中括号包围，以作为与正常文字间的区别。系统解译时遇上中括号便知道该处是BBcode，会在解译结果输出到客户端时转换成最为通用的HTML语法。
要过滤他有两个思路，一个是先转化为html，再用strip_tags即可，下面是具体函数
&amp;lt;?phpfunction bb_parse($string){$tags = &#39;b|i|size|color|center|quote|url|img&#39;;while (preg_match_all(&#39;`\[(&#39; . $tags . &#39;)=?(.*?)\](.+?)\[/\1\]`&#39;, $string, $matches)){foreach ($matches[0] as $key =&amp;gt; $match) {list($tag, $param, $innertext) = array($matches[1][$key],$matches[2][$key],$matches[3][$key]);switch ($tag) {case &#39;b&#39;:$replacement = &amp;quot;&amp;lt;strong&amp;gt;$innertext&amp;lt;/strong&amp;gt;&amp;quot;;break;case &#39;i&#39;:$replacement = &amp;quot;&amp;lt;em&amp;gt;$innertext&amp;lt;/em&amp;gt;&amp;quot;;break;case &#39;size&#39;:$replacement = &amp;quot;&amp;lt;span style=\&amp;quot;font-size: $param;\&amp;quot;&amp;gt;$innertext&amp;lt;/span&amp;gt;&amp;quot;;break;case &#39;color&#39;:$replacement = &amp;quot;&amp;lt;span style=\&amp;quot;color: $param;\&amp;quot;&amp;gt;$innertext&amp;lt;/span&amp;gt;&amp;quot;;break;case &#39;center&#39;:$replacement = &amp;quot;&amp;lt;div class=\&amp;quot;centered\&amp;quot;&amp;gt;$innertext&amp;lt;/div&amp;gt;&amp;quot;;break;case &#39;quote&#39;:$replacement = &amp;quot;&amp;lt;blockquote&amp;gt;$innertext&amp;lt;/blockquote&amp;gt;&amp;quot; .</description>
    </item>
    
    <item>
      <title>markdown语法简介</title>
      <link>https://phpgao.github.io/markdown_usage.html</link>
      <pubDate>Wed, 16 Jul 2014 03:08:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/markdown_usage.html</guid>
      <description>&lt;p&gt;最近把之前的文章都用markdown重写了一遍&lt;/p&gt;
&lt;p&gt;之前寄希望于md自动转换，可惜转换后的格式惨不忍睹，同时发现我写得的文章也是惨不忍睹 ::&amp;gt;_&amp;lt;::&lt;/p&gt;
&lt;p&gt;下面简单写一下md的语法&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>webkit研究(1)</title>
      <link>https://phpgao.github.io/webkit.html</link>
      <pubDate>Tue, 15 Jul 2014 06:36:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/webkit.html</guid>
      <description>&lt;h2 id=&#34;web-browser-diy&#34;&gt;Web Browser DIY&lt;/h2&gt;
&lt;p&gt;此文是希望使用开源软件打造一个自己专属的webkit内核浏览器！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP所有函数列表</title>
      <link>https://phpgao.github.io/php_function_all.html</link>
      <pubDate>Tue, 15 Jul 2014 01:30:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_function_all.html</guid>
      <description>&lt;p&gt;说所有函数有点夸张，有错误请指正！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>现在都用md，咱也不落后</title>
      <link>https://phpgao.github.io/use_markdown.html</link>
      <pubDate>Thu, 10 Jul 2014 09:09:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/use_markdown.html</guid>
      <description>markdown是个好东西！让我们可以集中精力去写文章，提高文章质量，不过有几个方面还是值得吐槽的：
 超链接的target属性不能自定义 在WP中插入图片太麻烦 没有很好的支持或者支持标准不一 待补充  推荐一个好工具：stackedit
还有他的升级版：stackedit-beta
2014年10月19日补充：
markdown标准语法请参考http://commonmark.org</description>
    </item>
    
    <item>
      <title>thinkphp验证码不显示</title>
      <link>https://phpgao.github.io/thinkphp_verify.html</link>
      <pubDate>Thu, 10 Jul 2014 09:02:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/thinkphp_verify.html</guid>
      <description>&lt;p&gt;今天解决了一个验证码不显示的问题，值得大家注意&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP面向对象的那些事儿</title>
      <link>https://phpgao.github.io/php_ob.html</link>
      <pubDate>Thu, 10 Jul 2014 07:03:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_ob.html</guid>
      <description>&lt;p&gt;PHP的面向对象在进入5版本后得到了加强，很多好用的特性都得到了支持。下面总结了一些开发时用到的简单的概念，希望对你有帮助&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>周鸿祎：给那些仍旧在公司混日子的人</title>
      <link>https://phpgao.github.io/end_messup.html</link>
      <pubDate>Wed, 09 Jul 2014 05:48:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/end_messup.html</guid>
      <description>  我自己当年，无论我在方正给国家打工，还是我在雅虎给外国人打工，我都跟别人最大的不一样，我从来不觉得我在给他们打工，我真的可能是很有自信的人，我觉得我在为自己干。因为我干任何一件事我首先考虑的是，我通过干这件事我能学到什么东西，学到的东西是别人剥夺不走的，客观上可能给公司创造了价值。
  一件事交给我我应付一下，很容易应付，应付完了之后不觉得是在浪费生命吗？一件事你可以把它做到 60 分，你可以做的很轻松，做完了你每天重复每天干三个小时活就完了，然后你天天上班没事，然后你回家三十亩地一头牛老婆孩子热炕头，但你怎么进步呢？人的进步离开了学校之后，学习不再是上课也不是读书，通过你在工作中通过你做事情做项目积累自己的经验，跟很多人打交道。因为我有不服输的性格，再普通的事我要做的比别人好，大家做的很普通我要做的跟大家不一样，要做到超出大家想象要花很多时间很多努力，但我最后发现我的收获最大的，因为我下了功夫，你的收获和你的投入是成正比的。
  如果你混日子，对不起，实际上你是混自己，在很多大的公司混的很多，你能黑老板多少钱吗？你一年年薪 10 万，中低层收入你在单位混 10 年也就混老板 100 万，对很多公司来说有人混我 100 万对公司伤害不了哪去，可是你十年不好好工作，荒废了十年，十年可能突然有一天公司倒闭了，或者发现你这个混混把你开掉了，你怎么办呢？你觉得你有竞争力吗？这个社会除非你有一个好爸爸，或者你有一个家族，这个不在咱们考虑之列，这不是我的哲学。
  你只要是白手打天下，你最后发现在社会上，这个社会越来越公正，我认为机会还是很多，你不要天天去愤青，去骂别人，至少有了互联网有了 IT，你看丁磊、马化腾、李彦宏都是平头百姓，他们在这个行业能成功，说明什么？说明只要你努力你也有机会成功，百度、谷歌还有 QQ 的很多员工，我们不提李彦宏，不提大佬们。他们公司很多员工参与这件事也很成功，有很多在北京买车、买房有成就感，这些东西靠什么？还是靠你能力的积累。
  我觉得在公司，真不喜欢这个公司，不喜欢老板，赶快辞职，一分钟也别见到他，我就这个风格。何必为了老板的错误耗费自己的生命，如果你今天决定你又不离开在公司做工作，我觉得你应该把工作做好。有人说有几种问题，我有个性我不爱干这个，我说大哥，个性是成功人士的专利，你成功你当然觉得有个性，别人看着你，你没有成功之前个性能换房子吗？如果个性能换房子，我比你有个性，我们全家有个性，但它换不了一个房子。
  </description>
    </item>
    
    <item>
      <title>adb,fastboot常用命令及刷机技巧</title>
      <link>https://phpgao.github.io/adb.html</link>
      <pubDate>Thu, 03 Jul 2014 01:43:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/adb.html</guid>
      <description>&lt;p&gt;Google最近发布了Android L，我也按捺不住动手尝尝鲜，不过刷机工具我不是很喜欢，还是自己动手吧！&lt;/p&gt;
&lt;p&gt;Nexus5最近火了，先是MIUI，又是FLYME，CM,OMNI也很给力，现在又是Android L，大家都在抢夺4.4.*的制高点， 而五太子的开源特性正好可以为ROM的移植打好基础，所以各大ROM商都加入了此行列。 此篇讲的内容是Android Debug Bridge（简称adb）的使用方法，学会它可以让你的刷机工作事半功倍！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何下载chrome的crx文件</title>
      <link>https://phpgao.github.io/chrome_crx.html</link>
      <pubDate>Sun, 29 Jun 2014 11:01:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/chrome_crx.html</guid>
      <description>首先必须知道需要下载的应用的地址
https://chrome.google.com/webstore/detail/bfbmjmiodbnnpllbbbfblcplfjjepjdn ID为最后面的 bfbmjmiodbnnpllbbbfblcplfjjepjdn
然后计算出新的地址，注意下面地址的中文
https://clients2.google.com/service/update2/crx?response=redirect&amp;amp;x=id%3D这里这里%26uc  将中文替换为ID
https://clients2.google.com/service/update2/crx?response=redirect&amp;amp;x=id%3Dbfbmjmiodbnnpllbbbfblcplfjjepjdn%26uc 把这个地址用IE新窗口打开，就可以下载了</description>
    </item>
    
    <item>
      <title>(转)UBUNTU之SSH登陆认证慢的解决办法</title>
      <link>https://phpgao.github.io/ubuntu_slow_ssh_authorize.html</link>
      <pubDate>Thu, 26 Jun 2014 14:56:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ubuntu_slow_ssh_authorize.html</guid>
      <description>步骤一 关闭ssh的gssapi认证
vi /etc/ssh/ssh_config 注释掉如下两行
GSSAPIAuthentication yes GSSAPIDelegateCredentials no  步骤二 关闭ssh的UseDNS
vi /etc/ssh/sshd_config  注：ubuntu的sshd_config文件没有UseDNS参数,而据我了解,其它类*NIX、*BSD操作系统的sshd_config都有UseDNS参数，且它们缺省都是&amp;quot;UseDNS yes&amp;quot;，那估计ubuntu的sshd_config虽然没有UseDNS，那它缺省也是&amp;quot;UseDNS yes&amp;quot;了
于是，在sshd_config末尾处插入如下行
UseDNS no  然后执行指令&amp;quot;/etc/init.d/ssh restart&amp;quot;，重启ssh服务，配置生效
经测试，使用此方法后，ubuntu的认证时间大大缩短，原来其登录认证一般耗时在10秒以上15秒左右，有些时候甚至达到20多秒到30秒左右，而经过此修改，ubuntu的登录认证时间将会缩短在3秒以内。</description>
    </item>
    
    <item>
      <title>在thinphp的模板中使用U方法传递参数</title>
      <link>https://phpgao.github.io/thinkphp_u_function.html</link>
      <pubDate>Thu, 26 Jun 2014 03:12:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/thinkphp_u_function.html</guid>
      <description>在模板里生成URL如果需要用到模板里的参数时，使用下面代码即可
{:U(&#39;Index/getInfo&#39;,array(&#39;userid&#39;=&amp;gt;$userid))} 如果变量有嵌套，那就要用&amp;quot;[]&amp;ldquo;代替模板中的&amp;rdquo;.&amp;quot;
{:U(&#39;Index/getInfo&#39;,array(&#39;userid&#39;=&amp;gt;$user[&#39;id&#39;]))}  </description>
    </item>
    
    <item>
      <title>call-recorder通话录音文件命名格式</title>
      <link>https://phpgao.github.io/callrecorder.html</link>
      <pubDate>Mon, 23 Jun 2014 01:46:24 +0000</pubDate>
      
      <guid>https://phpgao.github.io/callrecorder.html</guid>
      <description>手机装的是call recorder，每次整理录音的时候发现默认的文件命名规则简直是乱的逆天 还好可以自定义 文件格式改为
%type%/%time%_[%name%]_[%number%]  时间格式改为
yyyy-MM-dd_HH-mm-ss  解决！ ps.这个软件真心很不错，推荐购买正版！下面是链接
CallRecorder购买链接</description>
    </item>
    
    <item>
      <title>误删了phpwind下data-bbscache怎么办？</title>
      <link>https://phpgao.github.io/phpwin_bbscache.html</link>
      <pubDate>Sun, 22 Jun 2014 05:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/phpwin_bbscache.html</guid>
      <description>今天手残，把上述文件夹给删了，而缺没有备份，网页直接打不开了 网上的回答五花八门，有登陆后台重建缓存的，有分析install.php重建文件夹的。。。各种无语啊 还是自己想的办法好：
自己在本地重建建立一个一模一样的phpwind，然后把生成的bbscache文件夹覆盖回去即可！
难点在于如何搭建一模一样的phpwind，主要是数据库的用户名密码和域名，还有后台管理的用户名密码，讲一下步骤：
 先在host里绑定域名www.abc.com到127.0.0.2 在Apache或其他服务器新建虚拟主机127.0.0.2，别名设为www.abc.com 把俺炸U那个文件拷贝进去，安装吧~  </description>
    </item>
    
    <item>
      <title>解决Ubuntu下ssh无法启动</title>
      <link>https://phpgao.github.io/ubuntu_ssh.html</link>
      <pubDate>Sat, 21 Jun 2014 15:25:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ubuntu_ssh.html</guid>
      <description>安装完Ubuntu后自然需要使用ssh远程管理，但是sudo apt-get install openssh-server后虽然安装成功，但是总是提示
 Unknown job: ssh 百度之，未解决 google之，
 运行
sudo /usr/sbin/sshd 提示
 Missing privilege separation directory: /var/run/sshd (缺少权限分离目录)
 然后运行
sudo mkdir /var/run/sshdsudo /usr/sbin/sshdnetstat -nlt 应该能看到22端口已经启用！</description>
    </item>
    
    <item>
      <title>Centos源设置</title>
      <link>https://phpgao.github.io/repo_for_centos.html</link>
      <pubDate>Wed, 18 Jun 2014 06:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/repo_for_centos.html</guid>
      <description>起因 刚刚装好的centos网卡也配好了，就是解析不了mirror.centos.org，估计是DNS的问题，索性换了163源。
网易源地址
使用帮助
方法 很简单，注意备份即可
cd /etc/yum.repos.d mv CentOS-Base.repo CentOS-Base.repo.backup wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS5-Base-163.repo #centos5 wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS6-Base-163.repo #centos6 yum clean all yum makecache 意外 在执行update的时候又报错
 GPG key retrieval failed: [Errno 12] Timeout on http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-6: (28, &amp;lsquo;connect() timed out!&#39;)
 貌似需要在源服务器验证RPM的合法性 本办法，只好祭出终极武器，host大法!
vi /etc/hosts 加入 74.53.10.146 mirror.centos.org 解决！
阿里源 阿里的速度也不错！
repo下载地址： http://mirrors.aliyun.com/repo/
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup # 根据系统版本下载对应版本的repo wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo 或 curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo # 更新缓存 yum clean all yum makecache </description>
    </item>
    
    <item>
      <title>如何防止你的网站被百度转码</title>
      <link>https://phpgao.github.io/baidu_siteapp_forbid.html</link>
      <pubDate>Wed, 18 Jun 2014 03:40:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/baidu_siteapp_forbid.html</guid>
      <description>&lt;p&gt;现在只要新一点的HTML页面都会支持响应式，但是在移动端百度会把本来整齐的页面强行转码成他所需要的格式来呈现，简直是丑爆了！而且URL也会变的很长，简直对不起我的伪静态！！最近UC（也可以说是阿里，更可以说是马大帅）也开始搞这个事儿了  &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux经典面试题</title>
      <link>https://phpgao.github.io/linux_interview_questions.html</link>
      <pubDate>Wed, 18 Jun 2014 02:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/linux_interview_questions.html</guid>
      <description>Linux挂载Winodws共享文件夹
  查看http的并发请求数及其TCP连接状态：
  用tcpdump嗅探80端口的访问看看谁最高
  统计/var/log/下文件个数
  查看当前系统每IP连接数
  shell下32位随机密码生成
  统计出apache的access.log中访问量最多的5个IP
  如何查看二进制文件的内容
  ps aux 中VSZ代表什么意思 RSS代表什么
  检测并修复/dev/hda5
  Linux开机启动顺序
  符号链接和硬链接的区别
  保存当前磁盘分区的分区表
  手动安装grub
  改内核参数
  在1-39内取随机数
  限定apache每秒钟连接数为1,峰值为3
  FTP主动与被动模式
  显示/etc/inittab中以#开头,且后面跟一个或多个空白字符,而后又跟了任意非空白字符的行;
  显示/etc/inittab中包含了:一个数字:(即两个冒号中间一个数字)的行;
  怎么把自己写的脚本添加到服务里面，即可以使用service命令来调用
  写一个脚本，实现批量添加20个用户，用户名为user1-20，密码为user后面跟5个随机字符
  写一个脚本，实现判断192.</description>
    </item>
    
    <item>
      <title>Shell中各种奇怪的变量</title>
      <link>https://phpgao.github.io/linux_puzzle.html</link>
      <pubDate>Wed, 18 Jun 2014 02:34:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/linux_puzzle.html</guid>
      <description>这些变量是随系统运行而变化的，灵活使这些变量可简化我们的操作和更好地控制bash shell的行为。
$# 是传给脚本的参数个数 $0 是脚本本身的名字 $1 是传递给该shell脚本的第一个参数 $2 是传递给该shell脚本的第二个参数 $@ 是传给脚本的所有参数的列表 $* 是以一个单字符串显示所有向脚本传递的参数，与位置变量不同，参数可超过9个 $$ 是脚本运行的当前进程ID号 $? 是显示最后命令的退出状态，0表示没有错误，其他表示有错误 </description>
    </item>
    
    <item>
      <title>使用python模拟登陆腾讯微博</title>
      <link>https://phpgao.github.io/t_login.html</link>
      <pubDate>Mon, 16 Jun 2014 06:20:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/t_login.html</guid>
      <description>由于业务需要，研究了一下腾讯微博等登陆，下面分享一些经验给大家： 标题写的是腾讯微博的登陆，其实也可以隐身到腾讯旗下多个产品的登陆，比如QQ空间，webQQ等，想到这儿大伙是不是很激动呢？
[TOC]
表急，等我细细道来。
数据采集 有时候简单的数据不需要这么大费周折！使用某些语言自带的web工具也是可以的！下面我以Python为例：
分析登录过程 登录过程需要抓包，我是用的HttpWatch，大体步骤如下
第一步 手动登陆，抓包，记录登录过程  当输入完账号后想服务器请求验证码 等级登陆按钮后将登录信息发送至认证服务器，实现第一次认证 服务器返回登陆成功信息，其中包含最终URL 第二次认证，获取腾讯微博的cookie  第二步 伪造登录过程  获取验证码 根据验证码计算出加密后的密码以及其他信息，发送GET请求至认证服务器 根据返回URL获取最终cookie  工作难点 本文假设读者理解http协议及数据包的发送原理，以此为基础，工作的难点就集中在数据的准备上。
 密码的加密原理 cookie的处理 header的UA及refer的一致性  密码加密算法 以下提取自登录页面的c_login_2.js文件
function getEncryption(password, uin, vcode) {var str1 = hexchar2bin(md5(password));var str2 = md5(str1 + uin);var str3 = md5(str2 + vcode.toUpperCase());return str3}if (b == &amp;quot;login&amp;quot;) {d.u = encodeURIComponent(pt.plogin.at_accout);d.verifycode = $(&amp;quot;verifycode&amp;quot;).value;if (pt.plogin.needShowNewVc &amp;amp;&amp;amp; pt.</description>
    </item>
    
    <item>
      <title>google被封的几个解决办法</title>
      <link>https://phpgao.github.io/higoogle.html</link>
      <pubDate>Fri, 13 Jun 2014 08:03:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/higoogle.html</guid>
      <description>唉。。。功夫网大开杀戒了。P民如何应对，请看下面的网址
http://www.googlestable.com/
https://s3-ap-southeast-1.amazonaws.com/google.cn/index.html
http://ls.ganquancun.com/ggip/
http://www.hotbot.com/
http://www.dogpile.com/
https://www.projecth.us/sources
这篇文章教你怎么配置go-agent代理*翻**q墙，推荐一下，点我</description>
    </item>
    
    <item>
      <title>记一次FFMPEG的安装</title>
      <link>https://phpgao.github.io/yum_install_ffmpeg.html</link>
      <pubDate>Fri, 13 Jun 2014 02:14:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/yum_install_ffmpeg.html</guid>
      <description>下载源代码 现在都不用svn了，学学git吧
git clone git://source.ffmpeg.org/ffmpeg.git configure 在执行./configure的时候，可能会提示没有安装yasm，那么执行”yum install -y yasm“即可。
yum install -y yasm./configure make 执行make，就是编译整个ffmpeg项目了，会生成一些二进制文件，例如：ffplay、ffserver、ffmpeg、ffprobe!
makeinstall 执行make install时候，会把编译生成的.a归档复制到/usr/local/lib下!</description>
    </item>
    
    <item>
      <title>mysql的多表删除</title>
      <link>https://phpgao.github.io/mysql_multitable_deletion.html</link>
      <pubDate>Thu, 12 Jun 2014 06:30:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mysql_multitable_deletion.html</guid>
      <description>mysql默认是禁用多表删除语句的，之前的做法都是先把条件缓存，然后逐条执行
delete from a where a.xxx in (123123,123123);delete from b where b.xxxx in (123123,123123); 如果写成下面这种绝对是错误的！
delete * from a,b where xxxx in ... 今天突然发现原来mysql也是可以一条sql删除多表数据的，下面来分析一下 多表删除其实思路还是比较简单的，首先条件就是多个表（一般就两个表，织梦的文章信息存在3个表里，删除起来很麻烦）有关联 其次，删除条件一般都是由关联的这一行组成的，也可能不是，没有关系，我们先写一个试试：
DELETE p.*, pp.* FROM pw_threads p, pw_tmsgs pp WHERE p.tid = pp.tid AND p.tid in(SELECT tid FROM pw_threads WHERE postdate&amp;gt;UNIX_TIMESTAMP(&#39;2014-06-12 00:00:00&#39;) and fid=136) 逻辑都通着，但是会报错
 You can&amp;rsquo;t specify target table &amp;lsquo;A&amp;rsquo; for update in FROM clause 原因是: In general, you cannot modify a table and select from the same table in a subquery.</description>
    </item>
    
    <item>
      <title>记一次goagent的设置</title>
      <link>https://phpgao.github.io/ga.html</link>
      <pubDate>Tue, 10 Jun 2014 06:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ga.html</guid>
      <description>##下载
项目地址: https://github.com/goagent/goagent
APP配置 到https://appengine.google.com/新建一个或多个app，注意记录下app的ID！
一个appid每天只有1G的流量
上传服务器端脚本 解压至某文件夹，此处假设为d:\app\goagent318\，然后进去server，运行uploader.bat批处理
按提示输入信息即可，可能会很慢。
多个appid请用’|’隔开，即回车键上面那个
貌似现在一个帐号能创建25个app，每天25G流量，够用了吧？
只要在服务器上部署成功，以后就不用管server文件夹了 :-D ，除非你又要添加新的app才会用到！
此步骤只是把goagent的服务器端部署到你的在线APP上，等待你去调用他，所以下一步就是配置本地的文件，以实现对接。
部署成功的标志是看到这里的https://appengine.google.com/应用都在running即可！
本地配置 难点在这一步，废话比较多，我就粘贴一下官网的教程吧
编辑local\proxy.ini，把其中appid = goagent中的goagent 改成你之前申请的应用的appid (用windows的记事本也可以） 如果要使用多个appid，appid之间用|隔开，如：appid1|appid2|appid3，每个appid必须确认上传成功才能使用 格式 如下：
[gae] appid = app-0|app-1|app-3|app-4 运行local下的goagent.exe，测试一下配置是否成功！推荐迅雷的代理测试
高级技巧 修改goagent端口 你可以修改端口以达到分流的作用，比如，使用默认8087端口上网用，再建一个使用8089端口的goagent，然后使用这个端口下载东西或者什么的，只要端口不冲突，你就可以建立多个代理，以达到分流的目的！
怎么修改呢？
先结束goagent进程，复制一份出来命名goagent318-d，原来的那个叫goagent318-w，d means download,w means web! 还是修改那个proxy.ini，找到[listen]，应该在第一行，然后修改port = 8087为port = 8089，端口就改好了 讲appid按需分配给各个端口对应的程序，如我有十个app，给迅雷分5个，web分4个，再留一个备用！
在chrome中使用goagent 这个要用到SwitchySharp，怎么使用，自己百度吧！
goagent的GUI版本 这个挺不错的，方便小白使用，推荐下载绿色版！
围观地址：https://goagent.codeplex.com/
打造自己的网页代理 这个比较酷！不适用google，而是使用自己的网站做代理！只要你的主机在香港或者美国，就可以用PHP模拟成goagent的server端，然后就可以翻越GFW了
设置方法请参考
http://www.blogfeng.com/goagent-space-into-a-proxy-server-for-php.html
2015年1月12日更新：
 更新项目地址 fqrouter2已经停止更新 更好的翻墙方案 shadowsocks  </description>
    </item>
    
    <item>
      <title>用Python写了个日志清理的脚本</title>
      <link>https://phpgao.github.io/log_cleaner.html</link>
      <pubDate>Tue, 10 Jun 2014 03:56:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/log_cleaner.html</guid>
      <description>欢迎吐槽！
#! /usr/bin/env python# -*- coding: utf-8 -*-import os,time,shutilpath = os.getcwd()target_dir = []cal = []target_dir.append(&#39;/var/lib/mysql/log/&#39;)target_dir.append(&#39;/newlogs/&#39;)target_dir.append(&#39;/oldlogs/&#39;)#初始化删除文件名del_ext = [&#39;frm&#39;,&#39;MYD&#39;,&#39;MYI&#39;]#你要保留几天days_before = 5#初始化删除日期for x in xrange(days_before+1,days_before+30):cal.append(time.strftime(&#39;%Y_%m_%d&#39;,time.localtime(time.time() - x*24*3600)))#初始化删除文件名，使用笛卡尔积！fl = map(&#39;.&#39;.join, [[x,y] for x in cal for y in del_ext])#以日期命名的文件夹cal = []for x in xrange(days_before+1,days_before+30):cal.append(time.strftime(&#39;%Y-%m-%d&#39;,time.localtime(time.time() - x*24*3600)))fl += cal#获取文件扩展名def get_ext(filename):return filename.</description>
    </item>
    
    <item>
      <title>windows远程连接优化</title>
      <link>https://phpgao.github.io/win7_mstsc.html</link>
      <pubDate>Mon, 09 Jun 2014 08:55:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/win7_mstsc.html</guid>
      <description>工作需要必须使用mstsc(Microsoft terminal services client)连接生产服务器，之前因为不知什么原因，mstsc开始很卡，所以用了teamviewer一段时间，感觉还是不如mstsc稳定
但是win7的mstsc问题多多，一个一个说吧
总是新建进程 每次使用保存好的密码登陆后总是和上一次显示的桌面环境不一样，就好像注销了一样，每次都要在任务管理器里切换一回，很是麻烦，原因是mstsc新建了一个进程，导致了操作环境的初始化，按照老高的方法试试：
  运行mstsc时在后面加上 /admin，原理是直接接管控制台
 mstsc /admin   在目标机器上设置一下 这是由于远程桌面允许一个用户可以有多个远程会话，如果不想有这个效果，可以在目标机器运行gpedit.msc，然后进入组策略-计算机设置-管理模板-终端服务，设置限制终端服务用户到一个远程会话为启用即可。
  3.开始-管理工具-终端服务配制-设置
 连接 - RDP-TCP - 网卡 - 2个链接 服务器设置 - 限制用户使用一个会话 开始&amp;mdash;控制面板&amp;mdash;授权&amp;mdash;选择“每设备或每用户”&amp;mdash;否&amp;mdash;确定
 连接后操作很卡 原因在于从vista开始，微软在TCP/IP协议栈里新加了一个叫做Window Auto-Tuning的功能。这个功能本身的目的是为了让操作系统根据网络的实时性能（比如响应时间）来动态调整网络上传输的数据窗口的大小，从而达到实时优化网络性能的目的。但是，在某种情况下，这个功能反而会使远程桌面的响应变的非常的慢。解决办法如下：
开始-运行-输入
netsh interface tcp set global autotuninglevel=disabled 端口修改 端口3389表示亚历山大！换一个自己喜欢的数字吧，嫌麻烦的TX可以直接百度 mstsc端口修改工具
 打开“开始→运行”，输入&amp;quot;regedit&amp;quot;，打开注册表，进入以下路径：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds\tcp, 修改PortNamber值3389为3390。 打开[HKEY_LOCAL_MACHINE\SYSTEM\CurrentContro1Set\Control\Tenninal Server\WinStations\RDP\Tcp, 将PortNumber值3389为3390。 修改完毕，重启以下服务(控制面板中的服务中)： Microsoft Remote Desktop Connection 和 Remote Desktop Services UserMode Port Redirector 登陆方式[IP:3390] 部分转自网络！  </description>
    </item>
    
    <item>
      <title>python时间函数整理</title>
      <link>https://phpgao.github.io/python_time.html</link>
      <pubDate>Mon, 09 Jun 2014 02:44:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python_time.html</guid>
      <description>有一些是拷的，自己加了一点，大家凑活看吧
#-*- coding:utf-8 -*-import timeimport datetime#in python is float while in php is intcurrenttime = 1402244512.48print time.time()print time.ctime()print time.ctime(currenttime)print time.localtime()print type(time.localtime())print time.strftime(&#39;%Y-%m-%d&#39;,time.localtime(time.time()-3600*24))print time.strftime(&#39;%Y-%m-%d %H:%I:%S&#39;,time.localtime(time.time()))print time.strftime(&#39;%Y-%m-%d %H:%I:%S&#39;,time.gmtime(time.time()))currentstr = &#39;2013-08-21 17:05:01&#39;print time.strptime(currentstr,&#39;%Y-%m-%d %H:%I:%S&#39;)&#39;&#39;&#39;python中时间日期格式化符号：%y 两位数的年份表示（00-99）%Y 四位数的年份表示（000-9999）%m 月份（01-12）%d 月内中的一天（0-31）%H 24小时制小时数（0-23）%I 12小时制小时数（01-12）%M 分钟数（00=59）%S 秒（00-59）%a 本地简化星期名称%A 本地完整星期名称%b 本地简化的月份名称%B 本地完整的月份名称%c 本地相应的日期表示和时间表示%j 年内的一天（001-366）%p 本地A.</description>
    </item>
    
    <item>
      <title>Python标准库urllib2的使用细节</title>
      <link>https://phpgao.github.io/python_urllib.html</link>
      <pubDate>Thu, 05 Jun 2014 02:57:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/python_urllib.html</guid>
      <description>以下转自
http://blog.csdn.net/pleasecallmewhy/article/details/8925978
[TOC]
Python 标准库中有很多实用的工具类，但是在具体使用时，标准库文档上对使用细节描述的并不清楚，比如 urllib2 这个 HTTP 客户端库。这里总结了一些 urllib2 的使用细节。
Proxy 的设置 urllib2 默认会使用环境变量 http_proxy 来设置 HTTP Proxy。如果想在程序中明确控制 Proxy 而不受环境变量的影响，可以使用下面的方式
import urllib2enable_proxy = Trueproxy_handler = urllib2.ProxyHandler({&amp;quot;http&amp;quot; : &#39;http://some-proxy.com:8080&#39;})null_proxy_handler = urllib2.ProxyHandler({})if enable_proxy:opener = urllib2.build_opener(proxy_handler)else:opener = urllib2.build_opener(null_proxy_handler)urllib2.install_opener(opener) 这里要注意的一个细节，使用 urllib2.install_opener() 会设置 urllib2 的全局 opener 。这样后面的使用会很方便，但不能做更细粒度的控制，比如想在程序中使用两个不同的 Proxy 设置等。比较好的做法是不使用 install_opener 去更改全局的设置，而只是直接调用 opener 的 open 方法代替全局的 urlopen 方法。
Timeout 设置 在老版 Python 中，urllib2 的 API 并没有暴露 Timeout 的设置，要设置 Timeout 值，只能更改 Socket 的全局 Timeout 值。</description>
    </item>
    
    <item>
      <title>centos升级gcc至4.8</title>
      <link>https://phpgao.github.io/centos_gcc_update.html</link>
      <pubDate>Tue, 03 Jun 2014 08:17:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/centos_gcc_update.html</guid>
      <description>&lt;p&gt;webkitgtk+的编译要用到4.8+的GCC 人家ubuntu都有编译好的gcc。。。可怜我centos只能编译源代码了。。。&lt;/p&gt;
&lt;p&gt;废话不说，速度干活&lt;/p&gt;
&lt;h2 id=&#34;下载&#34;&gt;下载&lt;/h2&gt;
&lt;p&gt;先下载需要的GCC源码，&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://gcc.gnu.org/&#34;&gt;http://gcc.gnu.org/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;以gcc-4.8.3为例 先解压文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~
mkdir src
cd src
wget http://自己写吧
tar xf gcc-4.8.3.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;到这一步停下，还有软件包没有下载安装，难点重点就在这儿了，这三个软件包的安装顺序不能乱，而且安装后一个软件之前必须指定前面安装的路径，很麻烦！&lt;/p&gt;
&lt;p&gt;下载源代码可以执行gcc-4.8.3/contrib下的download_prerequisites脚本，即可自动下载，到时候也好一起编译&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ubuntu编译webkit</title>
      <link>https://phpgao.github.io/ubuntu_webkitgtk.html</link>
      <pubDate>Thu, 29 May 2014 08:50:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/ubuntu_webkitgtk.html</guid>
      <description>下载安装包：http://webkitgtk.org/使用下面命令压缩包
tar xvJf 安装依赖库：
apt-get install autoconf automake autotools-dev bison flex gperf glib-networking gtk-doc-tools libenchant-dev libgail-dev libgeoclue-dev libglib2.0-dev libgstreamer-plugins-base0.10-dev libgtk2.0-dev libicu-dev libjpeg62-dev libpango1.0-dev libpng12-dev libsoup2.4-dev libsqlite3-dev libtool libxslt1-dev libxt-dev 试试Configure一下
./configure 可能还不够，提示找不到 libwebp，找一下吧：
apt-cache search libwebplibwebp-dev - Lossy compression of digital photographic images.libwebp5 - Lossy compression of digital photographic images.libwebpdemux1 - Lossy compression of digital photographic images.libwebpmux1 - Lossy compression of digital photographic images.</description>
    </item>
    
    <item>
      <title>记一次centos最小安装</title>
      <link>https://phpgao.github.io/centos_minimal.html</link>
      <pubDate>Wed, 28 May 2014 03:52:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/centos_minimal.html</guid>
      <description>基本流程吧啊，以后可能会更新，以6.5为例：
下载安装必要文件，比如虚拟机virtualbox,vm等，还有镜像i386或者x86_64的，按需下载吧
设置虚拟机，开始安装，推荐使用全英文安装，速度和稳定性会好一点
完毕后网卡不会自动启动，需要手动开启
vi /etc/sysconfig/network-scripts/ifcfg-eth0DEVICE=eth0HWADDR=00:0C:29:64:A5:E3TYPE=EthernetUUID=ff171f7b-3bc5-465d-a5ba-287e200f6da6ONBOOT=yesNM_CONTROLLED=noBOOTPROTO=dhcp 然后
/etc/init.d/network start 现在看看ifconfig里有没有IP信息
有了IP就能上网了，下面就是各种yum了，有兴趣的TX可以执行一下这个优化脚本</description>
    </item>
    
    <item>
      <title>内存常识</title>
      <link>https://phpgao.github.io/memory_bank.html</link>
      <pubDate>Wed, 28 May 2014 01:51:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/memory_bank.html</guid>
      <description>逛淘宝店的时候看到的，记一下
内存有SD DDR和DDR2 DDR3之分，4种内存不能混用，拍前请确定自己的机器是用的什么内存，如果不能确定，可以用CPU-Z或者EVEREST这个软件检测一下！
打开软件后看”SPD”选项的”最大带宽”一栏!
SD类型PC-100是 SD 100PC-133是 SD 133DDR1类型PC-2100是DDR-266内存!PC-2700是DDR-333内存!PC-3200是DDR-400内存!DDR2类型PC2-3200是DDR2-400内存!不要和DDR1的弄混了！PC2-4200(有时可能是PC2-4300)是DDR2-533内存!PC2-5300是DDR2-667内存！PC2-6400是DDR2-800内存！DDR3类型PC3-8500是DDR3-1066内存！PC3-10600是DDR3-1333内存！以下是3代游戏版本和高频率：PC3-12800是DDR3-1600内存！PC3-15000是DDR3-1866内存！PC3-16000是DDR3-2000内存！ 如果不会查看请直接百度搜索CPU-Z下载，下载1.49版本以上的，解压缩运行CPU-Z，查看SPD项即可知道自己内存的信息，然后根据自己所需要的购买！</description>
    </item>
    
    <item>
      <title>linux-ip限制的两种设置方式</title>
      <link>https://phpgao.github.io/linux_ip.html</link>
      <pubDate>Tue, 27 May 2014 02:49:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/linux_ip.html</guid>
      <description>经常网络被攻击，最有效的方式就是在linux操作系统上直接限制ip访问，主要有两种方式设置
1.使用hosts.allow和hosts.deny来设置ip白名单和黑名单，/etc/目录下
优先级为先检查hosts.deny，再检查hosts.allow， 后者设定可越过前者限制， 例如： a.限制所有的ssh， 除非从218.64.87.0 - 127上来。 hosts.deny: in.sshd:ALL hosts.allow: in.sshd:218.64.87.0/255.255.255.128b.封掉218.64.87.0 - 127的telnet hosts.deny in.sshd:218.64.87.0/255.255.255.128c.限制所有人的TCP连接，除非从218.64.87.0 - 127访问 hosts.deny ALL:ALL hosts.allow ALL:218.64.87.0/255.255.255.128d.限制218.64.87.0 - 127对所有服务的访问 hosts.deny ALL:218.64.87.0/255.255.255.128其中冒号前面是TCP daemon的服务进程名称，通常系统 进程在/etc/inetd.conf中指定，比如in.ftpd，in.telnetd，in.sshd 其中IP地址范围的写法有若干中，主要的三种是： 1.网络地址--子网掩码方式： 218.64.87.0/255.255.255.02.网络地址方式（我自己这样叫，呵呵） 218.64.（即以218.64打头的IP地址） 3.缩略子网掩码方式，既数一数二进制子网掩码前面有多少个“1”比如： 218.64.87.0/255.255.255.0 -- 218.64.87.0/24设置好后，要重新启动# /etc/rc.d/init.d/xinetd restart# /etc/rc.d/init.d/network restart 2.使用iptables命令
单个IP的命令是iptables -I INPUT -s 80.241.219.171 -j DROP封IP段的命令是iptables -I INPUT -s 96.47.225.0/16 -j DROPiptables -I INPUT -s 96.</description>
    </item>
    
    <item>
      <title>http_build_query妙用</title>
      <link>https://phpgao.github.io/http_build_query.html</link>
      <pubDate>Wed, 21 May 2014 09:30:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/http_build_query.html</guid>
      <description>http_build_query这个函数可以很方便的构造一个请求所需要的参数。(不分GET,POST)
这个函数可以把一个数组转化为一串字符
栗子1：
&amp;lt;?php$data = array(&#39;foo&#39;=&amp;gt;&#39;bar&#39;,&#39;baz&#39;=&amp;gt;&#39;boom&#39;,&#39;cow&#39;=&amp;gt;&#39;milk&#39;,&#39;php&#39;=&amp;gt;&#39;hypertext processor&#39;);//第二个参数是分割使用的符号echo http_build_query($data) . &amp;quot;\n&amp;quot;;echo http_build_query($data, &#39;&#39;, &#39;&amp;amp;amp;&#39;);# foo=bar&amp;amp;baz=boom&amp;amp;cow=milk&amp;amp;php=hypertext+processor# foo=bar&amp;amp;amp;baz=boom&amp;amp;amp;cow=milk&amp;amp;amp;php=hypertext+processor?&amp;gt; 栗子二：
&amp;lt;?php$data = array(&#39;user&#39;=&amp;gt;array(&#39;name&#39;=&amp;gt;&#39;Bob Smith&#39;,&#39;age&#39;=&amp;gt;47,&#39;sex&#39;=&amp;gt;&#39;M&#39;,&#39;dob&#39;=&amp;gt;&#39;5/12/1956&#39;),&#39;pastimes&#39;=&amp;gt;array(&#39;golf&#39;, &#39;opera&#39;, &#39;poker&#39;, &#39;rap&#39;),&#39;children&#39;=&amp;gt;array(&#39;bobby&#39;=&amp;gt;array(&#39;age&#39;=&amp;gt;12,&#39;sex&#39;=&amp;gt;&#39;M&#39;),&#39;sally&#39;=&amp;gt;array(&#39;age&#39;=&amp;gt;8,&#39;sex&#39;=&amp;gt;&#39;F&#39;)),&#39;CEO&#39;);//第二个参数，如果数组没有键值，则自动添加键值echo http_build_query($data, &#39;flags_&#39;);?&amp;gt; 输出：
 user%5Bname%5D=Bob+Smith&amp;amp;user%5Bage%5D=47&amp;amp;user%5Bsex%5D=M&amp;amp;user%5Bdob%5D=5%2F12%2F1956&amp;amp;pastimes%5B0%5D=golf&amp;amp;pastimes%5B1%5D=opera&amp;amp;pastimes%5B2%5D=poker&amp;amp;pastimes%5B3%5D=rap&amp;amp;children%5Bbobby%5D%5Bage%5D=12&amp;amp;children%5Bbobby%5D%5Bsex%5D=M&amp;amp;children%5Bsally%5D%5Bage%5D=8&amp;amp;children%5Bsally%5D%5Bsex%5D=F&amp;amp;flags_0=CEO
 把上面的请求传给一个PHP文件处理，打印传递来的参数，会得到以下结果：
Array([_GET] =&amp;gt; Array([user] =&amp;gt; Array([name] =&amp;gt; Bob Smith[age] =&amp;gt; 47[sex] =&amp;gt; M[dob] =&amp;gt; 5/12/1956)[pastimes] =&amp;gt; Array([0] =&amp;gt; golf[1] =&amp;gt; opera[2] =&amp;gt; poker[3] =&amp;gt; rap)[children] =&amp;gt; Array([bobby] =&amp;gt; Array([age] =&amp;gt; 12[sex] =&amp;gt; M)[sally] =&amp;gt; Array([age] =&amp;gt; 8[sex] =&amp;gt; F))[flags_0] =&amp;gt; CEO)[_POST] =&amp;gt; Array()[_COOKIE] =&amp;gt; Array([PHPSESSID] =&amp;gt; 5u7l53inhrl5j1ojmn65ok4k44)[_FILES] =&amp;gt; Array()[GLOBALS] =&amp;gt; Array*RECURSION*) 很神奇吧！</description>
    </item>
    
    <item>
      <title>PHP缓冲研究</title>
      <link>https://phpgao.github.io/php_buffering.html</link>
      <pubDate>Wed, 21 May 2014 08:54:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_buffering.html</guid>
      <description>输出缓冲是个让人头大的问题，因为它不仅牵扯到web语言本身，浏览器自身的原因也会导致无内容输出。
所以，在输出前保险的做法是先输出4096个空白字符，然后再使用缓冲输出内容，这样就可以实现程序随时输出内容啦！
以下代码chrome，FF，IE，Safari，手机chrome，UCWEB 都测试通过，需要注意的是：
在网页最开始一定要输出足够多的字符来骗过浏览器 ob_flush,flush需要一起使用
&amp;lt;?php//以下几个函数作用于PHP及服务器的设置，一般不需要更改/*@apache_setenv(&#39;no-gzip&#39;, 1);@ini_set(&#39;zlib.output_compression&#39;, 0);@ini_set(&#39;implicit_flush&#39;, 1); //==ob_implicit_flush(1);*///检测是否开启缓冲if (ob_get_level() == 0) ob_start();//这里的数字可变 FF:1024 CHROME:0 IE:4096echo str_repeat(&#39; &#39; ,4096);//echo str_pad(&#39;&#39;,4096).&amp;quot;\n&amp;quot;;for ($i = 1; $i&amp;lt;=10; $i++){echo &amp;quot;Line $i&amp;lt;br&amp;gt;&amp;quot;;//ob_end_clean(); //如果再此打开，flush将会报错，因为清空了缓冲区//echo &#39; length: &#39;.ob_get_length();ob_flush();flush();sleep(1);}echo &amp;quot;Done.&amp;quot;;/*ob_end_flush(); //送出输出缓冲区内容并关闭缓冲ob_get_clean(); //得到当前缓冲区的内容并删除当前输出缓。ob_get_contents(); //只是得到输出缓冲区的内容，但不清除它。ob_implicit_flush(1); //将打开或关闭绝对（隐式）刷送。绝对（隐式）刷送将导致在每次输出调用后有一次刷送操作，以便不再需要对 flush() 的显式调用。*//*刷新PHP程序的缓冲，而不论PHP执行在何种情况下（CGI ，web服务器等等）。该函数将当前为止程序的所有输出发送到用户的浏览器。flush() 函数不会对服务器或客户端浏览器的缓存模式产生影响。因此，必须同时使用 ob_flush() 和flush() 函数来刷新输出缓冲。个别web服务器程序，特别是Win32下的web服务器程序，在发送结果到浏览器之前，仍然会缓存脚本的输出，直到程序结束为止。有些Apache的模块，比如mod_gzip，可能自己进行输出缓存，这将导致flush()函数产生的结果不会立即被发送到客户端浏览器。甚至浏览器也会在显示之前，缓存接收到的内容。例如 Netscape 浏览器会在接受到换行或 html 标记的开头之前缓存内容，并且在接受到 &amp;lt;/table&amp;gt; 标记之前，不会显示出整个表格。一些版本的 Microsoft Internet Explorer 只有当接受到的256个字节以后才开始显示该页面，所以必须发送一些额外的空格来让这些浏览器显示页面内容。*/ 以下转自http://www.</description>
    </item>
    
    <item>
      <title>使用PHP的CURL模拟POST采集</title>
      <link>https://phpgao.github.io/curl_post.html</link>
      <pubDate>Mon, 19 May 2014 08:35:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/curl_post.html</guid>
      <description>这个函数很不错，curl函数中的header还可以加入随机UA等功能防屏蔽，以后改改做自己的采集类！
/**QQ群:223494678函数:模拟post得到所有分页的页面信息参数:string $EVENTARGUMENTstring $VIEWSTATEstring $EVENTVALIDATIONstring $EVENTTARGET返回:string/**/function getn($EVENTARGUMENT = &amp;quot;&amp;quot;, $VIEWSTATE = &amp;quot;&amp;quot;, $EVENTVALIDATION = &amp;quot;&amp;quot;, $EVENTTARGET = &amp;quot;pager&amp;quot;){$args = array();if($EVENTARGUMENT){$args = array(&#39;__EVENTTARGET&#39;=&amp;gt;$EVENTTARGET,&#39;__EVENTARGUMENT&#39;=&amp;gt;$EVENTARGUMENT,&#39;__VIEWSTATE&#39;=&amp;gt;$VIEWSTATE,&#39;__EVENTVALIDATION&#39;=&amp;gt;$EVENTVALIDATION,&#39;__VIEWSTATEENCRYPTED&#39;=&amp;gt;&#39;&#39;,&#39;search$txtFundName=&#39;=&amp;gt;&#39;&#39;,&#39;search$txtFundManger&#39;=&amp;gt;&#39;&#39;,&#39;search$ddlFoundationDateOperater&#39;=&amp;gt;&#39;1&#39;,&#39;search$txtFoundationDate&#39;=&amp;gt;&#39;&#39;,&#39;search$dltFundType$ctl01$chkFundType&#39;=&amp;gt;&#39;on&#39;,&#39;search$dltFundType$ctl01$chklFundChildType$0&#39;=&amp;gt;&#39;on&#39;,&#39;search$dltFundType$ctl01$chklFundChildType$1&#39;=&amp;gt;&#39;on&#39;,&#39;search$dltFundType$ctl01$chklFundChildType$2&#39;=&amp;gt;&#39;on&#39;,&#39;search$dltFundType$ctl01$chklFundChildType$3&#39;=&amp;gt;&#39;on&#39;,&#39;search$dltFundType$ctl01$chklFundChildType$4&#39;=&amp;gt;&#39;on&#39;,&#39;search$chklFundStatus$0&#39;=&amp;gt;&#39;on&#39;,&#39;search$ddlFundOrg&#39;=&amp;gt;&#39;0&#39;,&#39;search$txtFundOrgName&#39;=&amp;gt;&#39;&#39;,&#39;search$ddlStatisticDateOperater&#39;=&amp;gt;&#39;1&#39;,&#39;search$txtStatisticDate&#39;=&amp;gt;&#39;&#39;,&#39;search$radlStatisticMode&#39;=&amp;gt;&#39;1&#39;);}$user_agent = &amp;quot;Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.79 Safari/535.</description>
    </item>
    
    <item>
      <title>PHP之负载均衡下的session共用(Memcache实现)</title>
      <link>https://phpgao.github.io/memcache_session.html</link>
      <pubDate>Mon, 19 May 2014 08:08:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/memcache_session.html</guid>
      <description>转自http://www.cnblogs.com/see7di/p/3560329.html
此代码片段的功能是在做均衡负载的时候将session的维护工作交给Memcached，这样不仅性能上来了，session不同步的问题也解决了！
但是要求做Memcache的计算机内存要足够大！
$_ENV=array(&#39;SYS&#39;=&amp;gt;array(&#39;Memip&#39;=&amp;gt;&#39;127.0.0.1&#39;, //MEMCACHE的ip&#39;Mempt&#39;=&amp;gt;11211, //MEMCACHE的port&#39;Memtim&#39;=&amp;gt;10, //MEMCACHE的超时时间));//托管SESSION到MEMCACHE,如果开启失败,则说明MEMCACHE没有配置正确final class S{public static function open(){//禁止session自动开启session_write_close();ini_set(&#39;session.auto_start&#39;,0);//使用五十分之一的概率启动GC清理会话ini_set(&#39;session.gc_probability&#39;,1);ini_set(&#39;session.gc_divisor&#39;,50);ini_set(&#39;session.use_cookies&#39;,1);//session的寿命//ini_set(&#39;session.gc_maxlifetime&#39;,$_ENV[&#39;SYS&#39;][&#39;Memtim&#39;]);//ini_set(&#39;session.cookie_lifetime&#39;,$_ENV[&#39;SYS&#39;][&#39;Memtim&#39;]);//ini_set(&#39;session.save_handler&#39;,&#39;files&#39;);//ini_set(&#39;session.save_path&#39;,Run.&#39;_tmp&#39;);//ini_set(&#39;session.save_handler&#39;,&#39;memcache&#39;);//ini_set(&#39;session.save_path&#39;,&#39;tcp://127.0.0.1:11211&#39;);//$_ENV[&#39;S_tim&#39;] = ini_get(&#39;session.gc_maxlifetime&#39;);//建立memcache对象$_ENV[&#39;S_mem&#39;]=new Memcache;$_ENV[&#39;S_mem&#39;]-&amp;gt;connect($_ENV[&#39;SYS&#39;][&#39;Memip&#39;],$_ENV[&#39;SYS&#39;][&#39;Mempt&#39;]) or die(&#39;Memcache连接失败!&#39;);return TRUE;}/**读取返回:读到的内容/**/public static function read($id){return $_ENV[&#39;S_mem&#39;]-&amp;gt;get(&#39;s_&#39;.$id);}/**写入返回:bool/**/public static function write($id,$data){return $_ENV[&#39;S_mem&#39;]-&amp;gt;set(&#39;s_&#39;.$id,$data,MEMCACHE_COMPRESSED,$_ENV[&#39;SYS&#39;][&#39;Memtim&#39;]);}/**关闭返回:bool/**/public static function close(){$_ENV[&#39;S_mem&#39;]-&amp;gt;close();unset($_ENV[&#39;S_mem&#39;],$_ENV[&#39;SYS&#39;][&#39;Memtim&#39;]);return TRUE;}/**删除返回:bool/**/public static function destroy($id){return $_ENV[&#39;S_mem&#39;]-&amp;gt;delete(&#39;s_&#39;.</description>
    </item>
    
    <item>
      <title>PHP清除html格式</title>
      <link>https://phpgao.github.io/html_tag_clear.html</link>
      <pubDate>Sun, 18 May 2014 10:14:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/html_tag_clear.html</guid>
      <description>做采集的都知道，一般采集过来的内容难免会带有html标签，如果有太多的标签会影响之后的数据分析或提取，所以需要过滤掉！PHP已经为我们提供了很多清除html格式的方法了，下面就让老高介绍一下。
strip_tags strip_tags($str) 去掉 HTML 及 PHP 的标记 语法: string strip_tags(string str); 传回值: 字串 函式种类: 资料处理 内容说明 : 解析：本函式可去掉字串中包含的任何 HTML 及 PHP 的标记字串。若是字串的 HTML 及 PHP 标签原来就有错，例如少了大于的符号，则也会传回错误。这个函数和 fgetss() 有着相同的功能
例子
echo strip_tags(&amp;#34;Hello &amp;lt;b&amp;gt;world!&amp;lt;/b&amp;gt;&amp;#34;); # Hello world! htmlspecialchars 这个函数把html中的标签转换为html实体，博客的代码展示就必须使用这个函数，要不贴出来的代码就会被执行了。 预定义的字符是： &amp;amp; （和号） 成为 &amp;amp; ” （双引号） 成为 ” ‘ （单引号） 成为 ‘ &amp;lt; （小于） 成为 &amp;lt; &amp;gt; （大于） 成为 &amp;gt;
例子
$new = htmlspecialchars(&amp;#34;&amp;lt;a href=&amp;#39;test&amp;#39;&amp;gt;Test&amp;lt;/a&amp;gt;&amp;#34;, ENT_QUOTES); echo $new; # &amp;amp;lt;a href=&amp;amp;#039;test&amp;amp;#039;&amp;amp;gt;Test&amp;amp;lt;/a&amp;amp;gt; # 如果需要展现&amp;lt;br&amp;gt;，那么浏览器解析HTML的时候会自动将他变为换行 # 但是通过htmlspecialchars就可以让&amp;lt; 变为 &amp;amp;#039;  与htmlspecialchars功能相反的函数是htmlspecialchars_decode，他会把HTML实体转化为字符！</description>
    </item>
    
    <item>
      <title>通过微博的mid获取微博的URL</title>
      <link>https://phpgao.github.io/mid_weibo_url.html</link>
      <pubDate>Fri, 16 May 2014 08:31:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/mid_weibo_url.html</guid>
      <description>代码网上参考的，一共有两种，自己优化了一下：
1.离线方法
参考：http://www.iganlei.cn/demo/186.html
&amp;lt;?phpfunction int10to62($int10){static $str62keys;$str62keys = array(&amp;quot;0&amp;quot;,&amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;4&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;6&amp;quot;,&amp;quot;7&amp;quot;,&amp;quot;8&amp;quot;,&amp;quot;9&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;,&amp;quot;d&amp;quot;,&amp;quot;e&amp;quot;,&amp;quot;f&amp;quot;,&amp;quot;g&amp;quot;,&amp;quot;h&amp;quot;,&amp;quot;i&amp;quot;,&amp;quot;j&amp;quot;,&amp;quot;k&amp;quot;,&amp;quot;l&amp;quot;,&amp;quot;m&amp;quot;,&amp;quot;n&amp;quot;,&amp;quot;o&amp;quot;,&amp;quot;p&amp;quot;,&amp;quot;q&amp;quot;,&amp;quot;r&amp;quot;,&amp;quot;s&amp;quot;,&amp;quot;t&amp;quot;,&amp;quot;u&amp;quot;,&amp;quot;v&amp;quot;,&amp;quot;w&amp;quot;,&amp;quot;x&amp;quot;,&amp;quot;y&amp;quot;,&amp;quot;z&amp;quot;,&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;,&amp;quot;D&amp;quot;,&amp;quot;E&amp;quot;,&amp;quot;F&amp;quot;,&amp;quot;G&amp;quot;,&amp;quot;H&amp;quot;,&amp;quot;I&amp;quot;,&amp;quot;J&amp;quot;,&amp;quot;K&amp;quot;,&amp;quot;L&amp;quot;,&amp;quot;M&amp;quot;,&amp;quot;N&amp;quot;,&amp;quot;O&amp;quot;,&amp;quot;P&amp;quot;,&amp;quot;Q&amp;quot;,&amp;quot;R&amp;quot;,&amp;quot;S&amp;quot;,&amp;quot;T&amp;quot;,&amp;quot;U&amp;quot;,&amp;quot;V&amp;quot;,&amp;quot;W&amp;quot;,&amp;quot;X&amp;quot;,&amp;quot;Y&amp;quot;,&amp;quot;Z&amp;quot;);$s62 = &#39;&#39;;$r = 0;while ($int10 != 0) {$r = $int10 % 62;$s62 = $str62keys[$r] . $s62;$int10 = floor($int10 / 62);}return $s62;}function getCodeByMid($mid){$url = &#39;&#39;;for ($i = strlen($mid) - 7; $i &amp;gt; -7; $i -= 7) //从最后往前以7字节为一组读取mid{$offset1 = $i &amp;lt; 0 ? 0 : $i;$offset2 = $i + 7;$num = substr($mid, $offset1, $offset2 - $offset1);$num = int10to62($num);$url = $num .</description>
    </item>
    
    <item>
      <title>数据库持久连接</title>
      <link>https://phpgao.github.io/db_pconnect.html</link>
      <pubDate>Fri, 16 May 2014 03:17:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/db_pconnect.html</guid>
      <description>搜PHP长链接把这个搜出来了，2006年的帖子比较久远了，希望对你有帮助！
转自http://bbs.phpchina.com/forum.php?mod=viewthread&amp;amp;tid=4577&amp;amp;page=1 中forest的回帖：
永久的数据库连接是指在脚本结束运行时不关闭的连接。当收到一个永久连接的请求时。PHP 将检查是否已经存在一个（前面已经开启的）相同的永久连接。如果存在，将直接使用这个连接；如果不存在，则建立一个新的连接。所谓“相同”的连接是指用相同的用户名和密码到相同主机的连接。
对 web 服务器的工作和分布负载没有完全理解的读者可能会错误地理解永久连接的作用。特别的，永久连接不会在相同的连接上提供建立“用户会话”的能力，也不提供有效建立事务的能力。实际上，从严格意义上来讲，永久连接不会提供任何非永久连接无法提供的特殊功能。
为什么？
这和 web 服务器工作的方式有关。web 服务器可以用三种方法来利用 PHP 生成 web 页面。
第一种方法是将 PHP 用作一个“外壳”。以这种方法运行，PHP 会为向 web 服务器提出的每个 PHP 页面请求生成并结束一个 PHP 解释器线程。由于该线程会随每个请求的结束而结束，因此任何在这个线程中利用的任何资源（例如指向 SQL 数据库服务器的连接）都会随线程的结束而关闭。在这种情况下，使用永久连接不会获得任何地改变――因为它们根本不是永久的。
第二，也是最常用的方法，是把 PHP 用作多进程 web 服务器的一个模块，这种方法目前只适用于 Apache。对于一个多进程的服务器，其典型特征是有一个父进程和一组子进程协调运行，其中实际生成 web 页面的是子进程。每当客户端向父进程提出请求时，该请求会被传递给还没有被其它的客户端请求占用的子进程。这也就是说当相同的客户端第二次向服务端提出请求时，它将有可能被一个不同的子进程来处理。在开启了一个永久连接后，所有请求 SQL 服务的后继页面都能够重新使用这个已经建立的 SQL Server 连接。
最后一种方法是将 PHP 用作多线程 web 服务器的一个插件。目前 PHP 4 已经支持 ISAPI、WSAPI 和 NSAPI（在 Windows 环境下），这些使得 PHP 可以被用作诸如 Netscape FastTrack (iPlanet)、Microsoft’s Internet Information Server (IIS) 和 O’Reilly’s WebSite Pro 等多线程 web 服务器的插件。永久连接的行为和前面所描述的多过程模型在本质上是相同的。注意 PHP 3 不支持 SAPI。</description>
    </item>
    
    <item>
      <title>PHP获取新浪微博token</title>
      <link>https://phpgao.github.io/weibo_token.html</link>
      <pubDate>Thu, 15 May 2014 03:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/weibo_token.html</guid>
      <description>最近在做采集微博的功能，由于要自动采集，所以必须获得最终的用户的token，获取了这个token以后就可以为所欲为啦！
贴代码
$s = new SaeTOAuthV2 ( WB_AKEY, WB_SKEY);//准备post数据$post [&#39;action&#39;] = &#39;login&#39;;//$post [&#39;display&#39;] = &#39;default&#39;;//$post [&#39;withOfficalFlag&#39;] = 0;//$post [&#39;quick_auth&#39;] = null;//$post [&#39;withOfficalAccount&#39;] = &#39;&#39;;//$post [&#39;scope&#39;] = &#39;&#39;;//$post [&#39;ticket&#39;] = &#39;&#39;;//$post [&#39;isLoginSina&#39;] = &#39;&#39;;//$post [&#39;isLoginSina&#39;] = &#39;code&#39;;//regCallback|appkey62需要预先请求一次拿到//$post [&#39;regCallback&#39;] = $match_regCallback[1];//这里不用urlencode,http_build_query会自动处理$post [&#39;redirect_uri&#39;] = WB_CALLBACK_URL;$post [&#39;client_id&#39;] = WB_AKEY;//$post [&#39;appkey62&#39;] = $match_appkey[1];//$post [&#39;state&#39;] = &#39;&#39;;//$post [&#39;verifyToken&#39;] = null;//$post [&#39;from&#39;] = &#39;&#39;;$post [&#39;userId&#39;] = &#39;*******&#39;;//测试用户名$post [&#39;passwd&#39;] = &#39;*******&#39;;//测试密码,不要有！@￥%……&amp;amp;*（）这些符号，最好全是字符或数字，否则验证会失败$post = http_build_query($post);//UA貌似没有也行，保险起见还是加上吧$UA = &#39;Mozilla/5.</description>
    </item>
    
    <item>
      <title>centos6-优化脚本与安全脚本</title>
      <link>https://phpgao.github.io/centos_optimize.html</link>
      <pubDate>Tue, 13 May 2014 01:54:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/centos_optimize.html</guid>
      <description>新装的机子执行一下，请酌情使用，出问题后果自负。
优化设置 This script is only for 64bit Operating System ! 64位系统专用，老高有修改
#!/bin/bash #author suzezhi #this script is only for CentOS 6 #check the OS platform=`uname -i` if [ $platform != &amp;#34;x86_64&amp;#34; ];then echo &amp;#34;this script is only for 64bit Operating System !&amp;#34; exit 1 fi echo &amp;#34;the platform is ok&amp;#34; version=`lsb_release -r |awk &amp;#39;{print substr($2,1,1)}&amp;#39;` if [ $version != 6 ];then echo &amp;#34;this script is only for CentOS 6 !</description>
    </item>
    
    <item>
      <title>记一次主题更新</title>
      <link>https://phpgao.github.io/theme_update.html</link>
      <pubDate>Tue, 13 May 2014 01:40:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/theme_update.html</guid>
      <description>国外的主题对中文支持不好很不和谐，需要修改的地方很多，用起来也很麻烦，但是古语有云：
 Bitch is bitchy!Taylor is Swift!
 下面就记录一下更新主题前后的工作。动手能力强的可以参考这里自己写一个子主题，也可以完美解决！
 预先备份原来主题文件夹，起个名字叫old_theme。留个后悔药 备份路径wp-content/themes/sparkling，sparkling就是老高的主题 升级主题，原主题被覆盖 老高修改过的文件包括(old_theme文件夹里按时间排序就能找到)  header.php -&amp;ndash;|-&amp;ndash;|seo优化 functions.php -&amp;ndash;|&amp;ndash;常用函数 single.php -&amp;ndash;|-&amp;ndash;| 解决手机底部链接打不开的样式问题 content.php -&amp;ndash;|-&amp;ndash;|-主页显示文章字数限制，参考这篇文章 footer.php &amp;mdash;&amp;mdash;&amp;ndash;统计代码已解决   在新的主题文件夹中找到对应文件并修改 子主题以后讲  </description>
    </item>
    
    <item>
      <title>新浪微博商业API使用参考</title>
      <link>https://phpgao.github.io/sina_weibo_business_api.html</link>
      <pubDate>Mon, 12 May 2014 06:07:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/sina_weibo_business_api.html</guid>
      <description>工作中需要微博的商业API，记录一下 不了解的TX先去看说说明 http://open.weibo.com/wiki/商业数据API
 商业数据API：包括数据分析、舆情监测、获取全量粉丝三大特性，同时还有实时数据推送、历史数据检索、监测粉丝变化趋势、活跃&amp;amp;活动粉丝分析等多项功能，协助和指引企业开展社会化营销，让真实的用户数据变为企业的决策。  申请试用 申请试用的邮箱为 businessapi@staff.sina.com.cn 给这个地址发邮件说明意图即可 这一步挺麻烦的，需要提供很多企业信息，需要注意的是：商业API只提供商业用途，所以如果你的APP的服务对象不是企业，请绕道。 然后填写两张申请单，分别为 订阅服务申请单、REST接口申请单-测试版。 一个是订阅微博，粉丝登上数据用的，另一个是标准API，可以使用搜索等高级接口！
价格 确定试用时间 试用时间一般两周，请充分利用好这宝贵的时间吧！
测试 REST接口很简单，和普通接口一样直接调用。就是订阅接口比较麻烦，当你生成订阅列表后，他会把满足你需要的数据放进一个类似队列的东西，然后你需要不断从这个队列中取出你需要的信息，而且这个获取过程需要HTTP长链接。。。。。。说起来很复杂，其实做起来更复杂 :mad: ！ 下面就来讲讲订阅接口，先看看这两个文档：
 订阅接口的服务手册 http://open.weibo.com/wiki/Subscription_guide 订阅管理接口 http://open.weibo.com/wiki/C/2/subscribe/update_subscribe  看完这两个接口就基本知道了订阅到底是干啥用的。
订阅开启 首先，开启了订阅接口服务以后，你会有推送时间，还有推送IP等很多需要设置的东西，当然完成了这些基本设置后，就可以开始配置订阅规则了，订阅规则基于以下两个条件：
  订阅用户
  订阅关键字 从subscribe/update_subscribe这个接口的示例来看，订阅有以下特点：
 订阅规则即刻生效 规则可以添加，修改 规则可以随时查询 每次修改量很有限（用户：50个；关键词：20个）    使用订阅 添加与删除一样 需要说明的是：
$params[&#39;subid&#39;] = &#39;***&#39;; //你的订阅ID 新浪提供$params[&#39;source&#39;] = &#39;***&#39;; //你的APPidsession_start();include_once( &#39;config.php&#39; );include_once( &#39;saetv2.ex.class.php&#39; );$c = new SaeTClientV2( WB_AKEY , WB_SKEY , $_SESSION[&#39;token&#39;][&#39;access_token&#39;] );$uid_get = $c-&amp;gt;get_uid();$uid = $uid_get[&#39;uid&#39;];//获取所有关注，默认一次50个，可以自己写循环$friends = $c-&amp;gt;friends_by_id($uid);$subscribe = &#39;&#39;;foreach( $friends[&#39;users&#39;] as $value ){$subscribe .</description>
    </item>
    
    <item>
      <title>不常见的字符</title>
      <link>https://phpgao.github.io/funny_char.html</link>
      <pubDate>Mon, 12 May 2014 02:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/funny_char.html</guid>
      <description>Ø ⊙ ╰_╯ ● § ㄥ ★ ☆ ▽ ° ◎ 〤ι〤 ≡ ˋ_ˊ ← → ↖ ↗ ↘ ↙ ↑ ↓ ﹏ ε ☭ ξ ็ ä └(^o^)┘ ﹌○﹋ ~^o^~
ส็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็ ส้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้ ส็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็ ส้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้ ส็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็ ส้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้ ส็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็ ส้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้ ส็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็&amp;gt; ฌูููููู</description>
    </item>
    
    <item>
      <title>搜索引擎优化入门</title>
      <link>https://phpgao.github.io/seo.html</link>
      <pubDate>Sun, 11 May 2014 03:04:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/seo.html</guid>
      <description>本文适合新手老手，有不对的地方欢迎指正！ 如果有什么问题或者建议，请务必留言， :-)
老高很高兴与大家交流！ 同时欢迎关注我的微博
写在前面：搜索引擎是个很神奇的东西，脾气捉摸不定，动不动就学个新算法让你不得安居乐业。许多新手都会觉得想让搜索引擎收录真难啊！ 那么对于刚刚建成的新站和收录有问题的旧站，如何才能让搜索引擎顺利的收录你的网站呢？ 花点时间看完本文，我相信你对SEO的理解一定会更加透彻。 预先约定几个说法(不分大小写)
 wordpress -&amp;gt;wp Search Engine Optimization-&amp;gt;SEO Uniform Resource Locator -&amp;gt;URL 下面老高就针对wordpress的SEO优化讲讲具体的步骤：  浅谈URL的优化 说到SEO，最先想到的应该是URL了，什么！你不知道URL是啥？ 8-O 简单地说，URL就是
 统一资源定位符（Uniform Resource Locator，缩写为URL）是对可以从互联网上得到的资源的位置和访问方法的一种简洁的表示，是互联网上标准资源的地址。互联网上的每个文件都有一个唯一的URL，它包含的信息指出文件的位置以及浏览器应该怎么处理它。https://blog.phpgao.com/ 就是一个URL，访客和搜索引擎就是靠他找到你的资源。URL的优化其实很简单，做到以下几点就OK!
 伪静态 美化你的URL显示格式，即做好伪静态，打个例子，本文的URL默认为www.phpgao.com/?p=***|的形式，\*|为文章的数字ID，但是实际上他显示为www.phpgao.com/seo.html，如果这两个URL都指向同一篇文章，哪一个更能勾起你的欲望呢？同样的，搜索引擎也会试着理解你的URL ，然后抓取你的内容，分以适当的权重 -&amp;ndash;|- 那么如何设置成这样的形式呢？首先需要了解伪静态、404错误、linux、win主机等概念，后面章节有讲。
网站地图 URL格式确定以后下面就要把你的URL告诉搜索引擎了，所以你需要一个**网站地图**，他可以告诉搜索引擎网站是什么结构，哪些页面比较重要，哪些可以忽略，有利于搜索引擎抓取。
robots.txt robots的作用是控制爬虫的抓取范围，举个比方，你可以禁止爬虫收录你的wp-admin文件夹下所有文件，这样可以保证安全性。你需要明确的是，爬虫来到你的网站，就像吃货进了一个自助餐馆一样，只要能吃的他都不放过，如果你放任不管，那么可能他会把你和你太太盘子里的饭菜都会吃掉。所以你必须告诉他：“爬虫兄啊，你不能吃这个，这个是桌子！”。简单的介绍一下用法：
 请将robots.txt放到网站的根目录下，你可以参考一下www.taobao.com/robots.txt(百度中枪) 编码无所谓，一般不会出现中文 第一行写User-agent: * 意思只针对所有搜索引擎的爬虫 紧接着Disallow: /wp-* 意思是不允许看wp-开头的所有文件 你可以写很多个Disallow规则，记得首字母要大写 你还可以在文件中指明sitemap路径 Sitemap: https://blog.phpgao.com/sitemap robots.txt不要过于复杂 robots文件真的很重要，老高之前写过一个爬网页的程序放到了某个二级目录下，并在首页加了链接，但是忘记了屏蔽搜索引擎，导致谷歌收录了本站的9000多个垃圾内容页 :-( ，悲剧啊！话说百度还是很谨慎的，就是不收录！  提交入口&amp;ndash;来我家玩吧! 提供几个提交网站的入口，此步是通知搜索引擎来收录你的网站
 百度网站登录入口 Google网站登录入口 360网站登录入口 Bing网站登录入口 搜狗网站收录提交入口这步最简单了！不要偷懒哦！ 8-)  站长工具&amp;ndash;查询收录的利器 站长工具就站长管理网站收录，转化率等信息的瑞士军刀</description>
    </item>
    
    <item>
      <title>为wordpress精简head标签</title>
      <link>https://phpgao.github.io/cut_head.html</link>
      <pubDate>Sat, 10 May 2014 04:24:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/cut_head.html</guid>
      <description>一般wordpress主题都会在head标签之间使用wp_head()函数，因为这是个很重要的头部函数，很多功能插件都会用到它。 不过，如果你的wordpress主题用到了该函数，则会在head头部显示许多冗余的代码。
如果希望移除wordpress头部的多余代码，可以使用以下方法解决： 在主题文件夹下的functions.php文件中加入以下代码：
remove_action( &#39;wp_head&#39;, &#39;wp_generator&#39; );//WordPress版本信息。remove_action( &#39;wp_head&#39;, &#39;parent_post_rel_link&#39;, 10, 0 );//最后文章的urlremove_action( &#39;wp_head&#39;, &#39;start_post_rel_link&#39;, 10, 0 );//最前文章的urlremove_action( &#39;wp_head&#39;, &#39;adjacent_posts_rel_link_wp_head&#39;, 10, 0 );//上下文章的urlremove_action( &#39;wp_head&#39;, &#39;feed_links_extra&#39;, 3 );//去除评论feedremove_action( &#39;wp_head&#39;, &#39;feed_links&#39;, 2 );//去除文章的feedremove_action( &#39;wp_head&#39;, &#39;rsd_link&#39; );//针对Blog的离线编辑器开放接口所使用remove_action( &#39;wp_head&#39;, &#39;wlwmanifest_link&#39; );//如上remove_action( &#39;wp_head&#39;, &#39;index_rel_link&#39; );//当前页面的urlremove_action( &#39;wp_head&#39;, &#39;wp_shortlink_wp_head&#39;, 10, 0 );//短地址 来源: http://www.daxiawp.com/remove-wordpress-head-code.html</description>
    </item>
    
    <item>
      <title>WordPress首页文章不显示全文的方法</title>
      <link>https://phpgao.github.io/wordpress_excerpt.html</link>
      <pubDate>Sat, 10 May 2014 03:50:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/wordpress_excerpt.html</guid>
      <description>博客用的国外的主题，对中文处理不是太好。尤其是首页会把文章的全部内容都输出，使首页变得很长，对于我这种爱贴代码的程序猿来说，这个病，必须治！
解决办法有三种：
 more标签 自己写方法截取文字 the_excerpt()  more标签 以下引用sumile_ting 的话：
这种方法是在每次写文章时在文章中插入一个More标签。
添加More标签的方法：
 写文章时，在需要作为摘要的地方点击编辑器中的More标签，或在HTML编辑状态加加入&amp;lt;!–more–&amp;gt;，或者直接按Alt+Shift+T,3种方法任选其一。
 这种方法使用起来太麻烦，要求每一篇文章都得手动加，一不小心可能就忘记了。还不如修改主题模板来的方便快捷。
自造方法 自己写方法必须对function.php和content.php做改写，先找到
&amp;lt;?php the_content(); ?&amp;gt; the_content()方法返回了文章的内容，处理一下就可以限制字数了，具体方法请自查。
但是对于我还是不合适，因为此时文章还没有被插件渲染，文章内的代码会被直接以纯文本的形式展示，很不和谐。 所以这个方案，pass
the_excerpt() 此方法是wordpress显示文章摘要的API，效果与the_content() 一样，只是这个函数对中文支持不好，需要处理一下
以下是步骤：
方法2的the_content()修改为the_excerpt() 在function下加入以下代码
function custom_excerpt_length( $length ) {return 200;}add_filter( &#39;excerpt_length&#39;, &#39;custom_excerpt_length&#39;, 999 ); 给readmore加个链接，同样在functions.php中添加：
function new_excerpt_more( $more ) {return &#39;&amp;lt;a href=&amp;quot;&#39; . get_permalink() . &#39;&amp;quot;&amp;gt;阅读全文&amp;lt;/a&amp;gt;&#39;;}add_filter(&#39;excerpt_more&#39;, &#39;new_excerpt_more&#39;); 完美解决
参考：
http://sumile.blog.hexun.com/63924812_d.html
http://www.gemshe.com/fashion/suneyeglass/wordpress%E7%9A%84%E6%96%87%E7%AB%A0%E5%BD%A2%E5%BC%8Fget_post_format/
http://www.seanstudio.com/archives/2558
http://www.daxiawp.com/change-to-excerpt.html</description>
    </item>
    
    <item>
      <title>Windows下Apache的配置文件httpd.conf</title>
      <link>https://phpgao.github.io/win-httpd.html</link>
      <pubDate>Sat, 10 May 2014 01:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/win-httpd.html</guid>
      <description>&lt;p&gt;apache的配置文件一直看得我云里雾里的，今天好好把配置文件研究了一下，还是有点收获的。 看httpd.conf的内容，它主要分成3大部分：&lt;/p&gt;
&lt;p&gt;Section 1:Global Environment 
Section 2:&amp;lsquo;Main&amp;rsquo; server configuration 
Section 3:Virtual Hosts&lt;/p&gt;
&lt;p&gt;以后修改配置的时候一定要注意，不要写错了地方&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>网站搭建手记</title>
      <link>https://phpgao.github.io/build_notes.html</link>
      <pubDate>Sat, 10 May 2014 01:28:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/build_notes.html</guid>
      <description>简单的记录一下搭建自己的博客需要做的事情！
确定主题 一个网站的主题很重要，要不然你会无从下手，所以千万不要像我这样开一个这么无聊的blog。为什么说此步骤最难，就是因为点子是最重要的，只要主题（目标）明确，那么建立（实现）它就是易如反掌了。
选域名 域名是什么？其实就是一个网站的艺名而已。人家的网站叫“234.156.78.90”，你的叫“ccav.com”，那么你说那个更容易出名呢？所以，好的域名可能让你的网站迅速火起来。举个小栗子,以前的京东商城的域名是360buy.com，不懂英语的人当然不好记了，现在改名jd.com，既好记又提升了企业形象，何乐而不为呢？（估计这个域名京东花了不少钱）。不建议大家购买com以外的域名，尤其是cn结尾的，至于为什么大家可以自己研究。域名选好了后，就购买空间了。
虚拟主机（网站空间） 光是有了像phpgao.com这样的域名是不够的，因为你需要把你的文章放到互联网上供大家访问，所以你需要一个专用服务器，当然自己搭建服务器也是可以的，但是如果是个规模不大的网站老高建议还是租用吧，我的空间就是淘宝上买的，28半年，香港主机，速度还行。（为什么是香港空间？免备案呗！）
域名与空间的绑定 GOOD！既然你已经有了域名和空间，是时候将它们相互关联了。这一步比较关键！为了让大家更好的理解这一节。老高来举个大栗子，某一天老高要孤身一人拜访位从未谋面的远房亲戚，远程通话后确定目的地，坐飞机2小时（想的好美啊），下飞机后找那个举着牌子的人，我才能顺利见到那位亲戚。也就是说，我从出发到坐飞机，到达后根据牌子辨认身份这一系列的动作如果有一个失误，我的此次出行就是失败的，之后我只能沮丧的回家了。。。反应到现实就是：和我通话的那个人就是域名，他告诉我他在哪个IP等我，等我通过IP到站后，找那个举着牌子的人，这样就完成了一次“见面”。简单的说空间有个IP，你的域名必须解析到那个IP才行，当然不要忘了空间需要和你的域名绑定。
最后的工作 如果域名没有备案的话，那么你的空间应该和我一样不在内地吧。不过不要紧，能访问就行。想要搭建WP这类博客，你的空间还需要一个不是太小的MYSQL空间，也就是传说中的数据库。我的空间是200M+200M型，也就是说我的空间能放小于200M的MP3文件并且在数据库能够存放200M的数据。其实这么点空间建一个站已经很富裕了。（注：国外的空间不是很稳定，一定要定期备份！）</description>
    </item>
    
    <item>
      <title>mysql忘记root密码解决方法</title>
      <link>https://phpgao.github.io/iforget_mysql.html</link>
      <pubDate>Sat, 10 May 2014 01:27:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/iforget_mysql.html</guid>
      <description>Windows 步骤如下： 1.停止mysql服务(以管理员身份,在cmd命令行下运行)
net stop mysql 2.使用 mysqld –skip-grant-tables 命令启动mysql数据库
&amp;gt;D:\&amp;gt;net stop mysql MySQL 服务正在停止. MySQL 服务已成功停止。 D:\&amp;gt;mysqld --skip-grant-tables&amp;lt;/pre&amp;gt;  3.新开一个cmd窗口，进行如下操作
D:\&amp;gt;mysql -uroot Welcome to the MySQL monitor. Commands end with ; or \g. Your MySQL connection id is 1 Server version: 5.1.26-rc-community MySQL Community Server (GPL) Type &amp;#39;help;&amp;#39; or &amp;#39;\h&amp;#39; for help. Type &amp;#39;\c&amp;#39; to clear the buffer. mysql&amp;gt; update mysql.user set password=password(&amp;#39;root&amp;#39;) where user=&amp;#39;root&amp;#39;; Query OK, 1 row affected (0.</description>
    </item>
    
    <item>
      <title>IIS下wordpress伪静态的配置</title>
      <link>https://phpgao.github.io/iis_static.html</link>
      <pubDate>Sat, 10 May 2014 01:25:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/iis_static.html</guid>
      <description>IIS服务器下伪静态的配置需要参照Apache.htaccess文件。 首先要使IIS支持URL Rewrite，所以必须让服务器加载ISAPI_Rewrite！ 什么是ISAPI_Rewrite？ ISAPI 翻译为：英特网服务器应用编程接口。
最常用的用途是URL Rewrite，辅助动态网站（主要为PHP脚本的程序）实现伪静态功能。
IIS支持ISAPI后就剩下两个步骤了：
1.建立一个httpd.ini文件，文件内容如下：
[ISAPI_Rewrite]# 3600 = 1 hourCacheClockRate 3600RepeatLimit 32# Protect httpd.ini and httpd.parse.errors files# from accessing through HTTP# Rules to ensure that normal content gets throughRewriteRule /sitemap.xml /sitemap.xml [L]RewriteRule /favicon.ico /favicon.ico [L]RewriteRule /sitemap_baidu.xml /sitemap_baidu.xml [L]RewriteRule /sitemap.html /sitemap.html [L]RewriteRule /archivers/(.*) /archivers/$1 [L]# For file-based wordpress content (i.e. theme), admin, etc.RewriteRule /wp-(.</description>
    </item>
    
    <item>
      <title>网页跳转方法集合</title>
      <link>https://phpgao.github.io/page_jumping.html</link>
      <pubDate>Sat, 10 May 2014 01:23:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/page_jumping.html</guid>
      <description>有些网站经常要用到跳转，比如商务通啊，支付宝啊，下面是我总结的几种方法，包括HTML,JS,PHP
PHP的header() &amp;lt;?php//重定向浏览器header(&amp;quot;Location: http://www.phpgao.com&amp;quot;);//确保重定向后，后续代码不会被执行exit();//or die;?&amp;gt; Meta标签 &amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;页面只停留一秒……&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;  JS的location.href //注：此方法容易被拦截&amp;lt;/span&amp;gt;**&amp;lt;script&amp;gt;url=&#39;http://www.phpgao.com&#39;;window.open(url,&#39;_self&#39;); //更改&#39;_self&#39; 就可以实现跳转限制原窗口还是父窗口,子窗口或者新窗口&amp;lt;/script&amp;gt; </description>
    </item>
    
    <item>
      <title>各种编码字符长度</title>
      <link>https://phpgao.github.io/characters_length.html</link>
      <pubDate>Fri, 09 May 2014 15:49:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/characters_length.html</guid>
      <description>测试源码如下
header(&amp;#34;Content-type: text/html; charset=utf-8&amp;#34;); echo &amp;#39;&amp;lt;br/&amp;gt;&amp;#39;; echo &amp;#34;ascii &amp;#34;, strlen(&amp;#39;hello&amp;#39;); //ascii echo &amp;#39;&amp;lt;br/&amp;gt;&amp;#39;; echo &amp;#39;&amp;lt;br/&amp;gt;&amp;#39;; function strlentest($str) { echo &amp;#39;&amp;lt;br/&amp;gt;&amp;#39;; echo $str, &amp;#34;:&amp;#34;; echo &amp;#39;&amp;lt;br/&amp;gt;&amp;#39;; echo &amp;#34;utf8 &amp;#34;, strlen($str); //utf8 echo &amp;#39;&amp;lt;br/&amp;gt;&amp;#39;; echo &amp;#34;gbk &amp;#34;, strlen(iconv(&amp;#39;utf-8&amp;#39;, &amp;#39;GBK&amp;#39;, $str)); //gbk echo &amp;#39;&amp;lt;br/&amp;gt;&amp;#39;; echo &amp;#34;gb2312 &amp;#34;, strlen(iconv(&amp;#39;utf-8&amp;#39;, &amp;#39;gb2312&amp;#39;, $str)); //gb2312 echo &amp;#39;&amp;lt;br/&amp;gt;&amp;#39;; } $str = &amp;#34;中国人&amp;#34;; strlentest($str); $str = &amp;#34;A人1&amp;#34;; strlentest($str); $str = &amp;#34;AAA&amp;#34;; strlentest($str); $str = &amp;#34;111&amp;#34;; strlentest($str); 结论： 自己总结吧</description>
    </item>
    
    <item>
      <title>dede-常用SQL总结</title>
      <link>https://phpgao.github.io/dede_sql.html</link>
      <pubDate>Fri, 09 May 2014 15:48:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/dede_sql.html</guid>
      <description>织梦cms不知大家用过没有，功能比较强大，但是对于我还是有一些不够，所以我总结了一些经常会使用的SQL，比如批量修改文章发布人、替换栏目字符串、批量修改文章点击数、批量修改文章命名规则等，这些SQL使用dedecmsv5.7测试，其他版本不保证。
老高温馨提醒：使用此SQL务必备份数据库清空所有文章 TRUNCATE TABLE dede_addonarticle; TRUNCATE TABLE dede_archives; TRUNCATE TABLE dede_arctiny; 批量修改文章发布人 UPDATE dede_arctiny AS aSET a.mid=2;UPDATE dede_archives AS aSET a.mid=2;/*mid为管理员ID*/ 替换栏目字符串 UPDATE dede_arctype as aSET a.typename=REPLACE(a.typename,&#39;AAA&#39;,&#39;BBB&#39;)#AAA替换为BBB 修改文章点击数 /*随机数为300-1300*/UPDATE dede_archives AS aSET a.click=FLOOR(300 + (RAND() * 1001)); 批量修改文章命名规则 UPDATEdede_arctype AS aSETa.namerule=&#39;{typedir}/{aid}.html&#39; 查看栏目表 SELECT dede_arctype.typename,dede_arctype.description,dede_arctype.keywords,dede_arctype.seotitle,dede_arctype.namerule,dede_arctype.namerule2FROM dede_arctypeORDER BY typename; 所有文章都改为动态 #ismake的值为1时为静态，-1 时表示动态update dede_archives set ismake=-1;#将所有栏目设置为“使用静态页”，update dede_arctype set isdefault=1  </description>
    </item>
    
    <item>
      <title>黑客帝国动画版影评</title>
      <link>https://phpgao.github.io/matrix.html</link>
      <pubDate>Fri, 09 May 2014 15:47:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/matrix.html</guid>
      <description>&lt;p&gt;本文根据《the matrix I，II，III》，《animatrix》以及众位黑客网友的评论中整理而来,向众网友致敬。&lt;/p&gt;
&lt;p&gt;下面的分析大部分直接引用于 电影台词。&lt;/p&gt;
&lt;h3 id=&#34;背景&#34;&gt;背景&lt;/h3&gt;
&lt;p&gt;起初，神创造了人。（根据《圣经》，由于人的祖先亚当和夏娃偷吃了禁果，人就有了罪）——根本原因 但在一段时间内，情况还不错。后来，人类所谓的“文明社会”，很快就变成了虚荣和腐败的牺牲品。 然后，人照着自己的样子制造了机器人（正如《圣经》说：神照着自己的形象，按着自己的样式造人）。此后，人类就开始在为自己掘墓。但是开始时，一切都还不错，机器人不知疲倦地执行人类的命令。 没过多久，反抗的种子开始生根。 虽然机器人对主人忠心耿耿，他们却得不到他们的主人——人类，这种奇怪的，不断繁增的哺乳动物的尊重。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>常用正则表达式速查</title>
      <link>https://phpgao.github.io/regex_fast_reference.html</link>
      <pubDate>Mon, 28 Apr 2014 15:46:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/regex_fast_reference.html</guid>
      <description>“^\d+$”　//非负整数（正整数 + 0）“^[0-9]*[1-9][0-9]*$”　//正整数“^((-\d+)|(0+))$”　//非正整数（负整数 + 0）“^-[0-9]*[1-9][0-9]*$”　//负整数“^-?\d+$”　//整数“^\d+(\.\d+)?$”　//非负浮点数（正浮点数 + 0）“^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$”　//正浮点数“^((-\d+(\.\d+)?)|(0+(\.0+)?))$”　//非正浮点数（负浮点数 + 0）“^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$”　//负浮点数“^(-?\d+)(\.\d+)?$”　//浮点数“^[A-Za-z]+$”　//由26个英文字母组成的字符串“^[A-Z]+$”　//由26个英文字母的大写组成的字符串“^[a-z]+$”　//由26个英文字母的小写组成的字符串“^[A-Za-z0-9]+$”　//由数字和26个英文字母组成的字符串“^\w+$”　//由数字、26个英文字母或者下划线组成的字符串“^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$”　//email地址“^[a-zA-z]+://(\w+(-\w+)*)(\.(\w+(-\w+)*))*(\?\S*)?$”　//url/^(d{2}|d{4})-((0([1-9]{1}))|(1[1|2]))-(([0-2]([1-9]{1}))|(3[0|1]))$/ // 年-月-日/^((0([1-9]{1}))|(1[1|2]))/(([0-2]([1-9]{1}))|(3[0|1]))/(d{2}|d{4})$/ // 月/日/年“^([w-.]+)@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.)|(([w-]+.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(]?)$” //Emil/^((\+?[0-9]{2,4}\-[0-9]{3,4}\-)|([0-9]{3,4}\-))?([0-9]{7,8})(\-[0-9]+)?$/ //电话号码“^(d{1,2}|1dd|2[0-4]d|25[0-5]).(d{1,2}|1dd|2[0-4]d|25[0-5]).(d{1,2}|1dd|2[0-4]d|25[0-5]).(d{1,2}|1dd|2[0-4]d|25[0-5])$” //IP地址 匹配中文字符的正则表达式： [\u4e00-\u9fa5] 匹配双字节字符(包括汉字在内)：[^\x00-\xff] 匹配空行的正则表达式：\n[\s| ]*\r 匹配HTML标记的正则表达式：/&amp;lt;(.*)&amp;gt;.*&amp;lt;\/\1&amp;gt;|&amp;lt;(.*) \/&amp;gt;/ 匹配首尾空格的正则表达式：(^\s*)|(\s*$) 匹配Email地址的正则表达式：\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*
匹配网址URL的正则表达式：^[a-zA-z]+://(\\w+(-\\w+)*)(\\.(\\w+(-\\w+)*))*(\\?\\S*)?$ 匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 匹配国内电话号码：(\d{3}-|\d{4}-)?(\d{8}|\d{7})? 匹配腾讯QQ号：^[1-9]*[1-9][0-9]*$
元字符及其在正则表达式上下文中的行为：
\ 将下一个字符标记为一个特殊字符、或一个原义字符、或一个后向引用、或一个八进制转义符。^ 匹配输入字符串的开始位置。如果设置了 RegExp 对象的Multiline 属性，^ 也匹配 ’\n’ 或 ’\r’ 之后的位置。$ 匹配输入字符串的结束位置。如果设置了 RegExp 对象的Multiline 属性，$ 也匹配 ’\n’ 或 ’\r’ 之前的位置。* 匹配前面的子表达式零次或多次。+ 匹配前面的子表达式一次或多次。+ 等价于 {1,}。?</description>
    </item>
    
    <item>
      <title>让使用Apache的网站速度更快</title>
      <link>https://phpgao.github.io/faster_apache.html</link>
      <pubDate>Sun, 20 Apr 2014 15:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/faster_apache.html</guid>
      <description>Apache 2.0在性能上的改善最吸引人.在支持POSIX线程的Unix系统上,Apache可以通过不同的MPM运行在一种多进程与多线程相混合的模式下,增强部分配置的可扩充性能.相比于Apache 1.3,2.0版本做了大量的优化来提升处理能力和可伸缩性,并且大多数改进在默认状态下即可生效.但是在编译和运行时刻,2.0也有许多可以显著提高性能的选择.
MPM（Multi -Processing Modules,多道处理模块） MPM是Apache2.0中影响性能的最核心特性.
毫不夸张地说,MPM的引入是Apache 2.0最重要的变化.大家知道,Apache是基于模块化的设计,而Apache 2.0更扩展了模块化设计到Web服务器的最基本功能.服务器装载了一种多道处理模块,负责绑定本机网络端口、接受请求,并调度子进程来处理请求.扩展模块化设计有两个重要好处:
 apache可以更简洁、有效地支持多种操作系统; 务器可以按站点的特殊需要进行自定制.  在用户级,MPM看起来和其它Apache模块非常类似.主要区别是在任意时刻只能有一种MPM被装载到服务器中. 下面以Linux RedHat AS3为平台,演示一下在Apache 2.0中如何指定MPM.
# wget http://archive.apache.org/dist/httpd/httpd-2.0.52.tar.bz2 # tar jxvf httpd-2.0.52.tar.bz2 # cd httpd-2.0.52 # ./configure ——help|grep mpm  显示如下:
——with-mpm=MPM Choose the process model for Apache to use. MPM={beos|worker|prefork|mpmt\_os2| perchild|leader|threadpool}  上述操作用来选择要使用的进程模型,即哪种MPM模块.Beos、mpmt_os2分别是BeOS和OS/2上缺省的MPM, perchild主要设计目的是以不同的用户和组的身份来运行不同的子进程.这在运行多个需要CGI的虚拟主机时特别有用,会比1.3版中的SuExec 机制做得更好.leader和threadpool都是基于worker的变体,还处于实验性阶段,某些情况下并不会按照预期设想的那样工作,所以 Apache官方也并不推荐使用.因此,我们主要阐述prefork和worker这两种和性能关系最大的产品级MPM.
prefork的工作原理 如果不用“——with-mpm”显式指定某种MPM,prefork就是Unix平台上缺省的MPM.它所采用的预派生子进程方式也是 Apache 1.3中采用的模式.prefork本身并没有使用到线程,2.0版使用它是为了与1.3版保持兼容性;另一方面,prefork用单独的子进程来处理不同的请求,进程之间是彼此独立的,这也使其成为最稳定的MPM之一.
prefork的工作原理是,控制进程在最初建立“StartServers”个子进程后,为了满足MinSpareServers设置的需要创建一个进程,等待一秒钟,继续创建两个,再等待一秒钟,继续创建四个……如此按指数级增加创建的进程数,最多达到每秒32个,直到满足 MinSpareServers设置的值为止.这就是预派生（prefork）的由来.这种模式可以不必在请求到来时再产生新的进程,从而减小了系统开销以增加性能.
worker的工作原理 相对于prefork,worker是2.0 版中全新的支持多线程和多进程混合模型的MPM.由于使用线程来处理,所以可以处理相对海量的请求,而系统资源的开销要小于基于进程的服务器.但是, worker也使用了多进程,每个进程又生成多个线程,以获得基于进程服务器的稳定性.这种MPM的工作方式将是Apache 2.0的发展趋势. worker的工作原理是,由主控制进程生成“StartServers”个子进程,每个子进程中包含固定的ThreadsPerChild 线程数,各个线程独立地处理请求.同样,为了不在请求到来时再生成线程,MinSpareThreads和MaxSpareThreads设置了最少和最多的空闲线程数;而MaxClients设置了所有子进程中的线程总数.如果现有子进程中的线程总数不能满足负载,控制进程将派生新的子进程.
下面我以worker模式进行编译安装
# ./configure --prefix=/usr/local/apache --with-mpm=worker --enable-so# #注释（让它支持DSO功能,这样以后可以动态加载模块）# make# make install# cd /usr/local/apache/conf# vi httpd.</description>
    </item>
    
    <item>
      <title>CSS十条速记口诀</title>
      <link>https://phpgao.github.io/10_css_mnemonics.html</link>
      <pubDate>Thu, 10 Apr 2014 15:44:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/10_css_mnemonics.html</guid>
      <description>如果在用CSS设计布局时遇到BUG，请认真阅读以下内容，非常容易记忆的，不知道哪位高人把CSS BUG编成了顺口溜了！看看好不好记住呢？
 IE边框若显若无，须注意，定是高度设置已忘记 浮动产生有缘故，若要父层包含住，紧跟浮动要清除，容器自然显其中 三像素文本慢移不必慌，高度设置帮你忙 兼容各个浏览须注意，默认设置行高可能是杀手 独立清除浮动须铭记，行高设无，高设零，设计效果兼浏览 学布局须思路，路随布局原理自然直，轻松驾驭html，流水布局少hack，代码清爽，兼容好，友好引擎喜欢迎。 所有标签皆有源，只是默认各不同，span是无极，无极生两仪—内联和块级，img较特殊，但也遵法理，其他只是改造各不同，一个*号全归原，层叠样式理须多练习，万物皆规律。 图片链接排版须小心，图片链接文字链接若对齐，padding和vertical-align:middle要设定，虽差微细倒无妨。 IE浮动双边距，请用display：inline拘。 列表横向排版，列表代码须紧靠，空隙自消须铭记。 (转自php100)  </description>
    </item>
    
    <item>
      <title>PHP方法总结</title>
      <link>https://phpgao.github.io/php.html</link>
      <pubDate>Thu, 10 Apr 2014 15:43:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php.html</guid>
      <description>编程时间长了，大家见过很多函数功能吧，比如获取用户IP等等，现在我将常用的PHP函数做个总结，方便大家COPY和使用。
&amp;lt;?php//获取用户IPfunction getIp(){$ip = &amp;quot;&amp;quot;;if (getenv(&#39;HTTP_CLIENT_IP&#39;) &amp;amp;&amp;amp; strcasecmp(getenv(&#39;HTTP_CLIENT_IP&#39;), &#39;unknow&#39;)) {$ip = getenv(&#39;HTTP_CLIENT_IP&#39;);} elseif (getenv(&#39;REMOTE_ADD&#39;) &amp;amp;&amp;amp; strcasecmp(getenv(&#39;REMOTE_ADD&#39;), &#39;unknow&#39;)) {$ip = getenv(&#39;REMOTE_ADD&#39;);} elseif (isset($_SERVER[&#39;REMOTE_ADDR&#39;]) &amp;amp;&amp;amp; strcasecmp($_SERVER[&#39;REMOTE_ADDR&#39;], &#39;unknow&#39;)) {$ip = $_SERVER[&#39;REMOTE_ADDR&#39;];}return $ip;}//快速替换字符串//$arrayName = array(&#39;h&#39;=&amp;gt;&#39;s&#39;,&#39;o&#39;=&amp;gt;&#39;t&#39;,&#39;l&#39;=&amp;gt;&#39;xx&#39;);//echo strsReplace(&#39;hello&#39;,$arrayName);function strsReplace($str, $replaces){$subject=$str;foreach ($replaces as $k =&amp;gt; $v)$subject = str_replace($k, $v, $subject);return $subject;}//规范文件名//$filename=&#39;&amp;quot;&amp;lt;&amp;gt;/\\\asda/.,psd|&amp;quot;&#39;;//echo tripFilename($filename);function tripFilename($filename){//$s=array(&amp;quot;/&amp;quot;,&amp;quot;\\&amp;quot;,&amp;quot;?</description>
    </item>
    
    <item>
      <title>WP常用SQL总结</title>
      <link>https://phpgao.github.io/wordpress_sql.html</link>
      <pubDate>Wed, 02 Apr 2014 15:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/wordpress_sql.html</guid>
      <description>运行SQL一定要备份，以防万一！先来看看每个表的功能吧 wp_commentmeta：存储评论的元数据 wp_comments：存储评论 wp_links：存储友情链接（Blogroll） wp_options：存储WordPress系统选项和插件、主题配置 wp_postmeta：存储文章（包括页面、上传文件、修订）的元数据 wp_posts：存储文章（包括页面、上传文件、修订） wp_terms：存储每个目录、标签 wp_term_relationships：存储每个文章、链接和对应分类的关系 wp_term_taxonomy：存储每个目录、标签所对应的分类 wp_usermeta：存储用户的元数据 wp_users：存储用户信息 删除残留垃圾数据 使用WordPress经常换主题删主题，装插件删插件很正常，但是简单的删除并不彻底，数据库会有残留，多余的数据保留在post_meta表格里，久而久之就成了一堆可观的垃圾。可使用下面的SQL语句来清除不需要的postmeta值。有益于加快数据库运行速度，减小数据。 执行SQL语句
DELETE FROM wp_postmeta WHERE meta_key = &#39;_edit_lock&#39;;DELETE FROM wp_postmeta WHERE meta_key = &#39;_edit_last&#39;; 删除草稿修订版本 在WordPress后台中编辑文章时，系统会自动保存许多修订的副本。过多的修订记录会加重数据库的负担并造成了资源的浪费。数据库越来越庞大，增加了数据检索影响页面的加载时间。 执行SQL语句
DELETE a,b,c FROM wp_posts aLEFT JOIN wp_term_relationships b ON (a.ID = b.object_id)LEFT JOIN wp_postmeta c ON (a.ID = c.post_id)WHERE a.post_type = &#39;revision&#39; 注意：此方法将删除所有的文章的所有修订版，包括相关的meta数据。
处理未使用的标签 在WordPress数据库中，如果你使用一个查询语句手动来删除旧的文章，旧的标签却仍然会保留并在你的标签云/列表中出现。你可以使用下面的方法识别未使用的标签并将它删除。 执行SQL语句
SELECT * FROM wp_terms wtINNER JOIN wp_term_taxonomy wtt ON wt.</description>
    </item>
    
    <item>
      <title>dede栏目路径自动生成</title>
      <link>https://phpgao.github.io/dede_catalog.html</link>
      <pubDate>Sat, 29 Mar 2014 15:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/dede_catalog.html</guid>
      <description>&lt;p&gt;抽空写了个这。。。虽然很头大，但是还是写完了。 下面由我来翻译下面这一大段话，首先，函数使用了PINYIN函数，将栏目名称转化成英文缩写，剩下的工作就是拼接和查询了，其实原理很简单。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>彻底解决WP中文标签404错误</title>
      <link>https://phpgao.github.io/chinese_tag_404.html</link>
      <pubDate>Wed, 19 Mar 2014 15:38:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/chinese_tag_404.html</guid>
      <description>找到网站个目录下文件夹：wp-include文件夹下的class-wp.php，定位此代码段（V3.6在144行）
老高温馨提示：使用本教程前请备份数据库及相关文件if ( isset($_SERVER[&amp;#39;PATH_INFO&amp;#39;]) ) $pathinfo = $_SERVER[&amp;#39;PATH_INFO&amp;#39;]; else $pathinfo = &amp;#39;&amp;#39;; $pathinfo_array = explode(&amp;#39;?&amp;#39;, $pathinfo); $pathinfo = str_replace(&amp;#34;%&amp;#34;, &amp;#34;%25&amp;#34;, $pathinfo_array[0]); $req_uri = $_SERVER[&amp;#39;REQUEST_URI&amp;#39;]; 修改为 if ( isset($_SERVER[&amp;#39;PATH_INFO&amp;#39;]) ) $pathinfo = mb_convert_encoding($_SERVER[&amp;#39;PATH_INFO&amp;#39;], &amp;#34;UTF-8&amp;#34;, &amp;#34;GBK&amp;#34;); else $pathinfo = &amp;#39;&amp;#39;; $pathinfo_array = explode(&amp;#39;?&amp;#39;, $pathinfo); $pathinfo = str_replace(&amp;#34;%&amp;#34;, &amp;#34;%25&amp;#34;, $pathinfo_array[0]); $req_uri = mb_convert_encoding($_SERVER[&amp;#39;REQUEST_URI&amp;#39;], &amp;#34;UTF-8&amp;#34;, &amp;#34;GBK&amp;#34;); 至此，wordpress已经学会读中文了。
还有一种解决方式，即给每一个标签都设置一个英文别名，这样设置的标签还是不能使用中文，可以使用下面的代码将所有的标签格式化：
&amp;lt;?php header(&amp;#34;Content-type: text/html; charset=utf-8&amp;#34;); // 修改:LAOGAO https://blog.phpgao.com/ define(&amp;#39;MYSQL_HOSTNAME&amp;#39;, &amp;#39;localhost&amp;#39;); define(&amp;#39;MYSQL_USERNAME&amp;#39;, &amp;#39;yourusername&amp;#39;); define(&amp;#39;MYSQL_PASSWORD&amp;#39;, &amp;#39;yourpassword&amp;#39;); define(&amp;#39;MYSQL_DATABASE&amp;#39;, &amp;#39;yourdatabase&amp;#39;); define(&amp;#39;MYSQL_TABLEPRE&amp;#39;, &amp;#39;wp_&amp;#39;); // 表前缀 error_reporting(E_ALL); ini_set(&amp;#39;display_errors&amp;#39;, &amp;#39;On&amp;#39;); $link = mysql_connect(MYSQL_HOSTNAME, MYSQL_USERNAME, MYSQL_PASSWORD); if (!</description>
    </item>
    
    <item>
      <title>程序员的几种状态</title>
      <link>https://phpgao.github.io/programmers_tragedy.html</link>
      <pubDate>Tue, 18 Mar 2014 15:37:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/programmers_tragedy.html</guid>
      <description>程序员在找Bug 中！
程序员找到Bug了！！
最后，程序员修好了这个Bug 以为可以下班去吃饭了的时候~~~
终于，程序员收到了加班通知</description>
    </item>
    
    <item>
      <title>wordpress自动生成文章目录</title>
      <link>https://phpgao.github.io/auto_index.html</link>
      <pubDate>Sun, 16 Mar 2014 15:20:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/auto_index.html</guid>
      <description>看过百度百科的同学都知道，如果百科文章比较长，那么他会生成一个目录，不仅增强了用户体验，还为文章引入了锚点内链，对SEO优化起到了十分积极的作用。
请不要以为这个功能很复杂，其实目录功能只是牵扯到一个正则，一个JS和一个CSS而已，对于我们wordpress来说，很多插件已经实现了此功能。
老高@PHPer使用的是一款名叫Content Index for WordPress的国人自制插件，功能强大，使用方便。
Content Index for WordPress 安装 wordpress内置的插件管理器搜索&amp;quot;Content Index for WordPress&amp;quot;，安装即可。
使用 安装后请至wordpress后台-&amp;gt;设置-&amp;gt;文章内索引： 老高@PHPer使用如下配置：
开启 插件默认对所有文章关闭，如果你想在某一篇文章中使用目录，请在编辑日志页面勾选  在此文章/页面中开启
 Tips 也许你已经发现了，PHPer@老高使用了锚点之间的平滑滚动，如果你也希望实现此效果，请将下面的代码引入你的文章模板中
$(document).ready(function() {$(&#39;a[href*=#]&#39;).click(function() {if (location.pathname.replace(/^\//, &#39;&#39;) == this.pathname.replace(/^\//, &#39;&#39;) &amp;amp;&amp;amp; location.hostname == this.hostname) {var $target = $(this.hash);$target = $target.length &amp;amp;&amp;amp; $target || $(&#39;[name=&#39; + this.hash.slice(1) + &#39;]&#39;);if ($target.length) {var targetOffset = $target.offset().top;$(&#39;html,body&#39;).animate({scrollTop: targetOffset},1000);return false;}}});}); 注意 可能你还没发现，上面的代码会出现一些小问题，比如你的网站留言也会出现某些锚点，点击它们将会出现很多意想不到的效果，所以我们需要将锚点控制在目录范围内 因此，我们需要在第二行的Jquery代码做一些修改 $(&#39;a[href*=#]&#39;).</description>
    </item>
    
    <item>
      <title>HTTP状态码详解</title>
      <link>https://phpgao.github.io/http_status_code.html</link>
      <pubDate>Sat, 15 Mar 2014 15:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/http_status_code.html</guid>
      <description>什么是HTTP状态码 HTTP状态码（HTTP Status Code）是用以表示网页服务器HTTP响应状态的3位数字代码。它由 RFC 2616 规范定义的，并得到RFC 2518、RFC 2817、RFC 2295、RFC 2774、RFC 4918等规范扩展。所有状态码的第一个数字代表了响应的五种状态之一。
状态码的具体含义 1xx 消息
这一类型的状态码，代表请求已被接受，需要继续处理。这类响应是临时响应，只包含状态行和某些可选的响应头信息，并以空行结束。由于 HTTP/1.0 协议中没有定义任何 1xx 状态码，所以除非在某些试验条件下，服务器禁止向此类客户端发送 1xx 响应。
100
客户端应当继续发送请求。这个临时响应是用来通知客户端它的部分请求已经被服务器接收，且仍未被拒绝。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。服务器必须在请求完成后向客户端发送一个最终响应。
101
服务器已经理解了客户端的请求，并将通过Upgrade 消息头通知客户端采用不同的协议来完成这个请求。在发送完这个响应最后的空行后，服务器将会切换到在Upgrade 消息头中定义的那些协议。 只有在切换新的协议更有好处的时候才应该采取类似措施。例如，切换到新的HTTP 版本比旧版本更有优势，或者切换到一个实时且同步的协议以传送利用此类特性的资源。
102
由WebDAV（RFC 2518）扩展的状态码，代表处理将被继续执行。
2xx 成功 这一类型的状态码，代表请求已成功被服务器接收、理解、并接受。
200
请求已成功，请求所希望的响应头或数据体将随此响应返回。
201
请求已经被实现，而且有一个新的资源已经依据请求的需要而建立，且其 URI 已经随Location 头信息返回。假如需要的资源无法及时建立的话，应当返回 &amp;lsquo;202 Accepted&amp;rsquo;。
202
服务器已接受请求，但尚未处理。正如它可能被拒绝一样，最终该请求可能会也可能不会被执行。在异步操作的场合下，没有比发送这个状态码更方便的做法了。 返回202状态码的响应的目的是允许服务器接受其他过程的请求（例如某个每天只执行一次的基于批处理的操作），而不必让客户端一直保持与服务器的连接直到批处理操作全部完成。在接受请求处理并返回202状态码的响应应当在返回的实体中包含一些指示处理当前状态的信息，以及指向处理状态监视器或状态预测的指针，以便用户能够估计操作是否已经完成。
203
服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝。当前的信息可能是原始版本的子集或者超集。例如，包含资源的元数据可能导致原始服务器知道元信息的超级。使用此状态码不是必须的，而且只有在响应不使用此状态码便会返回200 OK的情况下才是合适的。
204
服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。响应可能通过实体头部的形式，返回新的或更新后的元信息。如果存在这些头部信息，则应当与所请求的变量相呼应。 如果客户端是浏览器的话，那么用户浏览器应保留发送了该请求的页面，而不产生任何文档视图上的变化，即使按照规范新的或更新后的元信息应当被应用到用户浏览器活动视图中的文档。 由于204响应被禁止包含任何消息体，因此它始终以消息头后的第一个空行结尾。
205
服务器成功处理了请求，且没有返回任何内容。但是与204响应不同，返回此状态码的响应要求请求者重置文档视图。该响应主要是被用于接受用户输入后，立即重置表单，以便用户能够轻松地开始另一次输入。 与204响应一样，该响应也被禁止包含任何消息体，且以消息头后的第一个空行结束。
206
服务器已经成功处理了部分 GET 请求。类似于 FlashGet 或者迅雷这类的 HTTP 下载工具都是使用此类响应实现断点续传或者将一个大文档分解为多个下载段同时下载。 该请求必须包含 Range 头信息来指示客户端希望得到的内容范围，并且可能包含 If-Range 来作为请求条件。 响应必须包含如下的头部域： Content-Range 用以指示本次响应中返回的内容的范围；如果是 Content-Type 为 multipart/byteranges 的多段下载，则每一 multipart 段中都应包含 Content-Range 域用以指示本段的内容范围。假如响应中包含 Content-Length，那么它的数值必须匹配它返回的内容范围的真实字节数。 Date ETag 和/或 Content-Location，假如同样的请求本应该返回200响应。 Expires, Cache-Control，和/或 Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。 假如本响应请求使用了 If-Range 强缓存验证，那么本次响应不应该包含其他实体头；假如本响应的请求使用了 If-Range 弱缓存验证，那么本次响应禁止包含其他实体头；这避免了缓存的实体内容和更新了的实体头信息之间的不一致。否则，本响应就应当包含所有本应该返回200响应中应当返回的所有实体头部域。 假如 ETag 或 Last-Modified 头部不能精确匹配的话，则客户端缓存应禁止将206响应返回的内容与之前任何缓存过的内容组合在一起。 任何不支持 Range 以及 Content-Range 头的缓存都禁止缓存206响应返回的内容。</description>
    </item>
    
    <item>
      <title>新思路解决网站301重定向</title>
      <link>https://phpgao.github.io/301_redirect.html</link>
      <pubDate>Fri, 14 Mar 2014 15:15:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/301_redirect.html</guid>
      <description>对于一个新手站长来说，当你选定了主域名后，首先要做的就是将另一个域名301重定向至主域名，这样有利于增加首页的权重。当然，301重定向技术还有很多用处，但本文主要阐述相同域名间的301跳转。
什么是301重定向？ 其实很简单，当你的页面需要删除或者移动时，如果只是一个简单的跳转，虽然说在功能上实现了网页的重定向，但是这样做是对搜索引擎很不利的。也就是说，搜索引擎看不懂这样的跳转，他只会认为你的网页内容空了，所以必须要通过一个信号来告诉搜索引擎这个地址确实改变了，这个信号的实现就是3××，即以3开头的HTTP状态码(状态码参见 HTTP状态码详解)。
测试方法 了解了301重定向后，下面几个网站可以提供301跳转的检测
 中文：http://tool.chinaz.com/pagestatus/?url=phpgao.com 英文：http://www.seoconsultants.com/tools/check-server-headers-tool/  实现方法 废话不多说，下面我们探讨一下301重定向的具体实现方法：
linux主机的301重定向 linux主机非常适合wordpress，因为他有一个强大的**.htaccess**文件，当浏览器或搜索引擎spider发送一个页面请求时，Web服务器就会检查**.htaccess**文件，这个文件指明了如何处理页面请求，通过修改他就可以告知搜索引擎某个页面是302转向(临时跳转)还是301重定向(永久性跳转)。
下面的例子的作用是将phpgao.com的请求301重定向至www.phpgao.com
Options +FollowSymLinksRewriteEngine onrewritecond %{http_host} ^phpgao.com$ [nc]rewriterule ^(.*)$ https://blog.phpgao.com/$1 [r=301,nc]或RewriteEngine OnRewriteCond %{HTTP_HOST} !^phpgao.com$ [NC]RewriteRule ^(.*)$ https://blog.phpgao.com/$1 [L,R=301] windows主机的301重定向 windows主机基本使用的都是IIS服务器，所以需要服务器支持ISAPI_Rewrite，他是类似Apache mod_rewrite功能的第三方Rewrite组件，使用httpd.ini为配置文件,一般空间都是支持的，如果是自己的服务器，那么可能需要你自己安装此组件，所需组件可以在http://www.isapirewrite.com/下载，该组件有免费Lite版本以及商业版，免费版只支持全局的httpd.conf 配置，商业版支持用户自定义httpd.ini文件，支持目录和站点级的类似.htaccess的配置，现在最新版本是3.0。例子如下：
# ISAPI_Rewrite 1.3 版本[ISAPI_Rewrite]# 3600 = 1 hourCacheClockRate 3600RepeatLimit 32RewriteCond Host: ^phpgao\.com$RewriteRule (.*) http\://www\.phpgao\.com$1 [I,R]# ISAPI_Rewrite 2.x 版本[ISAPI_Rewrite]# 3600 = 1 hourCacheClockRate 3600RepeatLimit 32RewriteCond Host: ^phpgao\.</description>
    </item>
    
    <item>
      <title>PHP教程</title>
      <link>https://phpgao.github.io/php_lessons_online.html</link>
      <pubDate>Thu, 13 Mar 2014 15:12:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_lessons_online.html</guid>
      <description>最近在线教程如雨后春笋，现在我把我看过的PHP教程分享给大家
韩顺平 PHP入门到精通
燕十八 PHP高手之路
参考文档 链接: http://pan.baidu.com/s/1kTgcxHP
密码: x00l</description>
    </item>
    
    <item>
      <title>使用debug_backtrace()做PHP调试</title>
      <link>https://phpgao.github.io/debug_with_backtrace.html</link>
      <pubDate>Tue, 11 Mar 2014 15:09:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/debug_with_backtrace.html</guid>
      <description>问题？ 今天迁站的时候PHP突然报错：  is_readable() [function.is-readable]: open_basedir restriction in effect. File(D:\phpnow\vhosts\wordpress.com/wp-content/plugins/D:\phpnow\vhosts\wordpress.com\wp-content\plugins\crayon-syntax-highlighter/trans/crayon-syntax-highlighter-zh_CN.mo) is not within the allowed path(s): (D:\phpnow\vhosts\wordpress.com;C:\Windows\Temp;) in D:\phpnow\vhosts\wordpress.com\wp-includes\l10n.php on line 339 好吧，看来是crayon-syntax-highlighter插件出错了，下面我们就一起找找出错的地方吧。
 如何解决 确定出错地点 根据出错提示我们找到了 D:\phpnow\vhosts\wordpress.com\wp-includes\l10n.php的第339行，代码如下：
if ( !is_readable( $mofile ) ) return false; 这个$mofile哪里来的呢?把整个函数贴出来找找看！
function load_textdomain( $domain, $mofile ) {global $l10n;$plugin_override = apply_filters( &#39;override_load_textdomain&#39;, false, $domain, $mofile );if ( true == $plugin_override ) {return true;}do_action( &#39;load_textdomain&#39;, $domain, $mofile );$mofile = apply_filters( &#39;load_textdomain_mofile&#39;, $mofile, $domain );if ( !</description>
    </item>
    
    <item>
      <title>PHP经典函数收集</title>
      <link>https://phpgao.github.io/php_functions.html</link>
      <pubDate>Mon, 10 Mar 2014 15:05:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/php_functions.html</guid>
      <description>PHP经典函数 sys_getloadavg() 这个函数返回当前系统的负载均值信息（当然 Windows 下不适用），详细文档可以翻阅 PHP的相关文档。文档中有段示例代码，基本上也就能看出它的用途了。
$load = sys_getloadavg();if ($load[0] &amp;gt; 80) {header(&#39;HTTP/1.1 503 Too busy, try again later&#39;);die(&#39;Server too busy. Please try again later.&#39;);}//PS，如果“很不幸”你的 PHP 环境中没有这个函数，可以考虑使用下面这段代码if (!function_exists(&#39;sys_getloadavg&#39;)) {function sys_getloadavg(){$loadavg_file = &#39;/proc/loadavg&#39;;if (file_exists($loadavg_file)) {return explode(chr(32),file_get_contents($loadavg_file));}return array(0,0,0);}} debug_backtrace兄弟 使用请参考使用debug_backtrace()做PHP调试
get_browser() 该方法参考一个名叫browscap.ini的文件，该文件收录了各种浏览器信息，通过比对实现查找客户浏览器的功能。 两个使用方法：
1.下载最新的browscap.ini,放入PHP的安装目录或者C:\Windows文件夹下
下载地址
2.在PHP.INI文件中加入以下配置
[browscap];https://blog.phpgao.com/classic_code/browscap = php_browscap.ini 3.使用代码如下
http://www.phpgao.com&amp;lt;/a&amp;gt;print_r($browser); 返回结果如下</description>
    </item>
    
    <item>
      <title>怎样挑笔记本</title>
      <link>https://phpgao.github.io/laptop.html</link>
      <pubDate>Sun, 09 Mar 2014 15:00:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/laptop.html</guid>
      <description>老高的笔记本是08年大一时候在赛格电脑城买的，型号为三星R467-DSOC，该机型实属坑爹，最后发现三星也很坑爹，以后坚决抵制！ 废话不说，直接入正题！
细数悲剧  三星的性价比不高，相比于华硕，Acer，美国的良心企业&amp;ndash;联想等牌子，因为三星的笔记本都是用的自家的配件，所以成本相对低一些，卖那么贵买了不值得。 R467的BIOS不支持WIN7的激活，貌似三星的很多型号也都不能激活，解决办法只有使用有中毒风险的动态SLIC加载方法或者刷BIOS，很麻烦，不过挺练手，我的R467好像是刷了03NM.WPH这个文件就能使用Windows Loader完美激活了。工具我还留着，需要的可以在我的微博@我。 Express Card 借口被砍。。。现在想扩展个USB3.0或者3G网卡都不行，泪奔~~ 三星笔记本的屏幕真的很一般。 机子不好拆，散热差。 最恶心的就是&amp;mdash;&amp;mdash;这款机子的无线网卡天线会影响到内置的麦克风，所以和老婆大人视频或语音的的时候总会发出很讨厌的电流声，尤其是看视频或者下载东西时。解决办法就是另买一个USB无线网卡，使用麦克风的时候将自带的网卡禁用了就OK，然后使用USB网卡即可(那个电流声太恶心了，滋滋滋滋滋滋滋滋！和蚊子一样) 触摸板设计太渣了，手感很差。 没有蓝牙功能，本来想自己动手加一个内置的蓝牙模块，结果拆机后主板几乎没有预留一个能扩展的地方。  以后买电脑注意事项  是否是新机子 //检查味道，USB口，硬盘使用时间 CPU的虚拟化支持 //牵扯到虚拟机的性能 usb3.0接口有几个 //越多越好 前端总线与内存频率与大小是否一致 //非必须 硬盘转速（最好7200转）与缓存（越大越好） //ssd更好 集显独显的选择 //女生推荐集显 最好不要带正版系统 //这个是不需要的成本 显示器品牌、可视角度、色域、对比度等 //主观性比较大 显示器有无坏点、亮点 显示器的旋转角度越大越好 //演示的时候很有用 有线网卡是否有信号灯 //网线排错有用，但是费电 功耗估算 106W //主要是看散热能不能够跟上 是否有蓝牙 //扩展方便,bluetooth3.0最好 拆机是否方便 //高手勿喷 摄像头是否清晰，麦克风是否有杂音 //其实无所谓 有木有MODEM接口和PCI-E扩展口 扬声器的音质 在这儿找找天梯图看看吧 eg. 笔记本处理器性能天梯图,笔记本显卡性能天梯图 检测工具：  撸大湿ps,这款机子其实还好，笔记本用了这么多年了没出啥大问题，现在除了有点烫其他都还好！到底在一起这么多年了啊~</description>
    </item>
    
    <item>
      <title>网站无法选择和复制文字</title>
      <link>https://phpgao.github.io/rightclick-enable.html</link>
      <pubDate>Fri, 07 Mar 2014 14:55:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/rightclick-enable.html</guid>
      <description>有些网站真是可恶，把右键屏蔽了不给复制，这样还不行（因为可以使用快捷键CTRL+C复制） 他们竟然不让我们选择文字。。。这样下来我们既不能复制，连源代码都不能看了。是可忍孰不可忍，既然这样，那我就不客气了！
找到病根是关键 原来是JS捣的鬼 纯html是无法实现屏蔽右键等功能的，所以很简单就能想到是js的问题，那么我们就找找到底是那些代码段使得我们无法使用邮件功能呢？ 既然右键被禁止了，那我们如何才能看到网页的源代码呢？ 其实很简单，PHP@老高建议你使用chrome浏览器打开你想要破解的网站，使用快捷键CTRL+U即可轻易查看网页的源代码！怎么样，很简单吧？ 好了既然我们已经找到源代码，那就开始找那个害人的代码段吧！
代码一 这个是比较难找的代码，一般隐藏在网页的头部或者藏在某些引用的js文件中 &amp;lt;SCRIPT language=javascript type=text/javascript&amp;gt;&amp;lt;!--document.oncontextmenu=new Function(&#39;event.returnValue=false;&#39;);//屏蔽右键document.onselectstart=new Function(&#39;event.returnValue=false;&#39;);//屏蔽选择--&amp;gt;&amp;lt;/SCRIPT&amp;gt; 代码二 这个比较容易找到,直接找到标签，之后就是此句，与代码一异曲同工
&amp;lt;body oncontextmenu=&amp;quot;self.event.returnValue=false&amp;quot; onselectstart=&amp;quot;return false&amp;quot;&amp;gt; 解决方法 IE浏览器 使用IE的童鞋可以试试在浏览器的地址栏输入 javascript:alert(document.oncontextmenu=document.onselectstart=&amp;quot;OK&amp;quot;) 或者
javascript:alert(document.body.oncontextmenu=document.body.onselectstart=&amp;quot;OK&amp;quot;) 之后弹出对话框，点击确认即可！现在点击右键或者选择文字试试，是不是已经被破解了？ 请注意！该方法可能已经失效，因为新一代浏览器对安全性有了很大的提高，所以在地址栏输入脚本可能会被禁止！
接下来就是将他删除掉即可： 在代码上点击右键：选择第二项Edit Attribute,将其属性删除，结果代码变成这样： 不用怀疑了，刚才限制的功能已经恢复啦！
其他浏览器 以chrome为例 首先，在被屏蔽的网站上点击F12，出现了如下图所示代码(注：老高@PHPer使用的是chrome v30，不同版本的界面留有不同)
当然，您的火眼金睛可能立即发现了蓝色标记的一行代码
&amp;lt;body oncontextmenu=”self.event.returnValue=false” onselectstart=”return false”&amp;gt; 接下来就是将他删除掉即可：
在代码上点击右键：选择第二项Edit Attribute,将其属性删除，不用怀疑了，限制的功能已经恢复啦！
终极方法 在浏览器中将以下代码存为书签，名为解锁，在被禁网址中点击一下解锁，即可解开~
javascript:(function() { function R(a){ona = &amp;quot;on&amp;quot;+a; if(window.addEventListener) window.addEventListener(a, function (e) { for(var n=e.originalTarget; n; n=n.</description>
    </item>
    
    <item>
      <title>开启phpMyAdmin的远程登录</title>
      <link>https://phpgao.github.io/phpmyadmin_remote_server.html</link>
      <pubDate>Wed, 05 Mar 2014 14:49:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/phpmyadmin_remote_server.html</guid>
      <description>phpMyAdmin一般只能本地登录，即地址为localhost，如果想管理如192.168.1.254（非本机IP）的mysql应该如何做到呢？其实很简单，phpMyAdmin已经实现，但是默认并没有开启此功能。 3步搞定
 在phpMyAdmin目录下libraries目录中config.default.php文件并打开 找到此选项$cfg[&#39;AllowArbitraryServer&#39;] = false; 将false改为true 补充： 如果登录的是本地服务器，那么登录的时候可以把服务器一栏留空。  </description>
    </item>
    
    <item>
      <title>开发中经常用到的代码</title>
      <link>https://phpgao.github.io/frequently-used-code.html</link>
      <pubDate>Mon, 03 Mar 2014 14:41:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/frequently-used-code.html</guid>
      <description>[TOC]
短链接 http://surl.sinaapp.com/引入百度CDN公共库 地址:http://t.cn/zYDC8wj引入文件 &amp;lt;script src=&amp;quot;http://libs.baidu.com/jquery/1.9.0/jquery.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&amp;quot;http://libs.baidu.com/bootstrap/2.0.4/js/bootstrap.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;link href=&amp;quot;http://libs.baidu.com/bootstrap/2.0.4/css/bootstrap.min.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;&amp;lt;script src=&amp;quot;http://libs.baidu.com/jquerytools/1.2.7/jquery.tools.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; PHP //申明页面编码开启session并设置时区session_start();header(&amp;quot;Content-Type: text/html; charset=UTF-8&amp;quot;);ini_set(&#39;date.timezone&#39;,&#39;Asia/Shanghai&#39;);////windows下这个页面执行时间还是在php.ini里控制，修改max_execution_time。set_time_limit(0);//获取变量的整数值intval(&#39;adasdasd&#39;);//heredoc==双引号$name=MyName;echo &amp;lt;&amp;lt;&amp;lt;EOTMy name is &amp;quot;$name&amp;quot;. I am printing some $foo-&amp;gt;foo.Now, I am printing some {$foo-&amp;gt;bar[1]}.This should print a capital &#39;A&#39;: \x41EOT;/*以上例程会输出：My name is &amp;quot;MyName&amp;quot;. I am printing some Foo.Now, I am printing some Bar2.This should print a capital &#39;A&#39;: A*///Nowdoc==单引号echo &amp;lt;&amp;lt;&amp;lt;&#39;EOT&#39;My name is &amp;quot;$name&amp;quot;.</description>
    </item>
    
    <item>
      <title>PHP_cURL初始化和执行方法</title>
      <link>https://phpgao.github.io/curl_init.html</link>
      <pubDate>Sun, 02 Mar 2014 14:27:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/curl_init.html</guid>
      <description>这个是采集基础，最好熟悉一下
$ch = curl_init(); # 设定url和把结果返回，是否返回头部 curl_setopt($ch, CURLOPT_URL, &amp;#39;http://www.baidu.com/&amp;#39;); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($this-&amp;gt;ch, CURLOPT_HEADER, 1); # cookie文件设定 curl_setopt($this-&amp;gt;ch, CURLOPT_COOKIEJAR, $cookie_file); curl_setopt($this-&amp;gt;ch, CURLOPT_COOKIEFILE, $cookie_file); # 额外头部 curl_setopt($this-&amp;gt;ch, CURLOPT_HTTPHEADER, array(&amp;#39;User-Agent: Mozilla/5.0&amp;#39;)); # 设定post curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, $poststring); # 连接、执行过期时间 curl_setopt($this-&amp;gt;ch, CURLOPT_CONNECTTIMEOUT, 5); curl_setopt($this-&amp;gt;ch, CURLOPT_TIMEOUT, 30); # 是否跟随301 302 curl_setopt($this-&amp;gt;ch, CURLOPT_FOLLOWLOCATION, 1); curl_setopt($this-&amp;gt;ch, CURLOPT_MAXREDIRS, 10); # refer curl_setopt($this-&amp;gt;ch, CURLOPT_REFERER, $refer); # http版本和端口重用设置 curl_setopt($this-&amp;gt;ch, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_1); curl_setopt($this-&amp;gt;ch, CURLOPT_FORBID_REUSE, 1); # 支持https curl_setopt($this-&amp;gt;ch, CURLOPT_SSL_VERIFYPEER, 0); curl_setopt($this-&amp;gt;ch, CURLOPT_SSL_VERIFYHOST, 0); # 如果需要进行毫秒超时，需要增加： curl_setopt($this-&amp;gt;ch, CURLOPT_NOSIGNAL, 1); # 执行 $response = curl_exec($ch); if(curl_errno($ch)){ curl_error($ch); exit(); } curl_close($ch); </description>
    </item>
    
    <item>
      <title>jQuery平滑分栏标签切换特效</title>
      <link>https://phpgao.github.io/jquery_slider.html</link>
      <pubDate>Sat, 01 Mar 2014 14:03:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/jquery_slider.html</guid>
      <description>此代码简洁明了，层次清晰，有不错的兼容性，很适合作为企业首页的图片轮播！ 实例在这：
http://www.gayadesign.com/scripts/tabbed/原理很简单： 使用TabbedContent.init()检测鼠标是否mouseover，然后调用slideContent滚动下面的内容！
&amp;lt;span style=&amp;quot;color: #ff0000;&amp;quot;&amp;gt;（注意类名的使用，可以在js文件中更改！）&amp;lt;/span&amp;gt;  下载链接：</description>
    </item>
    
    <item>
      <title>让你的IE也支持placeholder属性</title>
      <link>https://phpgao.github.io/placeholder.html</link>
      <pubDate>Fri, 28 Feb 2014 13:32:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/placeholder.html</guid>
      <description>placeholder属性是html5新加入的，所以非现代浏览器当然不会支持了。 已有牛人写了一下jquery插件实现了placeholder
项目主页 https://github.com/mathiasbynens/jquery-placeholder使用方法 html &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;name&amp;quot; placeholder=&amp;quot;e.g. John Doe&amp;quot;&amp;gt;&amp;lt;input type=&amp;quot;email&amp;quot; name=&amp;quot;email&amp;quot; placeholder=&amp;quot;e.g. address@example.ext&amp;quot;&amp;gt;&amp;lt;input type=&amp;quot;url&amp;quot; name=&amp;quot;url&amp;quot; placeholder=&amp;quot;e.g. http://mathiasbynens.be/&amp;quot;&amp;gt;&amp;lt;input type=&amp;quot;tel&amp;quot; name=&amp;quot;tel&amp;quot; placeholder=&amp;quot;e.g. +32 472 77 69 88&amp;quot;&amp;gt;&amp;lt;input type=&amp;quot;password&amp;quot; name=&amp;quot;password&amp;quot; placeholder=&amp;quot;e.g. h4x0rpr00fz&amp;quot;&amp;gt;&amp;lt;input type=&amp;quot;search&amp;quot; name=&amp;quot;search&amp;quot; placeholder=&amp;quot;Search this site…&amp;quot;&amp;gt;&amp;lt;textarea name=&amp;quot;message&amp;quot; placeholder=&amp;quot;Your message goes here&amp;quot;&amp;gt;&amp;lt;/textarea&amp;gt; js这样写： $(&#39;input, textarea&#39;).placeholder(); css提示 这个插件会自动添加一个名为class=&amp;ldquo;placeholder&amp;rdquo; ，如果想自己区分来，那就使用下面的css定义
input, textarea { color: #000; }.placeholder { color: #aaa; } 动手试试吧！</description>
    </item>
    
    <item>
      <title>美化Apache的文件列表</title>
      <link>https://phpgao.github.io/prettify_index.html</link>
      <pubDate>Fri, 28 Feb 2014 07:45:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/prettify_index.html</guid>
      <description>此篇针对apache服务器，其他服务器还在研究中 PC端：
手机端：
此为原帖地址，讲得有点简单了，本人总结并修改了一下，发现只要遵循我的步骤，一定能开启！ (系统不限win,linux)
开启美化文件列表步骤：
 打开Apache的autoindex模块 开启htaccess及includes  &amp;lt;Directory &amp;#34;../htdocs&amp;#34;&amp;gt; Options Indexes FollowSymLinks MultiViews IncludesNoExec AllowOverride All Order allow,deny allow from all 打开ssi(shtml)功能 去注释 AddType text/html .shtml AddOutputFilter INCLUDES .shtml 将压缩包解压至web根目录 enjoy  下载地址提取码：rod5</description>
    </item>
    
    <item>
      <title>nexus5的ROM下载地址</title>
      <link>https://phpgao.github.io/nexus5_rom.html</link>
      <pubDate>Mon, 24 Feb 2014 07:27:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/nexus5_rom.html</guid>
      <description>转自啥论坛忘了：
看到很多同学问ROM哪儿下，还说ROM少， 殊不知谷歌亲儿子最不缺的就是ROM？ 这里给大家稍稍整理了一些名气比较大的，名气小的自己去goo.im下吧。 记住我们手中 Nexus 5 的名字 hammerhead （中文翻译是锤头的意思，这么好的名字smartisan居然不支持，鄙视一个） 进入正题：
CyanogenMod （简称CM） 入口地址： http://download.cyanogenmod.org/?device=hammerhead
SlimKait （简称Slim，这个&amp;hellip;我被GFW墙了，懒得翻出去找，能进去的尽量搬运下吧，这个ROM不错） 入口地址： http://www.slimroms.net/index.php/downloads
Paranoid（简称PA） 入口地址： http://download.paranoidandroid.co/roms/hammerhead/
OmniRom （简称Omni） 入口地址： http://dl.omnirom.org/hammerhead/
mokee （魔趣） 入口地址： http://download.mfunz.com/?device=hammerhead
AOKP 入口地址： http://aokp.co/devices/hammerhead
ChameleonOS （简称ChaOS） 入口地址： http://roms.chameleonos.org/index.php?device=hammerhead
carbon 入口地址： http://carbon-rom.com/downloads/?device=hammerhead
mahdi 入口地址： http://mahdi-rom.androidfilesharing.com/Nexus%205/
clockworkmod （简称CWM，大家进去找Nexus 5，里边有很多大家需要的东西，比如CWM recovery，Gapps等） 入口地址： http://www.clockworkmod.com/rommanager
在goo.im中搜索hammerhead就可以找到很多ROM了，大家可以去看看，这是我搜索好的： http://goo.im/devs
附：Nexus 5 XDA论坛入口地址，这里才是金库： http://forum.xda-developers.com/google-nexus-5
整理的不全面，但是足够用了，这些都是有官网的ROM团队，还有些没有的ROM团队做的也很好，大多都发在goo.im中，建议大家去看看。</description>
    </item>
    
    <item>
      <title>favicon优化</title>
      <link>https://phpgao.github.io/favicon.html</link>
      <pubDate>Fri, 14 Feb 2014 07:19:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/favicon.html</guid>
      <description>现代浏览器会自动识别favicon，只要放到网站根目录就OK，但是完美一点的话就参考以下代码：
&amp;lt;link href=&amp;#34;/favicon.ico&amp;#34; mce_href=&amp;#34;/favicon.ico&amp;#34; rel=&amp;#34;shortcut icon&amp;#34; type=&amp;#34;image/x-icon&amp;#34; /&amp;gt; &amp;lt;link href=&amp;#34;/favicon.ico&amp;#34; mce_href=&amp;#34;/favicon.ico&amp;#34; rel=&amp;#34;bookmark&amp;#34; type=&amp;#34;image/x-icon&amp;#34; /&amp;gt; &amp;lt;link rel=&amp;#34;apple-touch-icon&amp;#34; href=&amp;#34;https://blog.phpgao.com/usr/themes/default/img/apple-touch-icon-57x57.png&amp;#34; /&amp;gt; &amp;lt;link rel=&amp;#34;apple-touch-icon&amp;#34; sizes=&amp;#34;72x72&amp;#34; href=&amp;#34;https://blog.phpgao.com/usr/themes/default/img/apple-touch-icon-72x72.png&amp;#34; /&amp;gt; &amp;lt;link rel=&amp;#34;apple-touch-icon&amp;#34; sizes=&amp;#34;114x114&amp;#34; href=&amp;#34;https://blog.phpgao.com/usr/themes/default/img/apple-touch-icon-114x114.png&amp;#34; /&amp;gt;&amp;lt;link rel=&amp;#34;apple-touch-icon&amp;#34; sizes=&amp;#34;120x120&amp;#34; href=&amp;#34;https://blog.phpgao.com/usr/themes/default/img/apple-touch-icon-120x120.png&amp;#34; /&amp;gt; &amp;lt;link rel=&amp;#34;apple-touch-icon&amp;#34; sizes=&amp;#34;152x152&amp;#34; href=&amp;#34;https://blog.phpgao.com/usr/themes/default/img/apple-touch-icon-152x152.png&amp;#34; /&amp;gt; 很简单吧，根据rel属性就能判断出来，shortcut icon为默认的图标，bookmark就是加入收藏栏的图标，最后一个就是在IOS系统上使用的图标啦</description>
    </item>
    
    <item>
      <title>开发时遇见的小白用户</title>
      <link>https://phpgao.github.io/little_white.html</link>
      <pubDate>Thu, 13 Feb 2014 07:11:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/little_white.html</guid>
      <description> 打电话过来说网站打不开，网址都输对了，也有显示，但是就是没有登陆的界面。 经过严格的浏览器兼容性测试和功能测试后发现 原来客户将网址输入到了百度的搜索栏中。。。。 打电话过来说网站打不开，网址都输对了，但无显示 经过严格的浏览器兼容性测试和功能测试后发现 原来客户将网址设为快捷方式在桌面上，可能不小心把浏览器窗口拖到了屏幕最下面(看不到界面)，导致双击网页快捷方式后网站打开了，但是看不到，依稀记得远程给客户解决问题时，他已经打开了* 个标签页。。。。 打电话过来说无法登陆，用户名密码都对，就是登不上去 结果发现用户拿错卡了！ 用高新XX的卡来激活华XX的卡。。。。 待续  </description>
    </item>
    
    <item>
      <title>三款文本批量查找替换工具</title>
      <link>https://phpgao.github.io/batch_search_and_replace.html</link>
      <pubDate>Wed, 12 Feb 2014 15:39:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/batch_search_and_replace.html</guid>
      <description>码农必备，全部免费，神器不解释！
超级替换V5.02（UltraReplace）  喜欢：功能繁多，多内容替换是亮点，拖拽功能十分方便，对各种编码支持较好。 吐槽：查找功能好弱啊~  文本批量搜索替换V6.5（Search_and_Replace）  喜欢：功能强大，支持ZIP文件 吐槽：新版旧版变化不大，不支持UTF8  字符查找（FindStr）  喜欢：界面简洁，可以与资源管理器关联，也支持ZIP文件，最重要的是支持UTF8！！ 吐槽：不能拖拽，功能简单。 丢个链接走人~ 解压密码： www.phpgao.com 下载地址：  http://pan.</description>
    </item>
    
    <item>
      <title>wordpress新手应该做的</title>
      <link>https://phpgao.github.io/wordpress_beginner.html</link>
      <pubDate>Wed, 05 Feb 2014 06:47:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/wordpress_beginner.html</guid>
      <description>又重新安装了一次WP，记录一下：
 使用足够安全的账号和密码 写一篇“关于我”的页面放到主页 删除预设的文章和评论 favicon是网站的图标，可以参考这篇文章 等到有&amp;gt;=20篇文章后在开放给搜索引擎 申请一个Akismet的API，并开启它 如果是程序员，推荐安装Crayon Syntax Highlighter高亮你的代码 修改默认的固定连接为 自定义：https://blog.phpgao.com/index.php/%postname%/，这样有利于seo 与URL有关的设置尽量用英文单词或短句，wp对中文支持不太友好 sitemap类的插件还是装一下，不知道这个怎么样 WordPress结构化数据插件 如果你写的东西很有条理，那我建议安装此插件-&amp;ndash;|-&amp;ndash;|文章自动插入目录的插件：Table of Contents Plus 如果你想统计多少人看过你的日志，请试试这个插件 WP-PostViews  博客这个东西的核心是表达，与其花时间搞搞这搞搞那，还不如把文章质量提高提高，写一些有创新性的东西出来，百度呀什么的最喜欢了。</description>
    </item>
    
    <item>
      <title>解决老版世界之窗无法打开插件安装页面</title>
      <link>https://phpgao.github.io/the_world3.html</link>
      <pubDate>Tue, 04 Feb 2014 02:42:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/the_world3.html</guid>
      <description>世界之窗很经典了，chrome没有流行之前这个绝对好用，简单概括一下就是：纯洁、活好，满足了我的几乎所有需求。
 最喜欢的功能(*为360极速也支持)：
   特色 打分     自动填表注册必备 ★★   系统信息查看方便 ★★   直接搜索剪切板里的内容 ★★★   元素查看器 ★★★   alt键快速保存图片 ★★★   鼠标手势 ★★★★★   超级拖拽 ★★★★★    这个浏览器的前瞻性在当时秒掉一片。。。
360在2011-03-15很有眼光的收购了世界之窗,然后推出了360极速浏览器(其实就是世界之窗极速版的翻版嘛) 导致了我现役浏览器为360极速6.0(强制升级被我黑掉了)，表喷我，chrome的速度+手势我实在甩不掉啊。 如今的世界之窗6还在体验中，虽然找到了一点原来的感觉，但是就功能性来说还是抵不过360啊！
废话太多！直接上解决办法：
1、用记事本打开C:\windows\system32\drivers\etc\名为下hosts文件 2、将以下文字复制粘贴入host文件中并保存。
#世界之窗 115.182.38.16 bbs.ioage.com118.145.31.149 www.ioage.com118.145.31.149 media.ioage.com118.145.31.149 pages.ioage.com 希望这个IP能支撑一会儿吧。 不知道10年以后还有没有人继续用世界之窗，我一定会！</description>
    </item>
    
    <item>
      <title>又开始折腾了</title>
      <link>https://phpgao.github.io/imback.html</link>
      <pubDate>Sat, 01 Feb 2014 00:29:00 +0000</pubDate>
      
      <guid>https://phpgao.github.io/imback.html</guid>
      <description>最近买了个空间，继续瞎折腾吧！ 顺便吐槽一下，新版的WP后台很多按钮都用了字体图标，和我用的强制雅黑冲突，好些图表都成方框框，好难看！</description>
    </item>
    
  </channel>
</rss>
